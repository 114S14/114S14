local UILibrary = {}
UILibrary.__index = UILibrary

-- 服务
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- 创建主UI
function UILibrary.new(title)
    local self = setmetatable({}, UILibrary)
    
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "CustomUI"
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    
    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, 600, 0, 400)
    MainFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
    MainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    MainFrame.BorderSizePixel = 0
    MainFrame.Parent = ScreenGui
    
    local dragging, dragInput, dragStart, startPos
    MainFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    MainFrame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    local TitleBar = Instance.new("Frame")
    TitleBar.Size = UDim2.new(1, 0, 0, 30)
    TitleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    TitleBar.Parent = MainFrame
    
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Size = UDim2.new(1, -60, 1, 0)
    TitleLabel.Position = UDim2.new(0, 10, 0, 0)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = title
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.TextSize = 16
    TitleLabel.Parent = TitleBar
    
    local CloseButton = Instance.new("TextButton")
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Position = UDim2.new(1, -30, 0, 0)
    CloseButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.Parent = TitleBar
    
    local TabFrame = Instance.new("Frame")
    TabFrame.Size = UDim2.new(0, 150, 1, -30)
    TabFrame.Position = UDim2.new(0, 0, 0, 30)
    TabFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    TabFrame.Parent = MainFrame
    
    local TabList = Instance.new("UIListLayout")
    TabList.Parent = TabFrame
    
    local ContentFrame = Instance.new("Frame")
    ContentFrame.Size = UDim2.new(1, -150, 1, -30)
    ContentFrame.Position = UDim2.new(0, 150, 0, 30)
    ContentFrame.BackgroundTransparency = 1
    ContentFrame.Parent = MainFrame
    
    self.ScreenGui = ScreenGui
    self.MainFrame = MainFrame
    self.CloseButton = CloseButton
    self.TabFrame = TabFrame
    self.ContentFrame = ContentFrame
    self.Tabs = {}
    self.CurrentTab = nil
    
    CloseButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
    end)
    
    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Size = UDim2.new(0, 50, 0, 50)
    ToggleButton.Position = UDim2.new(0, 10, 0, 10)
    ToggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    ToggleButton.Text = "UI"
    ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleButton.Parent = ScreenGui
    
    ToggleButton.MouseButton1Click:Connect(function()
        MainFrame.Visible = not MainFrame.Visible
    end)
    
    return self
end

-- 创建Tab
function UILibrary:AddTab(name)
    local TabButton = Instance.new("TextButton")
    TabButton.Size = UDim2.new(1, 0, 0, 40)
    TabButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    TabButton.Text = name
    TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TabButton.Parent = self.TabFrame
    
    local Content = Instance.new("Frame")
    Content.Size = UDim2.new(1, 0, 1, 0)
    Content.BackgroundTransparency = 1
    Content.Visible = false
    Content.Parent = self.ContentFrame
    
    local ListLayout = Instance.new("UIListLayout")
    ListLayout.Padding = UDim.new(0, 5)
    ListLayout.Parent = Content
    
    self.Tabs[name] = {Button = TabButton, Content = Content}
    
    TabButton.MouseButton1Click:Connect(function()
        if self.CurrentTab then
            self.Tabs[self.CurrentTab].Content.Visible = false
            self.Tabs[self.CurrentTab].Button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        end
        self.CurrentTab = name
        Content.Visible = true
        TabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    end)
    
    if not self.CurrentTab then
        self.CurrentTab = name
        Content.Visible = true
        TabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    end
end

-- 创建带悬浮按钮的控件
local function CreateHoverButton(parent, textLabel)
    local HoverButton = Instance.new("TextButton")
    HoverButton.Size = UDim2.new(0, 20, 0, 20)
    HoverButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    HoverButton.Text = "?"
    HoverButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    HoverButton.Parent = parent
    
    local textSize = game:GetService("TextService"):GetTextSize(
        textLabel.Text,
        textLabel.TextSize,
        textLabel.Font,
        Vector2.new(1000, 1000)
    )
    HoverButton.Position = UDim2.new(0, textSize.X + 10, 0, 0)
    
    return HoverButton
end

-- 按钮
function UILibrary:AddButton(tabName, text, callback)
    local Container = self.Tabs[tabName].Content
    local Button = Instance.new("TextButton")
    Button.Size = UDim2.new(1, 0, 0, 30)
    Button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    Button.Text = text
    Button.TextColor3 = Color3.fromRGB(255, 255, 255)
    Button.Parent = Container
    
    local Hover = CreateHoverButton(Button, Button)
    Button.MouseButton1Click:Connect(callback)
end

-- 开关
function UILibrary:AddToggle(tabName, text, default, callback)
    local Container = self.Tabs[tabName].Content
    local Frame = Instance.new("Frame")
    Frame.Size = UDim2.new(1, 0, 0, 30)
    Frame.BackgroundTransparency = 1
    Frame.Parent = Container
    
    local Label = Instance.new("TextLabel")
    Label.Size = UDim2.new(0, 200, 1, 0)
    Label.BackgroundTransparency = 1
    Label.Text = text
    Label.TextColor3 = Color3.fromRGB(255, 255, 255)
    Label.Parent = Frame
    
    local Toggle = Instance.new("TextButton")
    Toggle.Size = UDim2.new(0, 40, 0, 20)
    Toggle.Position = UDim2.new(1, -40, 0, 5)
    Toggle.BackgroundColor3 = default and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
    Toggle.Text = ""
    Toggle.Parent = Frame
    
    local Hover = CreateHoverButton(Frame, Label)
    local state = default
    
    Toggle.MouseButton1Click:Connect(function()
        state = not state
        Toggle.BackgroundColor3 = state and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        callback(state)
    end)
end

-- 滑块
function UILibrary:AddSlider(tabName, text, min, max, default, callback)
    local Container = self.Tabs[tabName].Content
    local Frame = Instance.new("Frame")
    Frame.Size = UDim2.new(1, 0, 0, 50)
    Frame.BackgroundTransparency = 1
    Frame.Parent = Container
    
    local Label = Instance.new("TextLabel")
    Label.Size = UDim2.new(0, 200, 0, 20)
    Label.BackgroundTransparency = 1
    Label.Text = text .. ": " .. default
    Label.TextColor3 = Color3.fromRGB(255, 255, 255)
    Label.Parent = Frame
    
    local Slider = Instance.new("Frame")
    Slider.Size = UDim2.new(1, 0, 0, 10)
    Slider.Position = UDim2.new(0, 0, 0, 25)
    Slider.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    Slider.Parent = Frame
    
    local Fill = Instance.new("Frame")
    Fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
    Fill.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    Fill.Parent = Slider
    
    local Hover = CreateHoverButton(Frame, Label)
    
    Slider.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            local mouseMove
            mouseMove = UserInputService.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement then
                    local value = min + (max - min) * math.clamp((input.Position.X - Slider.AbsolutePosition.X) / Slider.AbsoluteSize.X, 0, 1)
                    Fill.Size = UDim2.new((value - min) / (max - min), 0, 1, 0)
                    Label.Text = text .. ": " .. math.floor(value)
                    callback(math.floor(value))
                end
            end)
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    mouseMove:Disconnect()
                end
            end)
        end
    end)
end

-- 下拉菜单
function UILibrary:AddDropdown(tabName, text, options, callback)
    local Container = self.Tabs[tabName].Content
    local Frame = Instance.new("Frame")
    Frame.Size = UDim2.new(1, 0, 0, 30)
    Frame.BackgroundTransparency = 1
    Frame.Parent = Container
    
    local Label = Instance.new("TextLabel")
    Label.Size = UDim2.new(0, 200, 1, 0)
    Label.BackgroundTransparency = 1
    Label.Text = text .. ": " .. options[1]
    Label.TextColor3 = Color3.fromRGB(255, 255, 255)
    Label.Parent = Frame
    
    local Dropdown = Instance.new("TextButton")
    Dropdown.Size = UDim2.new(0, 100, 1, 0)
    Dropdown.Position = UDim2.new(1, -100, 0, 0)
    Dropdown.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    Dropdown.Text = "▼"
    Dropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
    Dropdown.Parent = Frame
    
    local Hover = CreateHoverButton(Frame, Label)
    local List = Instance.new("Frame")
    List.Size = UDim2.new(0, 100, 0, #options * 25)
    List.Position = UDim2.new(1, -100, 0, 30)
    List.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    List.Visible = false
    List.Parent = Frame
    
    local ListLayout = Instance.new("UIListLayout")
    ListLayout.Parent = List
    
    for i, option in ipairs(options) do
        local OptionButton = Instance.new("TextButton")
        OptionButton.Size = UDim2.new(1, 0, 0, 25)
        OptionButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        OptionButton.Text = option
        OptionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        OptionButton.Parent = List
        
        OptionButton.MouseButton1Click:Connect(function()
            Label.Text = text .. ": " .. option
            List.Visible = false
            callback(option)
        end
    end
    
    Dropdown.MouseButton1Click:Connect(function()
        List.Visible = not List.Visible
    end)
end

-- 颜色选择器
function UILibrary:AddColorPicker(tabName, text, default, callback)
    local Container = self.Tabs[tabName].Content
    local Frame = Instance.new("Frame")
    Frame.Size = UDim2.new(1, 0, 0, 30)
    Frame.BackgroundTransparency = 1
    Frame.Parent = Container
    
    local Label = Instance.new("TextLabel")
    Label.Size = UDim2.new(0, 200, 1, 0)
    Label.BackgroundTransparency = 1
    Label.Text = text
    Label.TextColor3 = Color3.fromRGB(255, 255, 255)
    Label.Parent = Frame
    
    local ColorButton = Instance.new("TextButton")
    ColorButton.Size = UDim2.new(0, 30, 0, 30)
    ColorButton.Position = UDim2.new(1, -30, 0, 0)
    ColorButton.BackgroundColor3 = default
    ColorButton.Text = ""
    ColorButton.Parent = Frame
    
    local Hover = CreateHoverButton(Frame, Label)
    
    local PickerFrame = Instance.new("Frame")
    PickerFrame.Size = UDim2.new(0, 200, 0, 250)
    PickerFrame.Position = UDim2.new(1, -200, 0, 30)
    PickerFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    PickerFrame.Visible = false
    PickerFrame.Parent = Frame
    
    local SatVibMap = Instance.new("Frame")
    SatVibMap.Size = UDim2.new(0, 160, 0, 160)
    SatVibMap.Position = UDim2.new(0, 10, 0, 10)
    SatVibMap.BackgroundColor3 = Color3.fromHSV(0, 1, 1)
    SatVibMap.Parent = PickerFrame
    
    local SatVibGradient = Instance.new("UIGradient")
    SatVibGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(1, Color3.new(0, 0, 0))
    }
    SatVibGradient.Rotation = 90
    SatVibGradient.Parent = SatVibMap
    
    local SatGradient = Instance.new("UIGradient")
    SatGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(1, default)
    }
    SatGradient.Parent = SatVibMap
    
    local Selector = Instance.new("Frame")
    Selector.Size = UDim2.new(0, 6, 0, 6)
    Selector.BackgroundColor3 = Color3.new(1, 1, 1)
    Selector.BorderSizePixel = 0
    Selector.Parent = SatVibMap
    
    local HueBar = Instance.new("Frame")
    HueBar.Size = UDim2.new(0, 20, 0, 160)
    HueBar.Position = UDim2.new(0, 180, 0, 10)
    HueBar.BackgroundColor3 = Color3.new(1, 1, 1)
    HueBar.Parent = PickerFrame
    
    local HueGradient = Instance.new("UIGradient")
    HueGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
        ColorSequenceKeypoint.new(0.16, Color3.fromRGB(255, 255, 0)),
        ColorSequenceKeypoint.new(0.33, Color3.fromRGB(0, 255, 0)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 255)),
        ColorSequenceKeypoint.new(0.66, Color3.fromRGB(0, 0, 255)),
        ColorSequenceKeypoint.new(0.83, Color3.fromRGB(255, 0, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 0))
    }
    HueGradient.Rotation = 90
    HueGradient.Parent = HueBar
    
    local HueSelector = Instance.new("Frame")
    HueSelector.Size = UDim2.new(1, 0, 0, 2)
    HueSelector.BackgroundColor3 = Color3.new(1, 1, 1)
    HueSelector.BorderSizePixel = 0
    HueSelector.Parent = HueBar
    
    local RInput = Instance.new("TextBox")
    RInput.Size = UDim2.new(0, 50, 0, 20)
    RInput.Position = UDim2.new(0, 10, 0, 180)
    RInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    RInput.TextColor3 = Color3.new(1, 1, 1)
    RInput.Text = tostring(math.floor(default.R * 255))
    RInput.Parent = PickerFrame
    
    local GInput = Instance.new("TextBox")
    GInput.Size = UDim2.new(0, 50, 0, 20)
    GInput.Position = UDim2.new(0, 70, 0, 180)
    GInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    GInput.TextColor3 = Color3.new(1, 1, 1)
    GInput.Text = tostring(math.floor(default.G * 255))
    GInput.Parent = PickerFrame
    
    local BInput = Instance.new("TextBox")
    BInput.Size = UDim2.new(0, 50, 0, 20)
    BInput.Position = UDim2.new(0, 130, 0, 180)
    BInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    BInput.TextColor3 = Color3.new(1, 1, 1)
    BInput.Text = tostring(math.floor(default.B * 255))
    BInput.Parent = PickerFrame
    
    local Preview = Instance.new("Frame")
    Preview.Size = UDim2.new(0, 180, 0, 20)
    Preview.Position = UDim2.new(0, 10, 0, 210)
    Preview.BackgroundColor3 = default
    Preview.Parent = PickerFrame
    
    local hue, sat, vib = Color3.toHSV(default)
    
    local function UpdateColor()
        local newColor = Color3.fromHSV(hue, sat, vib)
        ColorButton.BackgroundColor3 = newColor
        Preview.BackgroundColor3 = newColor
        SatVibMap.BackgroundColor3 = Color3.fromHSV(hue, 1, 1)
        SatGradient.Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
            ColorSequenceKeypoint.new(1, Color3.fromHSV(hue, 1, 1))
        }
        RInput.Text = tostring(math.floor(newColor.R * 255))
        GInput.Text = tostring(math.floor(newColor.G * 255))
        BInput.Text = tostring(math.floor(newColor.B * 255))
        callback(newColor)
    end
    
    Selector.Position = UDim2.new(sat, 0, 1 - vib, 0)
    HueSelector.Position = UDim2.new(0, 0, hue, 0)
    
    SatVibMap.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            local mouseMove
            mouseMove = UserInputService.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement then
                    sat = math.clamp((input.Position.X - SatVibMap.AbsolutePosition.X) / SatVibMap.AbsoluteSize.X, 0, 1)
                    vib = 1 - math.clamp((input.Position.Y - SatVibMap.AbsolutePosition.Y) / SatVibMap.AbsoluteSize.Y, 0, 1)
                    Selector.Position = UDim2.new(sat, 0, 1 - vib, 0)
                    UpdateColor()
                end
            end)
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    mouseMove:Disconnect()
                end
            end)
        end
    end)
    
    HueBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            local mouseMove
            mouseMove = UserInputService.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement then
                    hue = math.clamp((input.Position.Y - HueBar.AbsolutePosition.Y) / HueBar.AbsoluteSize.Y, 0, 1)
                    HueSelector.Position = UDim2.new(0, 0, hue, 0)
                    UpdateColor()
                end
            end)
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    mouseMove:Disconnect()
                end
            end)
        end
    end)
    
    RInput.FocusLost:Connect(function()
        local value = tonumber(RInput.Text) or 0
        local newColor = Color3.fromRGB(math.clamp(value, 0, 255), default.G * 255, default.B * 255)
        hue, sat, vib = Color3.toHSV(newColor)
        Selector.Position = UDim2.new(sat, 0, 1 - vib, 0)
        HueSelector.Position = UDim2.new(0, 0, hue, 0)
        UpdateColor()
    end)
    
    GInput.FocusLost:Connect(function()
        local value = tonumber(GInput.Text) or 0
        local newColor = Color3.fromRGB(default.R * 255, math.clamp(value, 0, 255), default.B * 255)
        hue, sat, vib = Color3.toHSV(newColor)
        Selector.Position = UDim2.new(sat, 0, 1 - vib, 0)
        HueSelector.Position = UDim2.new(0, 0, hue, 0)
        UpdateColor()
    end)
    
    BInput.FocusLost:Connect(function()
        local value = tonumber(BInput.Text) or 0
        local newColor = Color3.fromRGB(default.R * 255, default.G * 255, math.clamp(value, 0, 255))
        hue, sat, vib = Color3.toHSV(newColor)
        Selector.Position = UDim2.new(sat, 0, 1 - vib, 0)
        HueSelector.Position = UDim2.new(0, 0, hue, 0)
        UpdateColor()
    end)
    
    ColorButton.MouseButton1Click:Connect(function()
        PickerFrame.Visible = not PickerFrame.Visible
    end)
end

-- 示例使用
local UI = UILibrary.new("My Custom UI")
UI:AddTab("Tab1")
UI:AddTab("Tab2")

UI:AddButton("Tab1", "Click Me", function()
    print("Button clicked!")
end)

UI:AddToggle("Tab1", "Toggle Me", true, function(state)
    print("Toggle state:", state)
end)

UI:AddSlider("Tab1", "Slide Me", 0, 100, 50, function(value)
    print("Slider value:", value)
end)

UI:AddDropdown("Tab1", "Select Me", {"Option1", "Option2", "Option3"}, function(option)
    print("Selected:", option)
end)

UI:AddColorPicker("Tab1", "Pick Color", Color3.fromRGB(255, 0, 0), function(color)
    print("Color picked:", color.R * 255, color.G * 255, color.B * 255)
end)

return UILibrary
