local UILibrary = {}

function UILibrary:CreateWindow(title)
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "UILibraryGui"
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    ScreenGui.ResetOnSpawn = false
    
    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, 300, 0, 400)
    MainFrame.Position = UDim2.new(0.5, -150, 0.5, -200)
    MainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    MainFrame.BorderSizePixel = 0
    MainFrame.Parent = ScreenGui
    
    local TitleBar = Instance.new("Frame")
    TitleBar.Size = UDim2.new(1, 0, 0, 30)
    TitleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    TitleBar.BorderSizePixel = 0
    TitleBar.Parent = MainFrame
    
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Size = UDim2.new(1, -90, 1, 0)
    TitleLabel.Position = UDim2.new(0, 5, 0, 0)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = title
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.TextSize = 16
    TitleLabel.Font = Enum.Font.SourceSansBold
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.Parent = TitleBar
    
    -- ÊêúÁ¥¢ÊåâÈíÆ
    local SearchButton = Instance.new("TextButton")
    SearchButton.Size = UDim2.new(0, 30, 0, 30)
    SearchButton.Position = UDim2.new(1, -90, 0, 0)
    SearchButton.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
    SearchButton.Text = "üîç"
    SearchButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    SearchButton.TextSize = 14
    SearchButton.Font = Enum.Font.SourceSans
    SearchButton.Parent = TitleBar
    SearchButton.MouseButton1Click:Connect(function()
        print("ÊêúÁ¥¢ÂäüËÉΩÂæÖÂÆûÁé∞")
    end)
    
    -- Áº©Â∞èÊåâÈíÆ
    local MinimizeButton = Instance.new("TextButton")
    MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
    MinimizeButton.Position = UDim2.new(1, -60, 0, 0)
    MinimizeButton.BackgroundColor3 = Color3.fromRGB(200, 200, 50)
    MinimizeButton.Text = "-"
    MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    MinimizeButton.TextSize = 14
    MinimizeButton.Font = Enum.Font.SourceSans
    MinimizeButton.Parent = TitleBar
    
    -- ÂÖ≥Èó≠ÊåâÈíÆ
    local CloseButton = Instance.new("TextButton")
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Position = UDim2.new(1, -30, 0, 0)
    CloseButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.TextSize = 14
    CloseButton.Font = Enum.Font.SourceSans
    CloseButton.Parent = TitleBar
    CloseButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
    end)
    
    local ContentFrame = Instance.new("Frame")
    ContentFrame.Size = UDim2.new(1, 0, 1, -30)
    ContentFrame.Position = UDim2.new(0, 0, 0, 30)
    ContentFrame.BackgroundTransparency = 1
    ContentFrame.Parent = MainFrame
    
    -- ÊãñÂä®ÂäüËÉΩ
    local dragging, dragInput, dragStart, startPos
    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    TitleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    -- Áº©Â∞èÂäüËÉΩ‰∏éÊ∏êÂèòËæπÊ°Ü
    local isMinimized = false
    MinimizeButton.MouseButton1Click:Connect(function()
        isMinimized = not isMinimized
        if isMinimized then
            ContentFrame.Visible = false
            MainFrame.Size = UDim2.new(0, 300, 0, 30)
            MainFrame.BorderSizePixel = 2
            MainFrame.BorderColor3 = Color3.fromRGB(0, 255, 255) -- Ê∏êÂèòËµ∑ÂßãÈ¢úËâ≤
            -- ÁÆÄÂçïÊ®°ÊãüÊ∏êÂèòÊïàÊûú
            spawn(function()
                while isMinimized do
                    for i = 0, 255, 5 do
                        MainFrame.BorderColor3 = Color3.fromRGB(i, 255 - i, 255)
                        wait(0.05)
                    end
                end
            end)
        else
            ContentFrame.Visible = true
            MainFrame.Size = UDim2.new(0, 300, 0, 400)
            MainFrame.BorderSizePixel = 0
        end
    end)
    
    local window = { Frame = MainFrame, Content = ContentFrame, Elements = {} }
    
    -- Ê∑ªÂä†ÊåâÈíÆ
    function window:AddButton(text, callback)
        local Button = Instance.new("TextButton")
        Button.Size = UDim2.new(1, -10, 0, 30)
        Button.Position = UDim2.new(0, 5, 0, #window.Elements * 35 + 5)
        Button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        Button.Text = text
        Button.TextColor3 = Color3.fromRGB(255, 255, 255)
        Button.TextSize = 14
        Button.Font = Enum.Font.SourceSans
        Button.Parent = ContentFrame
        Button.MouseButton1Click:Connect(callback)
        table.insert(window.Elements, Button)
    end
    
    -- Ê∑ªÂä†ÂºÄÂÖ≥
    function window:AddToggle(text, default, callback)
        local ToggleFrame = Instance.new("Frame")
        ToggleFrame.Size = UDim2.new(1, -10, 0, 30)
        ToggleFrame.Position = UDim2.new(0, 5, 0, #window.Elements * 35 + 5)
        ToggleFrame.BackgroundTransparency = 1
        ToggleFrame.Parent = ContentFrame
        
        local ToggleLabel = Instance.new("TextLabel")
        ToggleLabel.Size = UDim2.new(1, -40, 1, 0)
        ToggleLabel.BackgroundTransparency = 1
        ToggleLabel.Text = text
        ToggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        ToggleLabel.TextSize = 14
        ToggleLabel.Font = Enum.Font.SourceSans
        ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left
        ToggleLabel.Parent = ToggleFrame
        
        local ToggleButton = Instance.new("TextButton")
        ToggleButton.Size = UDim2.new(0, 30, 0, 20)
        ToggleButton.Position = UDim2.new(1, -30, 0, 5)
        ToggleButton.BackgroundColor3 = default and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        ToggleButton.Text = ""
        ToggleButton.Parent = ToggleFrame
        
        local state = default
        ToggleButton.MouseButton1Click:Connect(function()
            state = not state
            ToggleButton.BackgroundColor3 = state and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
            callback(state)
        end)
        table.insert(window.Elements, ToggleFrame)
    end
    
    -- Ê∑ªÂä†‰∏ãÊãâËèúÂçïÔºà‰ΩøÁî® Roblox ÂÜÖÁΩÆËµÑ‰∫ßÔºâ
    function window:AddDropdown(text, options, callback)
        local DropdownFrame = Instance.new("Frame")
        DropdownFrame.Size = UDim2.new(1, -10, 0, 30)
        DropdownFrame.Position = UDim2.new(0, 5, 0, #window.Elements * 35 + 5)
        DropdownFrame.BackgroundTransparency = 1
        DropdownFrame.Parent = ContentFrame
        
        local DropdownButton = Instance.new("TextButton")
        DropdownButton.Size = UDim2.new(1, 0, 0, 30)
        DropdownButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        DropdownButton.Text = text .. ": " .. options[1]
        DropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        DropdownButton.TextSize = 14
        DropdownButton.Font = Enum.Font.SourceSans
        DropdownButton.Parent = DropdownFrame
        
        local DropdownList = Instance.new("ScrollingFrame")
        DropdownList.Size = UDim2.new(1, 0, 0, 100)
        DropdownList.Position = UDim2.new(0, 0, 1, 0)
        DropdownList.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        DropdownList.BorderSizePixel = 0
        DropdownList.Visible = false
        DropdownList.CanvasSize = UDim2.new(0, 0, 0, #options * 30)
        DropdownList.Parent = DropdownFrame
        
        local isOpen = false
        DropdownButton.MouseButton1Click:Connect(function()
            isOpen = not isOpen
            DropdownList.Visible = isOpen
        end)
        
        for i, option in ipairs(options) do
            local OptionButton = Instance.new("TextButton")
            OptionButton.Size = UDim2.new(1, 0, 0, 30)
            OptionButton.Position = UDim2.new(0, 0, 0, (i - 1) * 30)
            OptionButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            OptionButton.Text = option
            OptionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            OptionButton.TextSize = 14
            OptionButton.Font = Enum.Font.SourceSans
            OptionButton.Parent = DropdownList
            OptionButton.MouseButton1Click:Connect(function()
                DropdownButton.Text = text .. ": " .. option
                DropdownList.Visible = false
                isOpen = false
                callback(option)
            end)
        end
        table.insert(window.Elements, DropdownFrame)
    end
    
    -- Ê∑ªÂä†ÊªëÂùó
    function window:AddSlider(text, min, max, default, callback)
        local SliderFrame = Instance.new("Frame")
        SliderFrame.Size = UDim2.new(1, -10, 0, 30)
        SliderFrame.Position = UDim2.new(0, 5, 0, #window.Elements * 35 + 5)
        SliderFrame.BackgroundTransparency = 1
        SliderFrame.Parent = ContentFrame
        
        local SliderLabel = Instance.new("TextLabel")
        SliderLabel.Size = UDim2.new(0, 100, 1, 0)
        SliderLabel.BackgroundTransparency = 1
        SliderLabel.Text = text .. ": " .. default
        SliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        SliderLabel.TextSize = 14
        SliderLabel.Font = Enum.Font.SourceSans
        SliderLabel.TextXAlignment = Enum.TextXAlignment.Left
        SliderLabel.Parent = SliderFrame
        
        local SliderBar = Instance.new("Frame")
        SliderBar.Size = UDim2.new(0, 150, 0, 10)
        SliderBar.Position = UDim2.new(1, -150, 0, 10)
        SliderBar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        SliderBar.Parent = SliderFrame
        
        local SliderKnob = Instance.new("Frame")
        SliderKnob.Size = UDim2.new(0, 10, 0, 20)
        SliderKnob.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
        SliderKnob.Position = UDim2.new((default - min) / (max - min), 0, -0.5, 0)
        SliderKnob.Parent = SliderBar
        
        local draggingSlider
        SliderKnob.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                draggingSlider = true
            end
        end)
        
        SliderKnob.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                draggingSlider = false
            end
        end)
        
        game:GetService("UserInputService").InputChanged:Connect(function(input)
            if draggingSlider and input.UserInputType == Enum.UserInputType.MouseMovement then
                local relativeX = math.clamp((input.Position.X - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X, 0, 1)
                SliderKnob.Position = UDim2.new(relativeX, 0, -0.5, 0)
                local value = math.floor(min + (max - min) * relativeX)
                SliderLabel.Text = text .. ": " .. value
                callback(value)
            end
        end)
        table.insert(window.Elements, SliderFrame)
    end
    
    -- Ê∑ªÂä†È¢úËâ≤ÈÄâÊã©Âô®
    function window:AddColorPicker(text, defaultColor, callback)
        local ColorFrame = Instance.new("Frame")
        ColorFrame.Size = UDim2.new(1, -10, 0, 30)
        ColorFrame.Position = UDim2.new(0, 5, 0, #window.Elements * 35 + 5)
        ColorFrame.BackgroundTransparency = 1
        ColorFrame.Parent = ContentFrame
        
        local ColorLabel = Instance.new("TextLabel")
        ColorLabel.Size = UDim2.new(1, -40, 1, 0)
        ColorLabel.BackgroundTransparency = 1
        ColorLabel.Text = text
        ColorLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        ColorLabel.TextSize = 14
        ColorLabel.Font = Enum.Font.SourceSans
        ColorLabel.TextXAlignment = Enum.TextXAlignment.Left
        ColorLabel.Parent = ColorFrame
        
        local ColorButton = Instance.new("TextButton")
        ColorButton.Size = UDim2.new(0, 30, 0, 30)
        ColorButton.Position = UDim2.new(1, -30, 0, 0)
        ColorButton.BackgroundColor3 = defaultColor
        ColorButton.Text = ""
        ColorButton.Parent = ColorFrame
        
        ColorButton.MouseButton1Click:Connect(function()
            -- ÁÆÄÂçïÈ¢úËâ≤ÈÄâÊã©ÔºàËøôÈáå‰ªÖÊ®°ÊãüÔºåÂÆûÈôÖÈúÄË¶ÅÊõ¥Â§çÊùÇÁöÑÈ¢úËâ≤ÈÄâÊã©Âô®UIÔºâ
            local newColor = Color3.fromRGB(math.random(0, 255), math.random(0, 255), math.random(0, 255))
            ColorButton.BackgroundColor3 = newColor
            callback(newColor)
        end)
        table.insert(window.Elements, ColorFrame)
    end
    
    return window
end

-- Á§∫‰æã‰ΩøÁî®
local UI = UILibrary:CreateWindow("Ëá™ÂÆö‰πâUIÁ§∫‰æã")
UI:AddButton("ÁÇπÂáªÊàë", function() print("ÊåâÈíÆË¢´ÁÇπÂáª!") end)
UI:AddToggle("ÂºÄÂÖ≥", false, function(state) print("ÂºÄÂÖ≥Áä∂ÊÄÅ: " .. tostring(state)) end)
UI:AddDropdown("ÈÄâÊã©", {"ÈÄâÈ°π1", "ÈÄâÈ°π2", "ÈÄâÈ°π3"}, function(option) print("ÈÄâÊã©‰∫Ü: " .. option) end)
UI:AddSlider("ÈÄüÂ∫¶", 0, 100, 50, function(value) print("ÊªëÂùóÂÄº: " .. value) end)
UI:AddColorPicker("È¢úËâ≤", Color3.fromRGB(255, 0, 0), function(color) print("È¢úËâ≤: " .. tostring(color)) end)

return UILibrary
