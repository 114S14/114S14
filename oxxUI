local UILibrary = {}

function UILibrary:CreateWindow(title)
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    ScreenGui.ResetOnSpawn = false
    
    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, 300, 0, 400)
    MainFrame.Position = UDim2.new(0.5, -150, 0.5, -200)
    MainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    MainFrame.BorderSizePixel = 0
    MainFrame.Parent = ScreenGui
    
    local TitleBar = Instance.new("Frame")
    TitleBar.Size = UDim2.new(1, 0, 0, 30)
    TitleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    TitleBar.BorderSizePixel = 0
    TitleBar.Parent = MainFrame
    
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Size = UDim2.new(1, -90, 1, 0)
    TitleLabel.Position = UDim2.new(0, 5, 0, 0)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = title
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.TextSize = 14
    TitleLabel.Font = Enum.Font.SourceSansBold
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.Parent = TitleBar
    
    -- 搜索按钮 (使用 Roblox 内置资产)
    local SearchButton = Instance.new("ImageButton")
    SearchButton.Size = UDim2.new(0, 25, 0, 25)
    SearchButton.Position = UDim2.new(1, -85, 0, 2.5)
    SearchButton.BackgroundTransparency = 1
    SearchButton.Image = "rbxassetid://10734949809" -- Roblox 内置搜索图标
    SearchButton.Parent = TitleBar
    SearchButton.MouseButton1Click:Connect(function()
        print("搜索功能待实现")
    end)
    
    -- 缩小按钮 (使用 Roblox 内置资产)
    local MinimizeButton = Instance.new("ImageButton")
    MinimizeButton.Size = UDim2.new(0, 25, 0, 25)
    MinimizeButton.Position = UDim2.new(1, -55, 0, 2.5)
    MinimizeButton.BackgroundTransparency = 1
    MinimizeButton.Image = "rbxassetid://10734950239" -- Roblox 内置最小化图标
    MinimizeButton.Parent = TitleBar
    
    -- 关闭按钮 (使用 Roblox 内置资产)
    local CloseButton = Instance.new("ImageButton")
    CloseButton.Size = UDim2.new(0, 25, 0, 25)
    CloseButton.Position = UDim2.new(1, -25, 0, 2.5)
    CloseButton.BackgroundTransparency = 1
    CloseButton.Image = "rbxassetid://10734949488" -- Roblox 内置关闭图标
    CloseButton.Parent = TitleBar
    CloseButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
    end)
    
    local ContentFrame = Instance.new("Frame")
    ContentFrame.Size = UDim2.new(1, 0, 1, -30)
    ContentFrame.Position = UDim2.new(0, 0, 0, 30)
    ContentFrame.BackgroundTransparency = 1
    ContentFrame.Parent = MainFrame
    
    -- 拖动功能
    local dragging, dragInput, dragStart, startPos
    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    TitleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    -- 缩小功能及渐变边框
    local isMinimized = false
    local originalSize = MainFrame.Size
    MinimizeButton.MouseButton1Click:Connect(function()
        if not isMinimized then
            MainFrame.Size = UDim2.new(0, 300, 0, 30)
            ContentFrame.Visible = false
            local Gradient = Instance.new("UIGradient")
            Gradient.Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 255))
            }
            Gradient.Parent = MainFrame
            isMinimized = true
        else
            MainFrame.Size = originalSize
            ContentFrame.Visible = true
            if MainFrame:FindFirstChild("UIGradient") then
                MainFrame.UIGradient:Destroy()
            end
            isMinimized = false
        end
    end)
    
    local window = {
        Frame = MainFrame,
        Content = ContentFrame,
        Elements = {}
    }
    
    -- 添加按钮
    function window:AddButton(text, callback)
        local Button = Instance.new("TextButton")
        Button.Size = UDim2.new(1, -10, 0, 30)
        Button.Position = UDim2.new(0, 5, 0, #window.Elements * 35 + 5)
        Button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        Button.Text = text
        Button.TextColor3 = Color3.fromRGB(255, 255, 255)
        Button.TextSize = 14
        Button.Font = Enum.Font.SourceSans
        Button.Parent = ContentFrame
        Button.MouseButton1Click:Connect(callback)
        table.insert(window.Elements, Button)
    end
    
    -- 添加开关
    function window:AddToggle(text, default, callback)
        local ToggleFrame = Instance.new("Frame")
        ToggleFrame.Size = UDim2.new(1, -10, 0, 30)
        ToggleFrame.Position = UDim2.new(0, 5, 0, #window.Elements * 35 + 5)
        ToggleFrame.BackgroundTransparency = 1
        ToggleFrame.Parent = ContentFrame
        
        local Label = Instance.new("TextLabel")
        Label.Size = UDim2.new(1, -40, 1, 0)
        Label.BackgroundTransparency = 1
        Label.Text = text
        Label.TextColor3 = Color3.fromRGB(255, 255, 255)
        Label.TextSize = 14
        Label.Font = Enum.Font.SourceSans
        Label.Parent = ToggleFrame
        
        local Toggle = Instance.new("TextButton")
        Toggle.Size = UDim2.new(0, 30, 0, 20)
        Toggle.Position = UDim2.new(1, -30, 0, 5)
        Toggle.BackgroundColor3 = default and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        Toggle.Text = ""
        Toggle.Parent = ToggleFrame
        
        local state = default
        Toggle.MouseButton1Click:Connect(function()
            state = not state
            Toggle.BackgroundColor3 = state and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
            callback(state)
        end)
        table.insert(window.Elements, ToggleFrame)
    end
    
    -- 添加下拉菜单 (使用 Roblox 内置资产)
    function window:AddDropdown(text, options, callback)
        local DropdownFrame = Instance.new("Frame")
        DropdownFrame.Size = UDim2.new(1, -10, 0, 30)
        DropdownFrame.Position = UDim2.new(0, 5, 0, #window.Elements * 35 + 5)
        DropdownFrame.BackgroundTransparency = 1
        DropdownFrame.Parent = ContentFrame
        
        local Label = Instance.new("TextLabel")
        Label.Size = UDim2.new(1, -40, 1, 0)
        Label.BackgroundTransparency = 1
        Label.Text = text .. ": " .. options[1]
        Label.TextColor3 = Color3.fromRGB(255, 255, 255)
        Label.TextSize = 14
        Label.Font = Enum.Font.SourceSans
        Label.Parent = DropdownFrame
        
        local DropdownButton = Instance.new("ImageButton")
        DropdownButton.Size = UDim2.new(0, 30, 0, 30)
        DropdownButton.Position = UDim2.new(1, -30, 0, 0)
        DropdownButton.BackgroundTransparency = 1
        DropdownButton.Image = "rbxassetid://10734950027" -- Roblox 内置下拉箭头
        DropdownButton.Parent = DropdownFrame
        
        local DropdownList = Instance.new("Frame")
        DropdownList.Size = UDim2.new(1, 0, 0, #options * 30)
        DropdownList.Position = UDim2.new(0, 0, 1, 0)
        DropdownList.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        DropdownList.Visible = false
        DropdownList.Parent = DropdownFrame
        
        for i, option in ipairs(options) do
            local OptionButton = Instance.new("TextButton")
            OptionButton.Size = UDim2.new(1, 0, 0, 30)
            OptionButton.Position = UDim2.new(0, 0, 0, (i-1) * 30)
            OptionButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            OptionButton.Text = option
            OptionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            OptionButton.TextSize = 14
            OptionButton.Font = Enum.Font.SourceSans
            OptionButton.Parent = DropdownList
            OptionButton.MouseButton1Click:Connect(function()
                Label.Text = text .. ": " .. option
                DropdownList.Visible = false
                callback(option)
            end)
        end
        
        DropdownButton.MouseButton1Click:Connect(function()
            DropdownList.Visible = not DropdownList.Visible
        end)
        table.insert(window.Elements, DropdownFrame)
    end
    
    -- 添加滑块
    function window:AddSlider(text, min, max, default, callback)
        local SliderFrame = Instance.new("Frame")
        SliderFrame.Size = UDim2.new(1, -10, 0, 30)
        SliderFrame.Position = UDim2.new(0, 5, 0, #window.Elements * 35 + 5)
        SliderFrame.BackgroundTransparency = 1
        SliderFrame.Parent = ContentFrame
        
        local Label = Instance.new("TextLabel")
        Label.Size = UDim2.new(1, -150, 1, 0)
        Label.BackgroundTransparency = 1
        Label.Text = text .. ": " .. default
        Label.TextColor3 = Color3.fromRGB(255, 255, 255)
        Label.TextSize = 14
        Label.Font = Enum.Font.SourceSans
        Label.Parent = SliderFrame
        
        local SliderBar = Instance.new("Frame")
        SliderBar.Size = UDim2.new(0, 140, 0, 10)
        SliderBar.Position = UDim2.new(1, -140, 0, 10)
        SliderBar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        SliderBar.Parent = SliderFrame
        
        local Knob = Instance.new("Frame")
        Knob.Size = UDim2.new(0, 10, 0, 20)
        Knob.Position = UDim2.new((default - min) / (max - min), -5, -0.5, 0)
        Knob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Knob.Parent = SliderBar
        
        local draggingSlider
        Knob.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                draggingSlider = true
            end
        end)
        
        Knob.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                draggingSlider = false
            end
        end)
        
        game:GetService("UserInputService").InputChanged:Connect(function(input)
            if draggingSlider and input.UserInputType == Enum.UserInputType.MouseMovement then
                local relativeX = math.clamp((input.Position.X - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X, 0, 1)
                Knob.Position = UDim2.new(relativeX, -5, -0.5, 0)
                local value = math.floor(min + (max - min) * relativeX)
                Label.Text = text .. ": " .. value
                callback(value)
            end
        end)
        table.insert(window.Elements, SliderFrame)
    end
    
    -- 添加颜色选择器
    function window:AddColorPicker(text, default, callback)
        local PickerFrame = Instance.new("Frame")
        PickerFrame.Size = UDim2.new(1, -10, 0, 30)
        PickerFrame.Position = UDim2.new(0, 5, 0, #window.Elements * 35 + 5)
        PickerFrame.BackgroundTransparency = 1
        PickerFrame.Parent = ContentFrame
        
        local Label = Instance.new("TextLabel")
        Label.Size = UDim2.new(1, -40, 1, 0)
        Label.BackgroundTransparency = 1
        Label.Text = text
        Label.TextColor3 = Color3.fromRGB(255, 255, 255)
        Label.TextSize = 14
        Label.Font = Enum.Font.SourceSans
        Label.Parent = PickerFrame
        
        local ColorPreview = Instance.new("Frame")
        ColorPreview.Size = UDim2.new(0, 30, 0, 20)
        ColorPreview.Position = UDim2.new(1, -30, 0, 5)
        ColorPreview.BackgroundColor3 = default
        ColorPreview.Parent = PickerFrame
        
        local PickerGui = Instance.new("Frame")
        PickerGui.Size = UDim2.new(0, 150, 0, 150)
        PickerGui.Position = UDim2.new(1, 0, 1, 0)
        PickerGui.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        PickerGui.Visible = false
        PickerGui.Parent = PickerFrame
        
        local ColorCanvas = Instance.new("ImageLabel")
        ColorCanvas.Size = UDim2.new(1, -10, 1, -10)
        ColorCanvas.Position = UDim2.new(0, 5, 0, 5)
        ColorCanvas.Image = "rbxassetid://698052001" -- Roblox 内置颜色选择器图片
        ColorCanvas.Parent = PickerGui
        
        ColorPreview.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                PickerGui.Visible = not PickerGui.Visible
            end
        end)
        
        ColorCanvas.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                local relativeX = (input.Position.X - ColorCanvas.AbsolutePosition.X) / ColorCanvas.AbsoluteSize.X
                local relativeY = (input.Position.Y - ColorCanvas.AbsolutePosition.Y) / ColorCanvas.AbsoluteSize.Y
                local color = Color3.fromHSV(relativeX, relativeY, 1)
                ColorPreview.BackgroundColor3 = color
                callback(color)
            end
        end)
        table.insert(window.Elements, PickerFrame)
    end
    
    return window
end

-- 示例使用
local UI = UILibrary:CreateWindow("完整UI示例")
UI:AddButton("测试按钮", function() print("按钮点击!") end)
UI:AddToggle("测试开关", false, function(state) print("开关: " .. tostring(state)) end)
UI:AddDropdown("测试下拉", {"选项1", "选项2", "选项3"}, function(option) print("选择了: " .. option) end)
UI:AddSlider("测试滑块", 0, 100, 50, function(value) print("滑块值: " .. value) end)
UI:AddColorPicker("测试颜色", Color3.fromRGB(255, 0, 0), function(color) print("颜色: " .. color.r .. ", " .. color.g .. ", " .. color.b) end)

return UILibrary
