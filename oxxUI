local lib = {RainbowColorValue = 0, HueSelectionPosition = 0}
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local PresetColor = Color3.fromRGB(44, 120, 224)
local CloseBind = Enum.KeyCode.RightControl

local ui = Instance.new("ScreenGui")
ui.Name = "ui"
ui.Parent = game.CoreGui
ui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- 添加外部开启按钮
local OpenButton = Instance.new("TextButton")
OpenButton.Name = "OpenButton"
OpenButton.Parent = ui
OpenButton.BackgroundColor3 = Color3—fromRGB(50, 50, 50)
OpenButton.Position = UDim2.new(0, 10, 0, 10) -- 左上角位置
OpenButton.Size = UDim2.new(0, 100, 0, 40)
OpenButton.Font = Enum.Font.Gotham
OpenButton.Text = "Open UI"
OpenButton.TextColor3 = Color3.fromRGB(255, 255, 255)
OpenButton.TextSize = 14
OpenButton.Visible = true -- 默认可见
local OpenButtonCorner = Instance.new("UICorner", OpenButton)
OpenButtonCorner.CornerRadius = UDim.new(0, 5)

coroutine.wrap(function()
    while wait() do
        lib.RainbowColorValue = lib.RainbowColorValue + 1 / 255
        lib.HueSelectionPosition = lib.HueSelectionPosition + 1
        if lib.RainbowColorValue >= 1 then lib.RainbowColorValue = 0 end
        if lib.HueSelectionPosition == 80 then lib.HueSelectionPosition = 0 end
    end
end)()

local function MakeDraggable(topbarobject, object)
    local Dragging, DragInput, DragStart, StartPosition
    local function Update(input)
        local Delta = input.Position - DragStart
        object.Position = UDim2.new(StartPosition.X.Scale, StartPosition.X.Offset + Delta.X, StartPosition.Y.Scale, StartPosition.Y.Offset + Delta.Y)
    end
    topbarobject.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            Dragging = true
            DragStart = input.Position
            StartPosition = object.Position
            input.Changed:Connect(function() if input.UserInputState == Enum.UserInputState.End then Dragging = false end end)
        end
    end)
    topbarobject.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            DragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input) if input == DragInput and Dragging then Update(input) end end)
end

function lib:Window(text, preset, closebind)
    CloseBind = closebind or Enum.KeyCode.RightControl
    PresetColor = preset or Color3.fromRGB(44, 120, 224)
    local fs = false
    
    local Main = Instance.new("Frame")
    Main.Name = "Main"
    Main.Parent = ui
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    Main.BorderSizePixel = 0
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.Size = UDim2.new(0, 0, 0, 0)
    Main.ClipsDescendants = true
    Main.Visible = true

    local TitleBar = Instance.new("Frame", Main)
    TitleBar.Name = "TitleBar"
    TitleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    TitleBar.Size = UDim2.new(1, 0, 0, 40)
    TitleBar.BorderSizePixel = 0

    local LogoImage = Instance.new("ImageLabel", TitleBar)
    LogoImage.Name = "LogoImage"
    LogoImage.BackgroundTransparency = 1
    LogoImage.Position = UDim2.new(0, 5, 0.5, -12)
    LogoImage.Size = UDim2.new(0, 24, 0, 24)
    LogoImage.Image = "rbxassetid://YOUR_ASSET_ID_HERE" -- 替换为你的图片资产ID

    local Title = Instance.new("TextLabel", TitleBar)
    Title.Name = "Title"
    Title.BackgroundTransparency = 1
    Title.Position = UDim2.new(0, 34, 0, 2)
    Title.Size = UDim2.new(0, 200, 0, 20)
    Title.Font = Enum.Font.GothamSemibold
    Title.Text = text
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextSize = 14
    Title.TextXAlignment = Enum.TextXAlignment.Left

    local Subtitle = Instance.new("TextLabel", TitleBar)
    Subtitle.Name = "Subtitle"
    Subtitle.BackgroundTransparency = 1
    Subtitle.Position = UDim2.new(0, 34, 0, 22)
    Subtitle.Size = UDim2.new(0, 200, 0, 14)
    Subtitle.Font = Enum.Font.Gotham
    Subtitle.Text = "GUI Description"
    Subtitle.TextColor3 = Color3.fromRGB(150, 150, 150)
    Subtitle.TextSize = 10
    Subtitle.TextXAlignment = Enum.TextXAlignment.Left

    local CloseButton = Instance.new("ImageButton", TitleBar)
    CloseButton.Name = "CloseButton"
    CloseButton.BackgroundTransparency = 1
    CloseButton.Position = UDim2.new(1, -35, 0.5, -12)
    CloseButton.Size = UDim2.new(0, 24, 0, 24)
    CloseButton.Image = "rbxassetid://6035047409"
    CloseButton.ImageColor3 = Color3.fromRGB(200, 50, 50)

    local TabHold = Instance.new("Frame", Main)
    TabHold.Name = "TabHold"
    TabHold.BackgroundTransparency = 1
    TabHold.Position = UDim2.new(0.0339285731, 0, 0.147335425, 0)
    TabHold.Size = UDim2.new(0, 107, 0, 254)

    local TabHoldLayout = Instance.new("UIListLayout", TabHold)
    TabHoldLayout.Name = "TabHoldLayout"
    TabHoldLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabHoldLayout.Padding = UDim.new(0, 11)

    local DragFrame = Instance.new("Frame", TitleBar)
    DragFrame.Name = "DragFrame"
    DragFrame.BackgroundTransparency = 1
    DragFrame.Size = UDim2.new(1, 0, 1, 0)

    local TabFolder = Instance.new("Folder", Main)
    TabFolder.Name = "TabFolder"

    Main:TweenSize(UDim2.new(0, 560, 0, 319), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
    MakeDraggable(DragFrame, Main)

    local uitoggled = false
    local isAnimating = false

    -- 修改开关逻辑，只控制 Main 的可见性
    local function toggleUI()
        if isAnimating then return end
        isAnimating = true
        uitoggled = not uitoggled
        if uitoggled then
            Main:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true, function()
                Main.Visible = false
                OpenButton.Visible = true -- 关闭时显示外部按钮
                isAnimating = false
            end)
        else
            Main.Visible = true
            Main:TweenSize(UDim2.new(0, 560, 0, 319), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true, function()
                OpenButton.Visible = false -- 开启时隐藏外部按钮
                isAnimating = false
            end)
        end
    end

    UserInputService.InputBegan:Connect(function(io, p)
        if io.KeyCode == CloseBind and not p then toggleUI() end
    end)

    CloseButton.MouseButton1Click:Connect(toggleUI)
    OpenButton.MouseButton1Click:Connect(toggleUI) -- 绑定外部按钮到 toggleUI

    CloseButton.MouseEnter:Connect(function()
        TweenService:Create(CloseButton, TweenInfo.new(.2), {ImageColor3 = Color3.fromRGB(255, 50, 50)}):Play()
    end)
    CloseButton.MouseLeave:Connect(function()
        TweenService:Create(CloseButton, TweenInfo.new(.2), {ImageColor3 = Color3.fromRGB(200, 50, 50)}):Play()
    end)

    function lib:ChangePresetColor(toch) PresetColor = toch end

    function lib:Notification(texttitle, textdesc, textbtn)
        local NotificationHold = Instance.new("TextButton", Main)
        NotificationHold.Name = "NotificationHold"
        NotificationHold.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        NotificationHold.BackgroundTransparency = 1
        NotificationHold.BorderSizePixel = 0
        NotificationHold.Size = UDim2.new(0, 560, 0, 319)
        NotificationHold.AutoButtonColor = false
        NotificationHold.Font = Enum.Font.SourceSans
        NotificationHold.Text = ""
        NotificationHold.TextColor3 = Color3.fromRGB(0, 0, 0)
        NotificationHold.TextSize = 14

        TweenService:Create(NotificationHold, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 0.7}):Play()
        wait(0.4)

        local NotificationFrame = Instance.new("Frame", NotificationHold)
        NotificationFrame.Name = "NotificationFrame"
        NotificationFrame.AnchorPoint = Vector2.new(0.5, 0.5)
        NotificationFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        NotificationFrame.BorderSizePixel = 0
        NotificationFrame.ClipsDescendants = true
        NotificationFrame.Position = UDim2.new(0.5, 0, 0.498432577, 0)
        NotificationFrame:TweenSize(UDim2.new(0, 164, 0, 193), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)

        local OkayBtn = Instance.new("TextButton", NotificationFrame)
        OkayBtn.Name = "OkayBtn"
        OkayBtn.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
        OkayBtn.Position = UDim2.new(0.0609756112, 0, 0.720207274, 0)
        OkayBtn.Size = UDim2.new(0, 144, 0, 42)
        OkayBtn.AutoButtonColor = false
        OkayBtn.Font = Enum.Font.SourceSans
        OkayBtn.Text = ""
        OkayBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
        OkayBtn.TextSize = 14

        local OkayBtnCorner = Instance.new("UICorner", OkayBtn)
        OkayBtnCorner.CornerRadius = UDim.new(0, 5)

        local OkayBtnTitle = Instance.new("TextLabel", OkayBtn)
        OkayBtnTitle.Name = "OkayBtnTitle"
        OkayBtnTitle.BackgroundTransparency = 1
        OkayBtnTitle.Position = UDim2.new(0.0763888881, 0, 0, 0)
        OkayBtnTitle.Size = UDim2.new(0, 181, 0, 42)
        OkayBtnTitle.Font = Enum.Font.Gotham
        OkayBtnTitle.Text = textbtn
        OkayBtnTitle.TextColor3 = Color3.fromRGB(255, 24, 24)
        OkayBtnTitle.TextSize = 14
        OkayBtnTitle.TextXAlignment = Enum.TextXAlignment.Left

        local NotificationTitle = Instance.new("TextLabel", NotificationFrame)
        NotificationTitle.Name = "NotificationTitle"
        NotificationTitle.BackgroundTransparency = 1
        NotificationTitle.Position = UDim2.new(0.0670731738, 0, 0.0829015523, 0)
        NotificationTitle.Size = UDim2.new(0, 143, 0, 26)
        NotificationTitle.Font = Enum.Font.Gotham
        NotificationTitle.Text = texttitle
        NotificationTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        NotificationTitle.TextSize = 18
        NotificationTitle.TextXAlignment = Enum.TextXAlignment.Left

        local NotificationDesc = Instance.new("TextLabel", NotificationFrame)
        NotificationDesc.Name = "NotificationDesc"
        NotificationDesc.BackgroundTransparency = 1
        NotificationDesc.Position = UDim2.new(0.0670000017, 0, 0.218999997, 0)
        NotificationDesc.Size = UDim2.new(0, 143, 0, 91)
        NotificationDesc.Font = Enum.Font.Gotham
        NotificationDesc.Text = textdesc
        NotificationDesc.TextColor3 = Color3.fromRGB(255, 255, 255)
        NotificationDesc.TextSize = 15
        NotificationDesc.TextWrapped = true
        NotificationDesc.TextXAlignment = Enum.TextXAlignment.Left
        NotificationDesc.TextYAlignment = Enum.TextYAlignment.Top

        OkayBtn.MouseEnter:Connect(function()
            TweenService:Create(OkayBtn, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(37, 37, 37)}):Play()
        end)
        OkayBtn.MouseLeave:Connect(function()
            TweenService:Create(OkayBtn, TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(34, 34, 34)}):Play()
        end)
        OkayBtn.MouseButton1Click:Connect(function()
            NotificationFrame:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
            wait(0.4)
            TweenService:Create(NotificationHold, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
            wait(.3)
            NotificationHold:Destroy()
        end)
    end

    local tabhold = {}
    function tabhold:Tab(text)
        local TabBtn = Instance.new("TextButton", TabHold)
        TabBtn.Name = "TabBtn"
        TabBtn.BackgroundTransparency = 1
        TabBtn.Size = UDim2.new(0, 107, 0, 21)
        TabBtn.Font = Enum.Font.SourceSans
        TabBtn.Text = ""
        TabBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
        TabBtn.TextSize = 14

        local TabTitle = Instance.new("TextLabel", TabBtn)
        TabTitle.Name = "TabTitle"
        TabTitle.BackgroundTransparency = 1
        TabTitle.Size = UDim2.new(0, 107, 0, 21)
        TabTitle.Font = Enum.Font.Gotham
        TabTitle.Text = text
        TabTitle.TextColor3 = Color3.fromRGB(150, 150, 150)
        TabTitle.TextSize = 14
        TabTitle.TextXAlignment = Enum.TextXAlignment.Left

        local TabBtnIndicator = Instance.new("Frame", TabBtn)
        TabBtnIndicator.Name = "TabBtnIndicator"
        TabBtnIndicator.BackgroundColor3 = PresetColor
        TabBtnIndicator.BorderSizePixel = 0
        TabBtnIndicator.Position = UDim2.new(0, 0, 1, 0)
        TabBtnIndicator.Size = UDim2.new(0, 0, 0, 2)

        local TabBtnIndicatorCorner = Instance.new("UICorner", TabBtnIndicator)

        coroutine.wrap(function() while wait() do TabBtnIndicator.BackgroundColor3 = PresetColor end end)()

        local Tab = Instance.new("ScrollingFrame", TabFolder)
        Tab.Name = "Tab"
        Tab.Active = true
        Tab.BackgroundTransparency = 1
        Tab.BorderSizePixel = 0
        Tab.Position = UDim2.new(0.31400001, 0, 0.147, 0)
        Tab.Size = UDim2.new(0, 373, 0, 254)
        Tab.CanvasSize = UDim2.new(0, 0, 0, 0)
        Tab.ScrollBarThickness = 3
        Tab.Visible = false

        local TabLayout = Instance.new("UIListLayout", Tab)
        TabLayout.Name = "TabLayout"
        TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
        TabLayout.Padding = UDim.new(0, 6)

        if not fs then
            fs = true
            TabBtnIndicator.Size = UDim2.new(0, 13, 0, 2)
            TabTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            Tab.Visible = true
        end

        TabBtn.MouseButton1Click:Connect(function()
            for _, v in next, TabFolder:GetChildren() do if v.Name == "Tab" then v.Visible = false end end
            Tab.Visible = true
            for _, v in next, TabHold:GetChildren() do
                if v.Name == "TabBtn" then
                    v.TabBtnIndicator:TweenSize(UDim2.new(0, 0, 0, 2), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .2, true)
                    TweenService:Create(v.TabTitle, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextColor3 = Color3.fromRGB(150, 150, 150)}):Play()
                end
            end
            TabBtnIndicator:TweenSize(UDim2.new(0, 13, 0, 2), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .2, true)
            TweenService:Create(TabTitle, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
        end)

        local tabcontent = {}
        function tabcontent:Button(text, callback)
            local Button = Instance.new("TextButton", Tab)
            Button.Name = "Button"
            Button.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            Button.Size = UDim2.new(0, 363, 0, 42)
            Button.AutoButtonColor = false
            Button.Font = Enum.Font.SourceSans
            Button.Text = ""
            Button.TextColor3 = Color3.fromRGB(0, 0, 0)
            Button.TextSize = 14

            local ButtonCorner = Instance.new("UICorner", Button)
            ButtonCorner.CornerRadius = UDim.new(0, 5)

            local ButtonTitle = Instance.new("TextLabel", Button)
            ButtonTitle.Name = "ButtonTitle"
            ButtonTitle.BackgroundTransparency = 1
            ButtonTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
            ButtonTitle.Size = UDim2.new(0, 187, 0, 42)
            ButtonTitle.Font = Enum.Font.Gotham
            ButtonTitle.Text = text
            ButtonTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            ButtonTitle.TextSize = 14
            ButtonTitle.TextXAlignment = Enum.TextXAlignment.Left

            local HoverButton = Instance.new("TextButton", Button)
            HoverButton.Name = "HoverButton"
            HoverButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            HoverButton.Size = UDim2.new(0, 30, 0, 30)
            HoverButton.Position = UDim2.new(-0.1, 0, 0.5, -15)
            HoverButton.Text = "▶"
            HoverButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            HoverButton.TextSize = 14
            HoverButton.Visible = false
            local HoverButtonCorner = Instance.new("UICorner", HoverButton)
            HoverButtonCorner.CornerRadius = UDim.new(0, 5)

            Button.MouseEnter:Connect(function()
                TweenService:Create(Button, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(37, 37, 37)}):Play()
                HoverButton.Visible = true
            end)
            Button.MouseLeave:Connect(function()
                TweenService:Create(Button, TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(34, 34, 34)}):Play()
                HoverButton.Visible = false
            end)
            Button.MouseButton1Click:Connect(function() pcall(callback) end)
            HoverButton.MouseButton1Click:Connect(function() pcall(callback) end)

            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end

        function tabcontent:Toggle(text, default, callback)
            local toggled = default or false

            local Toggle = Instance.new("TextButton", Tab)
            Toggle.Name = "Toggle"
            Toggle.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            Toggle.Size = UDim2.new(0, 363, 0, 42)
            Toggle.AutoButtonColor = false
            Toggle.Font = Enum.Font.SourceSans
            Toggle.Text = ""
            Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
            Toggle.TextSize = 14

            local ToggleCorner = Instance.new("UICorner", Toggle)
            ToggleCorner.CornerRadius = UDim.new(0, 5)

            local ToggleTitle = Instance.new("TextLabel", Toggle)
            ToggleTitle.Name = "ToggleTitle"
            ToggleTitle.BackgroundTransparency = 1
            ToggleTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
            ToggleTitle.Size = UDim2.new(0, 187, 0, 42)
            ToggleTitle.Font = Enum.Font.Gotham
            ToggleTitle.Text = text
            ToggleTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            ToggleTitle.TextSize = 14
            ToggleTitle.TextXAlignment = Enum.TextXAlignment.Left

            local FrameToggle1 = Instance.new("Frame", Toggle)
            FrameToggle1.Name = "FrameToggle1"
            FrameToggle1.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            FrameToggle1.Position = UDim2.new(0.859504104, 0, 0.285714298, 0)
            FrameToggle1.Size = UDim2.new(0, 37, 0, 18)

            local FrameToggle1Corner = Instance.new("UICorner", FrameToggle1)

            local FrameToggle2 = Instance.new("Frame", FrameToggle1)
            FrameToggle2.Name = "FrameToggle2"
            FrameToggle2.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            FrameToggle2.Position = UDim2.new(0.0489999987, 0, 0.0930000022, 0)
            FrameToggle2.Size = UDim2.new(0, 33, 0, 14)

            local FrameToggle2Corner = Instance.new("UICorner", FrameToggle2)

            local FrameToggle3 = Instance.new("Frame", FrameToggle1)
            FrameToggle3.Name = "FrameToggle3"
            FrameToggle3.BackgroundColor3 = PresetColor
            FrameToggle3.BackgroundTransparency = 1
            FrameToggle3.Size = UDim2.new(0, 37, 0, 18)

            local FrameToggle3Corner = Instance.new("UICorner", FrameToggle3)

            local FrameToggleCircle = Instance.new("Frame", FrameToggle1)
            FrameToggleCircle.Name = "FrameToggleCircle"
            FrameToggleCircle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            FrameToggleCircle.Position = UDim2.new(0.127000004, 0, 0.222000003, 0)
            FrameToggleCircle.Size = UDim2.new(0, 10, 0, 10)

            local FrameToggleCircleCorner = Instance.new("UICorner", FrameToggleCircle)

            local HoverButton = Instance.new("TextButton", Toggle)
            HoverButton.Name = "HoverButton"
            HoverButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            HoverButton.Size = UDim2.new(0, 30, 0, 30)
            HoverButton.Position = UDim2.new(-0.1, 0, 0.5, -15)
            HoverButton.Text = "▶"
            HoverButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            HoverButton.TextSize = 14
            HoverButton.Visible = false
            local HoverButtonCorner = Instance.new("UICorner", HoverButton)
            HoverButtonCorner.CornerRadius = UDim.new(0, 5)

            coroutine.wrap(function() while wait() do FrameToggle3.BackgroundColor3 = PresetColor end end)()

            local function toggleState()
                if toggled then
                    TweenService:Create(Toggle, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(37, 37, 37)}):Play()
                    TweenService:Create(FrameToggle1, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                    TweenService:Create(FrameToggle2, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                    TweenService:Create(FrameToggle3, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                    TweenService:Create(FrameToggleCircle, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(255, 255, 255)}):Play()
                    FrameToggleCircle:TweenPosition(UDim2.new(0.587, 0, 0.222, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .2, true)
                else
                    TweenService:Create(Toggle, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(34, 34, 34)}):Play()
                    TweenService:Create(FrameToggle1, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                    TweenService:Create(FrameToggle2, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                    TweenService:Create(FrameToggle3, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                    TweenService:Create(FrameToggleCircle, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}):Play()
                    FrameToggleCircle:TweenPosition(UDim2.new(0.127, 0, 0.222, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .2, true)
                end
                toggled = not toggled
                pcall(callback, toggled)
            end

            Toggle.MouseButton1Click:Connect(toggleState)
            HoverButton.MouseButton1Click:Connect(toggleState)

            Toggle.MouseEnter:Connect(function() HoverButton.Visible = true end)
            Toggle.MouseLeave:Connect(function() HoverButton.Visible = false end)

            if default then toggleState() end

            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end

        function tabcontent:Slider(text, min, max, start, callback)
            local dragging = false
            local Slider = Instance.new("TextButton", Tab)
            Slider.Name = "Slider"
            Slider.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            Slider.Size = UDim2.new(0, 363, 0, 60)
            Slider.AutoButtonColor = false
            Slider.Font = Enum.Font.SourceSans
            Slider.Text = ""
            Slider.TextColor3 = Color3.fromRGB(0, 0, 0)
            Slider.TextSize = 14

            local SliderCorner = Instance.new("UICorner", Slider)
            SliderCorner.CornerRadius = UDim.new(0, 5)

            local SliderTitle = Instance.new("TextLabel", Slider)
            SliderTitle.Name = "SliderTitle"
            SliderTitle.BackgroundTransparency = 1
            SliderTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
            SliderTitle.Size = UDim2.new(0, 187, 0, 42)
            SliderTitle.Font = Enum.Font.Gotham
            SliderTitle.Text = text
            SliderTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderTitle.TextSize = 14
            SliderTitle.TextXAlignment = Enum.TextXAlignment.Left

            local SliderValue = Instance.new("TextLabel", Slider)
            SliderValue.Name = "SliderValue"
            SliderValue.BackgroundTransparency = 1
            SliderValue.Position = UDim2.new(0.0358126722, 0, 0, 0)
            SliderValue.Size = UDim2.new(0, 335, 0, 42)
            SliderValue.Font = Enum.Font.Gotham
            SliderValue.Text = tostring(start and math.floor((start / max) * (max - min) + min) or 0)
            SliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderValue.TextSize = 14
            SliderValue.TextXAlignment = Enum.TextXAlignment.Right

            local SlideFrame = Instance.new("Frame", Slider)
            SlideFrame.Name = "SlideFrame"
            SlideFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            SlideFrame.BorderSizePixel = 0
            SlideFrame.Position = UDim2.new(0.0342647657, 0, 0.686091602, 0)
            SlideFrame.Size = UDim2.new(0, 335, 0, 3)

            local CurrentValueFrame = Instance.new("Frame", SlideFrame)
            CurrentValueFrame.Name = "CurrentValueFrame"
            CurrentValueFrame.BackgroundColor3 = PresetColor
            CurrentValueFrame.BorderSizePixel = 0
            CurrentValueFrame.Size = UDim2.new((start or 0) / max, 0, 0, 3)

            local SlideCircle = Instance.new("ImageButton", SlideFrame)
            SlideCircle.Name = "SlideCircle"
            SlideCircle.BackgroundTransparency = 1
            SlideCircle.Position = UDim2.new((start or 0) / max, -6, -1.30499995, 0)
            SlideCircle.Size = UDim2.new(0, 11, 0, 11)
            SlideCircle.Image = "rbxassetid://3570695787"
            SlideCircle.ImageColor3 = PresetColor

            coroutine.wrap(function() while wait() do CurrentValueFrame.BackgroundColor3 = PresetColor SlideCircle.ImageColor3 = PresetColor end end)()

            local function move(input)
                local pos = UDim2.new(math.clamp((input.Position.X - SlideFrame.AbsolutePosition.X) / SlideFrame.AbsoluteSize.X, 0, 1), -6, -1.30499995, 0)
                local pos1 = UDim2.new(math.clamp((input.Position.X - SlideFrame.AbsolutePosition.X) / SlideFrame.AbsoluteSize.X, 0, 1), 0, 0, 3)
                CurrentValueFrame:TweenSize(pos1, "Out", "Sine", 0.1, true)
                SlideCircle:TweenPosition(pos, "Out", "Sine", 0.1, true)
                local value = math.floor(((pos.X.Scale * max) / max) * (max - min) + min)
                SliderValue.Text = tostring(value)
                pcall(callback, value)
            end

            SlideCircle.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = true end end)
            SlideCircle.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end end)
            UserInputService.InputChanged:Connect(function(input) if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then move(input) end end)

            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end

        function tabcontent:Dropdown(text, list, callback)
            local droptog = false
            local framesize = 0
            local itemcount = 0

            local Dropdown = Instance.new("Frame", Tab)
            Dropdown.Name = "Dropdown"
            Dropdown.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            Dropdown.ClipsDescendants = true
            Dropdown.Size = UDim2.new(0, 363, 0, 42)

            local DropdownCorner = Instance.new("UICorner", Dropdown)
            DropdownCorner.CornerRadius = UDim.new(0, 5)

            local DropdownBtn = Instance.new("TextButton", Dropdown)
            DropdownBtn.Name = "DropdownBtn"
            DropdownBtn.BackgroundTransparency = 1
            DropdownBtn.Size = UDim2.new(0, 363, 0, 42)
            DropdownBtn.Font = Enum.Font.SourceSans
            DropdownBtn.Text = ""
            DropdownBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
            DropdownBtn.TextSize = 14

            local DropdownTitle = Instance.new("TextLabel", Dropdown)
            DropdownTitle.Name = "DropdownTitle"
            DropdownTitle.BackgroundTransparency = 1
            DropdownTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
            DropdownTitle.Size = UDim2.new(0, 187, 0, 42)
            DropdownTitle.Font = Enum.Font.Gotham
            DropdownTitle.Text = text
            DropdownTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            DropdownTitle.TextSize = 14
            DropdownTitle.TextXAlignment = Enum.TextXAlignment.Left

            local ArrowImg = Instance.new("ImageLabel", DropdownTitle)
            ArrowImg.Name = "ArrowImg"
            ArrowImg.BackgroundTransparency = 1
            ArrowImg.Position = UDim2.new(1.65240645, 0, 0.190476194, 0)
            ArrowImg.Size = UDim2.new(0, 26, 0, 26)
            ArrowImg.Image = "http://www.roblox.com/asset/?id=6034818375"

            local DropItemHolder = Instance.new("ScrollingFrame", DropdownTitle)
            DropItemHolder.Name = "DropItemHolder"
            DropItemHolder.Active = true
            DropItemHolder.BackgroundTransparency = 1
            DropItemHolder.BorderSizePixel = 0
            DropItemHolder.Position = UDim2.new(-0.004, 0, 1.05, 0)
            DropItemHolder.Size = UDim2.new(0, 342, 0, 0)
            DropItemHolder.CanvasSize = UDim2.new(0, 0, 0, 0)
            DropItemHolder.ScrollBarThickness = 3

            local DropLayout = Instance.new("UIListLayout", DropItemHolder)
            DropLayout.Name = "DropLayout"
            DropLayout.SortOrder = Enum.SortOrder.LayoutOrder

            DropdownBtn.MouseButton1Click:Connect(function()
                if droptog then
                    Dropdown:TweenSize(UDim2.new(0, 363, 0, 42), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .2, true)
                    TweenService:Create(ArrowImg, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                else
                    Dropdown:TweenSize(UDim2.new(0, 363, 0, 55 + framesize), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .2, true)
                    TweenService:Create(ArrowImg, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Rotation = 270}):Play()
                end
                wait(.2)
                Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
                droptog = not droptog
            end)

            for _, v in next, list do
                itemcount = itemcount + 1
                if itemcount <= 3 then
                    framesize = framesize + 26
                    DropItemHolder.Size = UDim2.new(0, 342, 0, framesize)
                end
                local Item = Instance.new("TextButton", DropItemHolder)
                Item.Name = "Item"
                Item.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
                Item.ClipsDescendants = true
                Item.Size = UDim2.new(0, 335, 0, 25)
                Item.AutoButtonColor = false
                Item.Font = Enum.Font.Gotham
                Item.Text = v
                Item.TextColor3 = Color3.fromRGB(255, 255, 255)
                Item.TextSize = 15

                local ItemCorner = Instance.new("UICorner", Item)
                ItemCorner.CornerRadius = UDim.new(0, 4)

                Item.MouseEnter:Connect(function()
                    TweenService:Create(Item, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(37, 37, 37)}):Play()
                end)
                Item.MouseLeave:Connect(function()
                    TweenService:Create(Item, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(34, 34, 34)}):Play()
                end)
                Item.MouseButton1Click:Connect(function()
                    droptog = false
                    DropdownTitle.Text = text .. " - " .. v
                    pcall(callback, v)
                    Dropdown:TweenSize(UDim2.new(0, 363, 0, 42), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .2, true)
                    TweenService:Create(ArrowImg, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                    wait(.2)
                    Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
                end)
                DropItemHolder.CanvasSize = UDim2.new(0, 0, 0, DropLayout.AbsoluteContentSize.Y)
            end
            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end

        function tabcontent:Colorpicker(text, preset, callback)
            local ColorPickerToggled = false
            local OldToggleColor = Color3.fromRGB(0, 0, 0)
            local OldColor = Color3.fromRGB(0, 0, 0)
            local OldColorSelectionPosition, OldHueSelectionPosition
            local ColorH, ColorS, ColorV = 1, 1, 1
            local RainbowColorPicker = false
            local ColorPickerInput, ColorInput, HueInput

            local Colorpicker = Instance.new("Frame", Tab)
            Colorpicker.Name = "Colorpicker"
            Colorpicker.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            Colorpicker.ClipsDescendants = true
            Colorpicker.Size = UDim2.new(0, 363, 0, 42)

            local ColorpickerCorner = Instance.new("UICorner", Colorpicker)
            ColorpickerCorner.CornerRadius = UDim.new(0, 5)

            local ColorpickerTitle = Instance.new("TextLabel", Colorpicker)
            ColorpickerTitle.Name = "ColorpickerTitle"
            ColorpickerTitle.BackgroundTransparency = 1
            ColorpickerTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
            ColorpickerTitle.Size = UDim2.new(0, 187, 0, 42)
            ColorpickerTitle.Font = Enum.Font.Gotham
            ColorpickerTitle.Text = text
            ColorpickerTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            ColorpickerTitle.TextSize = 14
            ColorpickerTitle.TextXAlignment = Enum.TextXAlignment.Left

            local BoxColor = Instance.new("Frame", ColorpickerTitle)
            BoxColor.Name = "BoxColor"
            BoxColor.BackgroundColor3 = preset
            BoxColor.Position = UDim2.new(1.60427809, 0, 0.214285716, 0)
            BoxColor.Size = UDim2.new(0, 41, 0, 23)

            local BoxColorCorner = Instance.new("UICorner", BoxColor)
            BoxColorCorner.CornerRadius = UDim.new(0, 5)

            local ColorpickerBtn = Instance.new("TextButton", ColorpickerTitle)
            ColorpickerBtn.Name = "ColorpickerBtn"
            ColorpickerBtn.BackgroundTransparency = 1
            ColorpickerBtn.Size = UDim2.new(0, 363, 0, 42)
            ColorpickerBtn.Font = Enum.Font.SourceSans
            ColorpickerBtn.Text = ""
            ColorpickerBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
            ColorpickerBtn.TextSize = 14

            local ConfirmBtn = Instance.new("TextButton", ColorpickerTitle)
            ConfirmBtn.Name = "ConfirmBtn"
            ConfirmBtn.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            ConfirmBtn.Position = UDim2.new(1.25814295, 0, 1.09037197, 0)
            ConfirmBtn.Size = UDim2.new(0, 105, 0, 32)
            ConfirmBtn.AutoButtonColor = false
            ConfirmBtn.Font = Enum.Font.SourceSans
            ConfirmBtn.Text = ""
            ConfirmBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
            ConfirmBtn.TextSize = 14

            local ConfirmBtnCorner = Instance.new("UICorner", ConfirmBtn)
            ConfirmBtnCorner.CornerRadius = UDim.new(0, 5)

            local ConfirmBtnTitle = Instance.new("TextLabel", ConfirmBtn)
            ConfirmBtnTitle.Name = "ConfirmBtnTitle"
            ConfirmBtnTitle.BackgroundTransparency = 1
            ConfirmBtnTitle.Size = UDim2.new(0, 33, 0, 32)
            ConfirmBtnTitle.Font = Enum.Font.Gotham
            ConfirmBtnTitle.Text = "Confirm"
            ConfirmBtnTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            ConfirmBtnTitle.TextSize = 14
            ConfirmBtnTitle.TextXAlignment = Enum.TextXAlignment.Left

            local RainbowToggle = Instance.new("TextButton", ColorpickerTitle)
            RainbowToggle.Name = "RainbowToggle"
            RainbowToggle.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            RainbowToggle.Position = UDim2.new(1.26349044, 0, 2.12684202, 0)
            RainbowToggle.Size = UDim2.new(0, 104, 0, 32)
            RainbowToggle.AutoButtonColor = false
            RainbowToggle.Font = Enum.Font.SourceSans
            RainbowToggle.Text = ""
            RainbowToggle.TextColor3 = Color3.fromRGB(0, 0, 0)
            RainbowToggle.TextSize = 14

            local RainbowToggleCorner = Instance.new("UICorner", RainbowToggle)
            RainbowToggleCorner.CornerRadius = UDim.new(0, 5)

            local RainbowToggleTitle = Instance.new("TextLabel", RainbowToggle)
            RainbowToggleTitle.Name = "RainbowToggleTitle"
            RainbowToggleTitle.BackgroundTransparency = 1
            RainbowToggleTitle.Size = UDim2.new(0, 33, 0, 32)
            RainbowToggleTitle.Font = Enum.Font.Gotham
            RainbowToggleTitle.Text = "Rainbow"
            RainbowToggleTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            RainbowToggleTitle.TextSize = 14
            RainbowToggleTitle.TextXAlignment = Enum.TextXAlignment.Left

            local FrameRainbowToggle1 = Instance.new("Frame", RainbowToggle)
            FrameRainbowToggle1.Name = "FrameRainbowToggle1"
            FrameRainbowToggle1.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            FrameRainbowToggle1.Position = UDim2.new(0.649999976, 0, 0.186000004, 0)
            FrameRainbowToggle1.Size = UDim2.new(0, 37, 0, 18)

            local FrameRainbowToggle1Corner = Instance.new("UICorner", FrameRainbowToggle1)

            local FrameRainbowToggle2 = Instance.new("Frame", FrameRainbowToggle1)
            FrameRainbowToggle2.Name = "FrameRainbowToggle2"
            FrameRainbowToggle2.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            FrameRainbowToggle2.Position = UDim2.new(0.0590000004, 0, 0.112999998, 0)
            FrameRainbowToggle2.Size = UDim2.new(0, 33, 0, 14)

            local FrameRainbowToggle2_2 = Instance.new("UICorner", FrameRainbowToggle2)

            local FrameRainbowToggle3 = Instance.new("Frame", FrameRainbowToggle1)
            FrameRainbowToggle3.Name = "FrameRainbowToggle3"
            FrameRainbowToggle3.BackgroundColor3 = PresetColor
            FrameRainbowToggle3.BackgroundTransparency = 1
            FrameRainbowToggle3.Size = UDim2.new(0, 37, 0, 18)

            local FrameToggle3 = Instance.new("UICorner", FrameRainbowToggle3)

            local FrameRainbowToggleCircle = Instance.new("Frame", FrameRainbowToggle1)
            FrameRainbowToggleCircle.Name = "FrameRainbowToggleCircle"
            FrameRainbowToggleCircle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            FrameRainbowToggleCircle.Position = UDim2.new(0.127000004, 0, 0.222000003, 0)
            FrameRainbowToggleCircle.Size = UDim2.new(0, 10, 0, 10)

            local FrameRainbowToggleCircleCorner = Instance.new("UICorner", FrameRainbowToggleCircle)

            local Color = Instance.new("ImageLabel", ColorpickerTitle)
            Color.Name = "Color"
            Color.BackgroundColor3 = preset
            Color.Position = UDim2.new(0, 0, 0, 42)
            Color.Size = UDim2.new(0, 194, 0, 80)
            Color.ZIndex = 10
            Color.Image = "rbxassetid://4155801252"

            local ColorCorner = Instance.new("UICorner", Color)
            ColorCorner.CornerRadius = UDim.new(0, 3)

            local ColorSelection = Instance.new("ImageLabel", Color)
            ColorSelection.Name = "ColorSelection"
            ColorSelection.AnchorPoint = Vector2.new(0.5, 0.5)
            ColorSelection.BackgroundTransparency = 1
            ColorSelection.Position = UDim2.new(preset and select(3, Color3.toHSV(preset)))
            ColorSelection.Size = UDim2.new(0, 18, 0, 18)
            ColorSelection.Image = "http://www.roblox.com/asset/?id=4805639000"
            ColorSelection.ScaleType = Enum.ScaleType.Fit
            ColorSelection.Visible = false

            local Hue = Instance.new("ImageLabel", ColorpickerTitle)
            Hue.Name = "Hue"
            Hue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Hue.Position = UDim2.new(0, 202, 0, 42)
            Hue.Size = UDim2.new(0, 25, 0, 80)

            local HueCorner = Instance.new("UICorner", Hue)
            HueCorner.CornerRadius = UDim.new(0, 3)

            local HueGradient = Instance.new("UIGradient", Hue)
            HueGradient.Color = ColorSequence.new {
                ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 4)),
                ColorSequenceKeypoint.new(0.2, Color3.fromRGB(234, 255, 0)),
                ColorSequenceKeypoint.new(0.4, Color3.fromRGB(21, 255, 0)),
                ColorSequenceKeypoint.new(0.6, Color3.fromRGB(0, 255, 255)),
                ColorSequenceKeypoint.new(0.8, Color3.fromRGB(0, 17, 255)),
                ColorSequenceKeypoint.new(0.9, Color3.fromRGB(255, 0, 251)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 4))
            }
            HueGradient.Rotation = 270

            local HueSelection = Instance.new("ImageLabel", Hue)
            HueSelection.Name = "HueSelection"
            HueSelection.AnchorPoint = Vector2.new(0.5, 0.5)
            HueSelection.BackgroundTransparency = 1
            HueSelection.Position = UDim2.new(0.48, 0, 1 - select(1, Color3.toHSV(preset)))
            HueSelection.Size = UDim2.new(0, 18, 0, 18)
            HueSelection.Image = "http://www.roblox.com/asset/?id=4805639000"
            HueSelection.Visible = false

            coroutine.wrap(function() while wait() do FrameRainbowToggle3.BackgroundColor3 = PresetColor end end)()

            ColorpickerBtn.MouseButton1Click:Connect(function()
                if ColorPickerToggled then
                    ColorSelection.Visible = false
                    HueSelection.Visible = false
                    Colorpicker:TweenSize(UDim2.new(0, 363, 0, 42), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .2, true)
                else
                    ColorSelection.Visible = true
                    HueSelection.Visible = true
                    Colorpicker:TweenSize(UDim2.new(0, 363, 0, 132), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .2, true)
                end
                wait(.2)
                Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
                ColorPickerToggled = not ColorPickerToggled
            end)

            local function UpdateColorPicker(nope)
                BoxColor.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
                Color.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)
                pcall(callback, BoxColor.BackgroundColor3)
            end

            ColorH = 1 - (math.clamp(HueSelection.AbsolutePosition.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) / Hue.AbsoluteSize.Y)
            ColorS = (math.clamp(ColorSelection.AbsolutePosition.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) / Color.AbsoluteSize.X)
            ColorV = 1 - (math.clamp(ColorSelection.AbsolutePosition.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) / Color.AbsoluteSize.Y)

            BoxColor.BackgroundColor3 = preset
            Color.BackgroundColor3 = preset
            pcall(callback, BoxColor.BackgroundColor3)

            Color.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 and not RainbowColorPicker then
                    if ColorInput then ColorInput:Disconnect() end
                    ColorInput = RunService.RenderStepped:Connect(function()
                        local ColorX = (math.clamp(Mouse.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) / Color.AbsoluteSize.X)
                        local ColorY = (math.clamp(Mouse.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) / Color.AbsoluteSize.Y)
                        ColorSelection.Position = UDim2.new(ColorX, 0, ColorY, 0)
                        ColorS = ColorX
                        ColorV = 1 - ColorY
                        UpdateColorPicker(true)
                    end)
                end
            end)

            Color.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 and ColorInput then ColorInput:Disconnect() end end)

            Hue.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 and not RainbowColorPicker then
                    if HueInput then HueInput:Disconnect() end
                    HueInput = RunService.RenderStepped:Connect(function()
                        local HueY = (math.clamp(Mouse.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) / Hue.AbsoluteSize.Y)
                        HueSelection.Position = UDim2.new(0.48, 0, HueY, 0)
                        ColorH = 1 - HueY
                        UpdateColorPicker(true)
                    end)
                end
            end)

            Hue.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 and HueInput then HueInput:Disconnect() end end)

            RainbowToggle.MouseButton1Down:Connect(function()
                RainbowColorPicker = not RainbowColorPicker
                if ColorInput then ColorInput:Disconnect() end
                if HueInput then HueInput:Disconnect() end

                if RainbowColorPicker then
                    TweenService:Create(FrameRainbowToggle1, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                    TweenService:Create(FrameRainbowToggle2, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                    TweenService:Create(FrameRainbowToggle3, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                    TweenService:Create(FrameRainbowToggleCircle, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(255, 255, 255)}):Play()
                    FrameRainbowToggleCircle:TweenPosition(UDim2.new(0.587, 0, 0.222, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .2, true)

                    OldToggleColor = BoxColor.BackgroundColor3
                    OldColor = Color.BackgroundColor3
                    OldColorSelectionPosition = ColorSelection.Position
                    OldHueSelectionPosition = HueSelection.Position

                    while RainbowColorPicker do
                        BoxColor.BackgroundColor3 = Color3.fromHSV(lib.RainbowColorValue, 1, 1)
                        Color.BackgroundColor3 = Color3.fromHSV(lib.RainbowColorValue, 1, 1)
                        ColorSelection.Position = UDim2.new(1, 0, 0, 0)
                        HueSelection.Position = UDim2.new(0.48, 0, 0, lib.HueSelectionPosition)
                        pcall(callback, BoxColor.BackgroundColor3)
                        wait()
                    end
                else
                    TweenService:Create(FrameRainbowToggle1, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                    TweenService:Create(FrameRainbowToggle2, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                    TweenService:Create(FrameRainbowToggle3, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                    TweenService:Create(FrameRainbowToggleCircle, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}):Play()
                    FrameRainbowToggleCircle:TweenPosition(UDim2.new(0.127, 0, 0.222, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .2, true)

                    BoxColor.BackgroundColor3 = OldToggleColor
                    Color.BackgroundColor3 = OldColor
                    ColorSelection.Position = OldColorSelectionPosition
                    HueSelection.Position = OldHueSelectionPosition
                    pcall(callback, BoxColor.BackgroundColor3)
                end
            end)

            ConfirmBtn.MouseButton1Click:Connect(function()
                ColorSelection.Visible = false
                HueSelection.Visible = false
                Colorpicker:TweenSize(UDim2.new(0, 363, 0, 42), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .2, true)
                wait(.2)
                Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
            end)
            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end

        function tabcontent:Label(text)
            local Label = Instance.new("TextButton", Tab)
            Label.Name = "Label"
            Label.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            Label.Size = UDim2.new(0, 363, 0, 42)
            Label.AutoButtonColor = false
            Label.Font = Enum.Font.SourceSans
            Label.Text = ""
            Label.TextColor3 = Color3.fromRGB(0, 0, 0)
            Label.TextSize = 14

            local LabelCorner = Instance.new("UICorner", Label)
            LabelCorner.CornerRadius = UDim.new(0, 5)

            local LabelTitle = Instance.new("TextLabel", Label)
            LabelTitle.Name = "LabelTitle"
            LabelTitle.BackgroundTransparency = 1
            LabelTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
            LabelTitle.Size = UDim2.new(0, 187, 0, 42)
            LabelTitle.Font = Enum.Font.Gotham
            LabelTitle.Text = text
            LabelTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            LabelTitle.TextSize = 14
            LabelTitle.TextXAlignment = Enum.TextXAlignment.Left

            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end

        function tabcontent:Textbox(text, disapper, callback)
            local Textbox = Instance.new("Frame", Tab)
            Textbox.Name = "Textbox"
            Textbox.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            Textbox.ClipsDescendants = true
            Textbox.Size = UDim2.new(0, 363, 0, 42)

            local TextboxCorner = Instance.new("UICorner", Textbox)
            TextboxCorner.CornerRadius = UDim.new(0, 5)

            local TextboxTitle = Instance.new("TextLabel", Textbox)
            TextboxTitle.Name = "TextboxTitle"
            TextboxTitle.BackgroundTransparency = 1
            TextboxTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
            TextboxTitle.Size = UDim2.new(0, 187, 0, 42)
            TextboxTitle.Font = Enum.Font.Gotham
            TextboxTitle.Text = text
            TextboxTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            TextboxTitle.TextSize = 14
            TextboxTitle.TextXAlignment = Enum.TextXAlignment.Left

            local TextboxFrame = Instance.new("Frame", TextboxTitle)
            TextboxFrame.Name = "TextboxFrame"
            TextboxFrame.BackgroundColor3 = Color3.fromRGB(37, 37, 37)
            TextboxFrame.Position = UDim2.new(1.28877008, 0, 0.214285716, 0)
            TextboxFrame.Size = UDim2.new(0, 100, 0, 23)

            local TextboxFrameCorner = Instance.new("UICorner", TextboxFrame)
            TextboxFrameCorner.CornerRadius = UDim.new(0, 5)

            local TextBox = Instance.new("TextBox", TextboxFrame)
            TextBox.BackgroundTransparency = 1
            TextBox.Size = UDim2.new(0, 100, 0, 23)
            TextBox.Font = Enum.Font.Gotham
            TextBox.Text = ""
            TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
            TextBox.TextSize = 14

            TextBox.FocusLost:Connect(function(ep)
                if ep and #TextBox.Text > 0 then
                    pcall(callback, TextBox.Text)
                    if disapper then TextBox.Text = "" end
                end
            end)
            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end

        function tabcontent:Bind(text, keypreset, callback)
            local binding = false
            local Key = keypreset.Name

            local Bind = Instance.new("TextButton", Tab)
            Bind.Name = "Bind"
            Bind.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
            Bind.Size = UDim2.new(0, 363, 0, 42)
            Bind.AutoButtonColor = false
            Bind.Font = Enum.Font.SourceSans
            Bind.Text = ""
            Bind.TextColor3 = Color3.fromRGB(0, 0, 0)
            Bind.TextSize = 14

            local BindCorner = Instance.new("UICorner", Bind)
            BindCorner.CornerRadius = UDim.new(0, 5)

            local BindTitle = Instance.new("TextLabel", Bind)
            BindTitle.Name = "BindTitle"
            BindTitle.BackgroundTransparency = 1
            BindTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
            BindTitle.Size = UDim2.new(0, 187, 0, 42)
            BindTitle.Font = Enum.Font.Gotham
            BindTitle.Text = text
            BindTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            BindTitle.TextSize = 14
            BindTitle.TextXAlignment = Enum.TextXAlignment.Left

            local BindText = Instance.new("TextLabel", Bind)
            BindText.Name = "BindText"
            BindText.BackgroundTransparency = 1
            BindText.Position = UDim2.new(0.0358126722, 0, 0, 0)
            BindText.Size = UDim2.new(0, 337, 0, 42)
            BindText.Font = Enum.Font.Gotham
            BindText.Text = Key
            BindText.TextColor3 = Color3.fromRGB(255, 255, 255)
            BindText.TextSize = 14
            BindText.TextXAlignment = Enum.TextXAlignment.Right

            Bind.MouseButton1Click:Connect(function()
                BindText.Text = "..."
                binding = true
                local inputwait = UserInputService.InputBegan:Wait()
                if inputwait.KeyCode.Name ~= "Unknown" then
                    BindText.Text = inputwait.KeyCode.Name
                    Key = inputwait.KeyCode.Name
                end
                binding = false
            end)

            UserInputService.InputBegan:Connect(function(current, pressed)
                if not pressed and current.KeyCode.Name == Key and not binding then pcall(callback) end
            end)

            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end

        return tabcontent
    end
    return tabhold
end
return lib
