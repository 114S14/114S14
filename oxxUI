local lib = {RainbowColorValue = 0, HueSelectionPosition = 0}
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local PresetColor = Color3.fromRGB(44, 120, 224)
local CloseBind = Enum.KeyCode.RightControl

local ui = Instance.new("ScreenGui")
ui.Name = "ui"
ui.Parent = game.CoreGui
ui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

coroutine.wrap(
    function()
        while wait() do
            lib.RainbowColorValue = lib.RainbowColorValue + 1 / 255
            lib.HueSelectionPosition = lib.HueSelectionPosition + 1

            if lib.RainbowColorValue >= 1 then
                lib.RainbowColorValue = 0
            end

            if lib.HueSelectionPosition == 80 then
                lib.HueSelectionPosition = 0
            end
        end
    end
)()

local function MakeDraggable(topbarobject, object)
    local Dragging = nil
    local DragInput = nil
    local DragStart = nil
    local StartPosition = nil

    local function Update(input)
        local Delta = input.Position - DragStart
        local pos = UDim2.new(
            StartPosition.X.Scale,
            StartPosition.X.Offset + Delta.X,
            StartPosition.Y.Scale,
            StartPosition.Y.Offset + Delta.Y
        )
        object.Position = pos
    end

    topbarobject.InputBegan:Connect(
        function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                Dragging = true
                DragStart = input.Position
                StartPosition = object.Position

                input.Changed:Connect(
                    function()
                        if input.UserInputState == Enum.UserInputState.End then
                            Dragging = false
                        end
                    end
                )
            end
        end
    )

    topbarobject.InputChanged:Connect(
        function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                DragInput = input
            end
        end
    )

    UserInputService.InputChanged:Connect(
        function(input)
            if input == DragInput and Dragging then
                Update(input)
            end
        end
    )
end

function lib:Window(text, preset, closebind)
    CloseBind = closebind or Enum.KeyCode.RightControl
    PresetColor = preset or Color3.fromRGB(44, 120, 224)
    local fs = false
    local isMinimized = false
    
    -- 主框架
    local Main = Instance.new("Frame")
    local TabHold = Instance.new("Frame")
    local TabHoldLayout = Instance.new("UIListLayout")
    local TitleBar = Instance.new("Frame")
    local LogoImage = Instance.new("ImageLabel")
    local Title = Instance.new("TextLabel")
    local Subtitle = Instance.new("TextLabel")
    local CloseButton = Instance.new("ImageButton")
    local MinimizeButton = Instance.new("ImageButton") -- 新增缩小按钮
    local OpenButton = Instance.new("TextButton") -- 新增开启UI按钮
    local TabFolder = Instance.new("Folder")
    local DragFrame = Instance.new("Frame")

    Main.Name = "Main"
    Main.Parent = ui
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    Main.BorderSizePixel = 0
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.Size = UDim2.new(0, 0, 0, 0)
    Main.ClipsDescendants = true
    Main.Visible = true

    TitleBar.Name = "TitleBar"
    TitleBar.Parent = Main
    TitleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    TitleBar.Size = UDim2.new(1, 0, 0, 40)
    TitleBar.BorderSizePixel = 0

    LogoImage.Name = "LogoImage"
    LogoImage.Parent = TitleBar
    LogoImage.BackgroundTransparency = 1
    LogoImage.Position = UDim2.new(0, 5, 0.5, -12)
    LogoImage.Size = UDim2.new(0, 24, 0, 24)
    LogoImage.Image = "rbxassetid://YOUR_ASSET_ID_HERE"

    Title.Name = "Title"
    Title.Parent = TitleBar
    Title.BackgroundTransparency = 1
    Title.Position = UDim2.new(0, 34, 0, 2)
    Title.Size = UDim2.new(0, 200, 0, 20)
    Title.Font = Enum.Font.GothamSemibold
    Title.Text = text
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextSize = 14
    Title.TextXAlignment = Enum.TextXAlignment.Left

    Subtitle.Name = "Subtitle"
    Subtitle.Parent = TitleBar
    Subtitle.BackgroundTransparency = 1
    Subtitle.Position = UDim2.new(0, 34, 0, 22)
    Subtitle.Size = UDim2.new(0, 200, 0, 14)
    Subtitle.Font = Enum.Font.Gotham
    Subtitle.Text = "GUI Description"
    Subtitle.TextColor3 = Color3.fromRGB(150, 150, 150)
    Subtitle.TextSize = 10
    Subtitle.TextXAlignment = Enum.TextXAlignment.Left

    CloseButton.Name = "CloseButton"
    CloseButton.Parent = TitleBar
    CloseButton.BackgroundTransparency = 1
    CloseButton.Position = UDim2.new(1, -35, 0.5, -12)
    CloseButton.Size = UDim2.new(0, 24, 0, 24)
    CloseButton.Image = "rbxassetid://6035047409"
    CloseButton.ImageColor3 = Color3.fromRGB(200, 50, 50)

    MinimizeButton.Name = "MinimizeButton"
    MinimizeButton.Parent = TitleBar
    MinimizeButton.BackgroundTransparency = 1
    MinimizeButton.Position = UDim2.new(1, -65, 0.5, -12)
    MinimizeButton.Size = UDim2.new(0, 24, 0, 24)
    MinimizeButton.Image = "rbxassetid://6035067836" -- Roblox默认缩小图标
    MinimizeButton.ImageColor3 = Color3.fromRGB(200, 200, 200)

    OpenButton.Name = "OpenButton"
    OpenButton.Parent = ui
    OpenButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    OpenButton.Position = UDim2.new(0.01, 0, 0.01, 0)
    OpenButton.Size = UDim2.new(0, 100, 0, 30)
    OpenButton.Font = Enum.Font.Gotham
    OpenButton.Text = "Open UI"
    OpenButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    OpenButton.TextSize = 14
    OpenButton.Visible = false

    TabHold.Name = "TabHold"
    TabHold.Parent = Main
    TabHold.BackgroundTransparency = 1
    TabHold.Position = UDim2.new(0.0339285731, 0, 0.147335425, 0)
    TabHold.Size = UDim2.new(0, 107, 0, 254)

    TabHoldLayout.Name = "TabHoldLayout"
    TabHoldLayout.Parent = TabHold
    TabHoldLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabHoldLayout.Padding = UDim.new(0, 11)

    DragFrame.Name = "DragFrame"
    DragFrame.Parent = TitleBar
    DragFrame.BackgroundTransparency = 1
    DragFrame.Size = UDim2.new(1, 0, 1, 0)

    Main:TweenSize(UDim2.new(0, 560, 0, 319), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)

    MakeDraggable(DragFrame, Main)

    local function ToggleUI(state)
        if state then
            Main:TweenSize(UDim2.new(0, 560, 0, 319), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
            Main.Visible = true
            OpenButton.Visible = false
        else
            Main:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true, function()
                Main.Visible = false
                if isMinimized then
                    OpenButton.Visible = true
                end
            end)
        end
    end

    UserInputService.InputBegan:Connect(function(io, p)
        if io.KeyCode == CloseBind and not p then
            if not isMinimized then
                ToggleUI(false)
            end
        end
    end)

    CloseButton.MouseButton1Click:Connect(function()
        ToggleUI(false)
        isMinimized = false
        OpenButton.Visible = false
    end)

    MinimizeButton.MouseButton1Click:Connect(function()
        isMinimized = true
        ToggleUI(false)
        OpenButton.Visible = true
    end)

    OpenButton.MouseButton1Click:Connect(function()
        isMinimized = false
        ToggleUI(true)
    end)

    CloseButton.MouseEnter:Connect(function()
        TweenService:Create(CloseButton, TweenInfo.new(.2), {ImageColor3 = Color3.fromRGB(255, 50, 50)}):Play()
    end)
    CloseButton.MouseLeave:Connect(function()
        TweenService:Create(CloseButton, TweenInfo.new(.2), {ImageColor3 = Color3.fromRGB(200, 50, 50)}):Play()
    end)

    MinimizeButton.MouseEnter:Connect(function()
        TweenService:Create(MinimizeButton, TweenInfo.new(.2), {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()
    end)
    MinimizeButton.MouseLeave:Connect(function()
        TweenService:Create(MinimizeButton, TweenInfo.new(.2), {ImageColor3 = Color3.fromRGB(200, 200, 200)}):Play()
    end)

    TabFolder.Name = "TabFolder"
    TabFolder.Parent = Main

    function lib:ChangePresetColor(toch)
        PresetColor = toch
    end

    function lib:Notification(texttitle, textdesc, textbtn)
        -- 通知功能保持不变，这里省略具体实现
        -- 你可以从之前的代码中复制过来
    end

    local tabhold = {}
    function tabhold:Tab(text)
        -- Tab功能保持不变，这里省略具体实现
        -- 你可以从之前的代码中复制过来
    end
    return tabhold
end
return lib
