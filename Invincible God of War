--https://v3rmillion.net/showthread.php?tid=1182163
local library = {}
library.Flags = {}
library.DefaultColor = Color3.fromRGB(56, 207, 154)

local Players = game:GetService("Players")
local Player = Players.LocalPlayer

local Mouse = Player:GetMouse()

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local Blacklist = {Enum.KeyCode.Unknown, Enum.KeyCode.CapsLock, Enum.KeyCode.Escape, Enum.KeyCode.Tab, Enum.KeyCode.Return, Enum.KeyCode.Backspace, Enum.KeyCode.Space, Enum.KeyCode.W, Enum.KeyCode.A, Enum.KeyCode.S, Enum.KeyCode.D}

for _,v in pairs(game:GetService("CoreGui"):GetChildren()) do
    if v.Name == "Revenant" then
        v:Destroy()
    end
end

function library:GetXY(GuiObject)
	local Max, May = GuiObject.AbsoluteSize.X, GuiObject.AbsoluteSize.Y
	local Px, Py = math.clamp(Mouse.X - GuiObject.AbsolutePosition.X, 0, Max), math.clamp(Mouse.Y - GuiObject.AbsolutePosition.Y, 0, May)
	return Px/Max, Py/May
end

function library:Toggle()
    for _,v in pairs(game:GetService("CoreGui"):GetChildren()) do
        if v.Name == "Revenant" then
            v.Enabled = not v.Enabled
        end
    end
end

if not game:GetService("CoreGui"):FindFirstChild("NotificationLibrary") then
local notificationLibrary = Instance.new("ScreenGui")
notificationLibrary.Name = "NotificationLibrary"
notificationLibrary.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
notificationLibrary.Parent = game:GetService("CoreGui")

local notificationHolder = Instance.new("Frame")
notificationHolder.Name = "NotificationHolder"
notificationHolder.AnchorPoint = Vector2.new(0, 0.5)
notificationHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
notificationHolder.BackgroundTransparency = 1
notificationHolder.Position = UDim2.fromScale(0, 0.5)
notificationHolder.Size = UDim2.fromScale(0.8, 1)
notificationHolder.Parent = notificationLibrary

local notificationUIListLayout = Instance.new("UIListLayout")
notificationUIListLayout.Name = "NotificationUIListLayout"
notificationUIListLayout.FillDirection = Enum.FillDirection.Vertical
notificationUIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
notificationUIListLayout.Padding = UDim.new(0, 4)
notificationUIListLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom
notificationUIListLayout.Parent = notificationHolder

local notificationUIPadding = Instance.new("UIPadding")
notificationUIPadding.Name = "NotificationUIPadding"
notificationUIPadding.PaddingBottom = UDim.new(0, 9)
notificationUIPadding.PaddingLeft = UDim.new(0, 5)
notificationUIPadding.Parent = notificationHolder
end

local NotificationLib = game:GetService("CoreGui"):FindFirstChild("NotificationLibrary")
local Holder = NotificationLib:FindFirstChild("NotificationHolder")

function library:Notification(NotificationInfo)
NotificationInfo.Text = NotificationInfo.Text or "This is a notification."
NotificationInfo.Duration = NotificationInfo.Duration or 5
NotificationInfo.Color = NotificationInfo.Color or library.DefaultColor

local notificationText = Instance.new("TextLabel")
notificationText.Name = "NotificationText"
notificationText.ClipsDescendants = true
notificationText.Font = Enum.Font.FredokaOne
notificationText.Text = NotificationInfo.Text
notificationText.TextColor3 = Color3.fromRGB(214, 214, 214)
notificationText.TextSize = 14
notificationText.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
notificationText.BorderSizePixel = 0
notificationText.Position = UDim2.fromScale(0, 0.954)
notificationText.Size = UDim2.fromOffset(0, 38)
notificationText.Parent = Holder

local outerFrame = Instance.new("Frame")
outerFrame.Name = "OuterFrame"
outerFrame.AnchorPoint = Vector2.new(0, 1)
outerFrame.BackgroundColor3 = NotificationInfo.Color
outerFrame.BorderSizePixel = 0
outerFrame.Position = UDim2.fromScale(0, 1)
outerFrame.Size = UDim2.new(1, 0, 0, 3)
outerFrame.ZIndex = 2
outerFrame.Parent = notificationText

local notificationUICorner = Instance.new("UICorner")
notificationUICorner.Name = "NotificationUICorner"
notificationUICorner.CornerRadius = UDim.new(0, 4)
notificationUICorner.Parent = notificationText

local innerFrame = Instance.new("Frame")
innerFrame.Name = "InnerFrame"
innerFrame.AnchorPoint = Vector2.new(0, 1)
innerFrame.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
innerFrame.BorderSizePixel = 0
innerFrame.Position = UDim2.fromScale(0, 1)
innerFrame.Size = UDim2.new(1, 0, 0, 3)
innerFrame.Parent = notificationText

local NotifText = notificationText
local TextBounds = NotifText.TextBounds

coroutine.wrap(function()
local InTween = TweenService:Create(NotifText, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Size = UDim2.new(0, TextBounds.X + 20, 0, 38)})
InTween:Play()
InTween.Completed:Wait()

local LineTween = TweenService:Create(outerFrame, TweenInfo.new(NotificationInfo.Duration, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Size = UDim2.new(0, 0, 0, 3)})
LineTween:Play()
LineTween.Completed:Wait()

local OutTween = TweenService:Create(NotifText, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 0, 0, 38)})
OutTween:Play()
OutTween.Completed:Wait()
notificationText:Destroy()
end)()
end

local Request = syn and syn.request or http and http.request or http_request or request or httprequest
local getcustomasset = getcustomasset or getsynasset

if not isfolder("Revenant") then
    makefolder("Revenant")
    local Circle = Request({
	Url = "https://github.com/Rain-Design/Libraries/blob/main/Icon/Circle.png?raw=true",
	Method = "GET"
	})
	writefile("Revenant/Circle.png", Circle.Body)
	library:Notification({
        Text = "Downloaded Toggle Asset.",
        Duration = 3
    })
end

function library:Window(Info)
Info.Text = Info.Text or "Revenant"

local Pos = 0.05

for _,v in pairs(game:GetService("CoreGui"):GetChildren()) do
    if v.Name == "Revenant" then
        Pos = Pos + 0.12
    end
end

local insidewindow = {}

local revenant = Instance.new("ScreenGui")
revenant.Name = "Revenant"
revenant.Parent = game:GetService("CoreGui")

local WindowOpened = Instance.new("BoolValue", revenant)
WindowOpened.Value = true

local topbar = Instance.new("Frame")
topbar.Name = "Topbar"
topbar.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
topbar.Position = UDim2.fromScale(Pos, 0.1)
topbar.Size = UDim2.fromOffset(225, 38)
topbar.Parent = revenant

local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    topbar.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

topbar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = topbar.Position
        		
        input.Changed:Connect(function()
        	if input.UserInputState == Enum.UserInputState.End then
        		dragging = false
        	end
        end)
    end
end)

topbar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

local uICorner = Instance.new("UICorner")
uICorner.Name = "UICorner"
uICorner.CornerRadius = UDim.new(0, 4)
uICorner.Parent = topbar

local BackgroundSize = 0

local backgroundFrame = Instance.new("Frame")
backgroundFrame.Name = "BackgroundFrame"
backgroundFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
backgroundFrame.BorderSizePixel = 0
backgroundFrame.ClipsDescendants = false
backgroundFrame.Position = UDim2.fromScale(0, 1)
backgroundFrame.Size = UDim2.fromOffset(225, 0)
backgroundFrame.Parent = topbar

local uICorner1 = Instance.new("UICorner")
uICorner1.Name = "UICorner"
uICorner1.CornerRadius = UDim.new(0, 4)
uICorner1.Parent = backgroundFrame

local fixLine = Instance.new("Frame")
fixLine.Name = "FixLine"
fixLine.AnchorPoint = Vector2.new(0.5, 0)
fixLine.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
fixLine.BorderSizePixel = 0
fixLine.Position = UDim2.fromScale(0.5, 0)
fixLine.Size = UDim2.fromOffset(225, 2)
fixLine.Parent = backgroundFrame
fixLine.ZIndex = 2

local itemContainer = Instance.new("Frame")
itemContainer.Name = "ItemContainer"
itemContainer.AnchorPoint = Vector2.new(0.5, 0)
itemContainer.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
itemContainer.BackgroundTransparency = 1
itemContainer.BorderSizePixel = 0
itemContainer.Position = UDim2.fromScale(0.5, 0)
itemContainer.Size = UDim2.fromOffset(225, 0) -- 38
itemContainer.Parent = backgroundFrame

itemContainer.ChildAdded:Connect(function(v)
    if v.ClassName ~= "UIListLayout" then
    backgroundFrame.Size = UDim2.new(0,225,0,itemContainer.Size.Y.Offset + 38)
    itemContainer.Size = UDim2.new(0,225,0,itemContainer.Size.Y.Offset + 38)
    BackgroundSize = BackgroundSize + 38
    end
end)

itemContainer.ChildRemoved:Connect(function(v)
    if v.ClassName ~= "UIListLayout" then
    backgroundFrame.Size = UDim2.new(0,225,0,itemContainer.Size.Y.Offset - 38)
    itemContainer.Size = UDim2.new(0,225,0,itemContainer.Size.Y.Offset - 38)
    BackgroundSize = BackgroundSize - 38
    end
end)

local uIListLayout = Instance.new("UIListLayout")
uIListLayout.Name = "UIListLayout"
uIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
uIListLayout.Parent = itemContainer

function insidewindow:Button(Info)
Info.Text = Info.Text or "Button"
Info.Callback = Info.Callback or function() end

local button = Instance.new("Frame")
button.Name = "Button"
button.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
button.Size = UDim2.fromOffset(225, 38)
button.Parent = itemContainer

local uICorner2 = Instance.new("UICorner")
uICorner2.Name = "UICorner"
uICorner2.CornerRadius = UDim.new(0, 4)
uICorner2.Parent = button

local fixLine1 = Instance.new("Frame")
fixLine1.Name = "FixLine"
fixLine1.AnchorPoint = Vector2.new(0.5, 1)
fixLine1.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
fixLine1.BorderSizePixel = 0
fixLine1.Position = UDim2.fromScale(0.5, 0.0526)
fixLine1.Size = UDim2.fromOffset(225, 4)
fixLine1.Parent = button

local buttonTextButton = Instance.new("TextButton")
buttonTextButton.Name = "ButtonTextButton"
buttonTextButton.Font = Enum.Font.FredokaOne
buttonTextButton.Text = ""
buttonTextButton.TextColor3 = Color3.fromRGB(214, 214, 214)
buttonTextButton.TextSize = 13
buttonTextButton.AutoButtonColor = false
buttonTextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
buttonTextButton.BackgroundTransparency = 1
buttonTextButton.Size = UDim2.fromOffset(225, 38)
buttonTextButton.Parent = button

local buttonTextLabel = Instance.new("TextLabel")
buttonTextLabel.Name = "ButtonTextLabel"
buttonTextLabel.Font = Enum.Font.FredokaOne
buttonTextLabel.Text = Info.Text
buttonTextLabel.TextColor3 = Color3.fromRGB(214, 214, 214)
buttonTextLabel.TextSize = 13
buttonTextLabel.TextXAlignment = Enum.TextXAlignment.Left
buttonTextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
buttonTextLabel.BackgroundTransparency = 1
buttonTextLabel.Position = UDim2.fromScale(0.0489, 0)
buttonTextLabel.Size = UDim2.fromOffset(214, 38)
buttonTextLabel.Parent = button

button.MouseEnter:Connect(function()
    fixLine1.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
    button.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
end)

button.MouseLeave:Connect(function()
    fixLine1.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
    button.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
end)

buttonTextButton.MouseButton1Click:Connect(function()
    pcall(Info.Callback)
end)
end

function insidewindow:Prompt(Info)
Info.Text = Info.Text or "Prompt"
Info.OnConfirm = Info.OnConfirm or function() end
Info.OnCancel = Info.OnCancel or function() end
    
local prompt = Instance.new("Frame")
prompt.Name = "Prompt"
prompt.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
prompt.Size = UDim2.fromOffset(225, 38)
prompt.Parent = itemContainer

local promptUICorner = Instance.new("UICorner")
promptUICorner.Name = "PromptUICorner"
promptUICorner.CornerRadius = UDim.new(0, 4)
promptUICorner.Parent = prompt

local promptFixLine = Instance.new("Frame")
promptFixLine.Name = "PromptFixLine"
promptFixLine.AnchorPoint = Vector2.new(0.5, 1)
promptFixLine.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
promptFixLine.BorderSizePixel = 0
promptFixLine.Position = UDim2.fromScale(0.5, 0.0526)
promptFixLine.Size = UDim2.fromOffset(225, 4)
promptFixLine.Parent = prompt

local promptTextLabel = Instance.new("TextLabel")
promptTextLabel.Name = "PromptTextLabel"
promptTextLabel.Font = Enum.Font.FredokaOne
promptTextLabel.Text = Info.Text
promptTextLabel.TextColor3 = Color3.fromRGB(214, 214, 214)
promptTextLabel.TextSize = 13
promptTextLabel.TextXAlignment = Enum.TextXAlignment.Left
promptTextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
promptTextLabel.BackgroundTransparency = 1
promptTextLabel.Position = UDim2.fromScale(0.0489, 0)
promptTextLabel.Size = UDim2.fromOffset(214, 38)
promptTextLabel.Parent = prompt

local cancelPromptButton = Instance.new("ImageButton")
cancelPromptButton.Name = "CancelPromptButton"
cancelPromptButton.Image = "http://www.roblox.com/asset/?id=6031094678"
cancelPromptButton.ImageColor3 = Color3.fromRGB(214, 214, 214)
cancelPromptButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
cancelPromptButton.BackgroundTransparency = 1
cancelPromptButton.Position = UDim2.fromScale(0.862, 0.263)
cancelPromptButton.Size = UDim2.fromOffset(17, 17)
cancelPromptButton.Parent = prompt

local confirmPromptButton = Instance.new("ImageButton")
confirmPromptButton.Name = "ConfirmPromptButton"
confirmPromptButton.Image = "rbxassetid://7733715400"
confirmPromptButton.ImageColor3 = Color3.fromRGB(214, 214, 214)
confirmPromptButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
confirmPromptButton.BackgroundTransparency = 1
confirmPromptButton.Position = UDim2.fromScale(0.75, 0.263)
confirmPromptButton.Size = UDim2.fromOffset(17, 17)
confirmPromptButton.Parent = prompt

prompt.MouseEnter:Connect(function()
    promptFixLine.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
    prompt.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
end)

prompt.MouseLeave:Connect(function()
    promptFixLine.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
    prompt.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
end)

cancelPromptButton.MouseButton1Click:Connect(function()
    pcall(Info.OnCancel)
    prompt:Destroy()
end)

confirmPromptButton.MouseButton1Click:Connect(function()
    pcall(Info.OnConfirm)
    prompt:Destroy()
end)
end

function insidewindow:Label(Info)
Info.Text = Info.Text or "Label"
Info.Color = Info.Color or Color3.fromRGB(214, 214, 214)

local insidelabel = {}

local label = Instance.new("Frame")
label.Name = "Label"
label.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
label.Size = UDim2.fromOffset(225, 38)
label.Parent = itemContainer

local labelUICorner = Instance.new("UICorner")
labelUICorner.Name = "LabelUICorner"
labelUICorner.CornerRadius = UDim.new(0, 4)
labelUICorner.Parent = label

local labelFixLine = Instance.new("Frame")
labelFixLine.Name = "LabelFixLine"
labelFixLine.AnchorPoint = Vector2.new(0.5, 1)
labelFixLine.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
labelFixLine.BorderSizePixel = 0
labelFixLine.Position = UDim2.fromScale(0.5, 0.0526)
labelFixLine.Size = UDim2.fromOffset(225, 4)
labelFixLine.Parent = label

local labelTextLabel = Instance.new("TextLabel")
labelTextLabel.Name = "LabelTextLabel"
labelTextLabel.Text = Info.Text
labelTextLabel.Font = Enum.Font.FredokaOne
labelTextLabel.TextColor3 = Info.Color
labelTextLabel.TextSize = 13
labelTextLabel.TextXAlignment = Enum.TextXAlignment.Left
labelTextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
labelTextLabel.BackgroundTransparency = 1
labelTextLabel.Position = UDim2.fromScale(0.0489, 0)
labelTextLabel.Size = UDim2.fromOffset(214, 38)
labelTextLabel.Parent = label

label.MouseEnter:Connect(function()
    labelFixLine.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
    label.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
end)

label.MouseLeave:Connect(function()
    labelFixLine.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
    label.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
end)

function insidelabel:Set(InsideInfo)
    InsideInfo.Text = InsideInfo.Text or labelTextLabel.Text
    InsideInfo.Color = InsideInfo.Color or labelTextLabel.TextColor3
    
    labelTextLabel.Text = InsideInfo.Text
    labelTextLabel.TextColor3 = InsideInfo.Color
end

return insidelabel
end

function insidewindow:Toggle(Info)
Info.Text = Info.Text or "Toggle"
Info.Flag = Info.Flag or Info.Text
Info.Default = Info.Default or false
Info.Callback = Info.Callback or function() end

local insidetoggle = {}

library.Flags[Info.Flag] = Info.Default

local Toggled = false
    
local toggle = Instance.new("Frame")
toggle.Name = "Toggle"
toggle.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
toggle.Size = UDim2.fromOffset(225, 38)
toggle.Parent = itemContainer

local uICorner = Instance.new("UICorner")
uICorner.Name = "UICorner"
uICorner.CornerRadius = UDim.new(0, 4)
uICorner.Parent = toggle

local fixLineToggle = Instance.new("Frame")
fixLineToggle.Name = "FixLine"
fixLineToggle.AnchorPoint = Vector2.new(0.5, 1)
fixLineToggle.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
fixLineToggle.BorderSizePixel = 0
fixLineToggle.Position = UDim2.fromScale(0.5, 0.0526)
fixLineToggle.Size = UDim2.fromOffset(225, 4)
fixLineToggle.Parent = toggle

local toggleTextButton = Instance.new("TextButton")
toggleTextButton.Name = "ToggleTextButton"
toggleTextButton.Font = Enum.Font.FredokaOne
toggleTextButton.Text = ""
toggleTextButton.TextColor3 = Color3.fromRGB(214, 214, 214)
toggleTextButton.TextSize = 13
toggleTextButton.AutoButtonColor = false
toggleTextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
toggleTextButton.BackgroundTransparency = 1
toggleTextButton.Size = UDim2.fromOffset(225, 38)
toggleTextButton.Parent = toggle

local toggleTextLabel = Instance.new("TextLabel")
toggleTextLabel.Name = "ToggleTextLabel"
toggleTextLabel.Font = Enum.Font.FredokaOne
toggleTextLabel.Text = Info.Text
toggleTextLabel.TextColor3 = Color3.fromRGB(214, 214, 214)
toggleTextLabel.TextSize = 13
toggleTextLabel.TextXAlignment = Enum.TextXAlignment.Left
toggleTextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
toggleTextLabel.BackgroundTransparency = 1
toggleTextLabel.Position = UDim2.fromScale(0.0489, 0)
toggleTextLabel.Size = UDim2.fromOffset(214, 38)
toggleTextLabel.Parent = toggle

local outerFrame = Instance.new("Frame")
outerFrame.Name = "OuterFrame"
outerFrame.BackgroundColor3 = Color3.fromRGB(62, 62, 62)
outerFrame.BorderSizePixel = 0
outerFrame.Position = UDim2.fromScale(0.782, 0.263)
outerFrame.Size = UDim2.fromOffset(38, 17)
outerFrame.Parent = toggle

local uICorner1 = Instance.new("UICorner")
uICorner1.Name = "UICorner"
uICorner1.CornerRadius = UDim.new(1, 0)
uICorner1.Parent = outerFrame

local innerFrame = Instance.new("ImageLabel")
innerFrame.Name = "InnerFrame"
innerFrame.Image = getcustomasset("Revenant/Circle.png")
innerFrame.ResampleMode = "Pixelated"
innerFrame.ImageColor3 = Color3.fromRGB(255, 255, 255)
innerFrame.BackgroundTransparency = 1
innerFrame.Position = UDim2.fromOffset(3, 2)
innerFrame.Size = UDim2.fromOffset(13, 13)
innerFrame.Parent = outerFrame

pcall(Info.Callback, Info.Default)
innerFrame.Position = Info.Default and UDim2.new(0, 22,0, 2) or UDim2.new(0, 3,0, 2)
outerFrame.BackgroundColor3 = Info.Default and library.DefaultColor or Color3.fromRGB(62, 62, 62)

toggle.MouseEnter:Connect(function()
    fixLineToggle.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
    toggle.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
end)

toggle.MouseLeave:Connect(function()
    fixLineToggle.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
    toggle.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
end)

function insidetoggle:Set(ToggleInfo)
ToggleInfo.Bool = ToggleInfo.Bool or false
Toggled = ToggleInfo.Bool
library.Flags[Info.Flag] = ToggleInfo.Bool

pcall(Info.Callback, ToggleInfo.Bool)
    TweenService:Create(innerFrame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut),{Position = ToggleInfo.Bool and UDim2.new(0, 22,0, 2) or UDim2.new(0, 3,0, 2)}):Play()
    TweenService:Create(outerFrame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut),{BackgroundColor3 = ToggleInfo.Bool and library.DefaultColor or Color3.fromRGB(62, 62, 62)}):Play()
end

toggleTextButton.MouseButton1Click:Connect(function()
    Toggled = not Toggled
    library.Flags[Info.Flag] = Toggled
    pcall(Info.Callback, Toggled)
    TweenService:Create(innerFrame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut),{Position = Toggled and UDim2.new(0, 22,0, 2) or UDim2.new(0, 3,0, 2)}):Play()
    TweenService:Create(outerFrame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut),{BackgroundColor3 = Toggled and library.DefaultColor or Color3.fromRGB(62, 62, 62)}):Play()
end)

return insidetoggle
end

function insidewindow:Dropdown(Info)
Info.Text = Info.Text or "Dropdown"
Info.List = Info.List or {}
Info.Callback = Info.Callback or function() end

local insidedropdown = {}

local DropdownSize = 0
    
local dropdown = Instance.new("Frame")
dropdown.Name = "Dropdown"
dropdown.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
dropdown.Size = UDim2.fromOffset(225, 38)
dropdown.Parent = itemContainer

local dropdownUICorner = Instance.new("UICorner")
dropdownUICorner.Name = "DropdownUICorner"
dropdownUICorner.CornerRadius = UDim.new(0, 4)
dropdownUICorner.Parent = dropdown

local dropdownFixLine = Instance.new("Frame")
dropdownFixLine.Name = "DropdownFixLine"
dropdownFixLine.AnchorPoint = Vector2.new(0.5, 1)
dropdownFixLine.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
dropdownFixLine.BorderSizePixel = 0
dropdownFixLine.Position = UDim2.fromScale(0.5, 0.04)
dropdownFixLine.ZIndex = 2
dropdownFixLine.Size = UDim2.fromOffset(225, 4)
dropdownFixLine.Parent = dropdown

local dropdownButton = Instance.new("TextButton")
dropdownButton.Name = "DropdownButton"
dropdownButton.Font = Enum.Font.FredokaOne
dropdownButton.Text = ""
dropdownButton.TextColor3 = Color3.fromRGB(214, 214, 214)
dropdownButton.TextSize = 13
dropdownButton.AutoButtonColor = false
dropdownButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
dropdownButton.BackgroundTransparency = 1
dropdownButton.Size = UDim2.fromOffset(225, 38)
dropdownButton.Parent = dropdown

local dropdownText = Instance.new("TextLabel")
dropdownText.Name = "DropdownText"
dropdownText.Font = Enum.Font.FredokaOne
dropdownText.Text = Info.Text
dropdownText.TextColor3 = Color3.fromRGB(214, 214, 214)
dropdownText.TextSize = 13
dropdownText.TextXAlignment = Enum.TextXAlignment.Left
dropdownText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
dropdownText.BackgroundTransparency = 1
dropdownText.Position = UDim2.fromScale(0.0489, 0)
dropdownText.Size = UDim2.fromOffset(214, 38)
dropdownText.Parent = dropdown

local dropdownContainerButton = Instance.new("ImageLabel")
dropdownContainerButton.Name = "DropdownContainerButton"
dropdownContainerButton.Image = "rbxassetid://7733717447"
dropdownContainerButton.ImageColor3 = Color3.fromRGB(129, 129, 129)
dropdownContainerButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
dropdownContainerButton.BackgroundTransparency = 1
dropdownContainerButton.Position = UDim2.fromScale(0.867, 0.263)
dropdownContainerButton.Size = UDim2.fromOffset(17, 17)
dropdownContainerButton.Parent = dropdown

local dropdownContainerBackground = Instance.new("Frame")
dropdownContainerBackground.Visible = true
dropdownContainerBackground.Name = "DropdownContainerBackground"
dropdownContainerBackground.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
dropdownContainerBackground.BorderSizePixel = 0
dropdownContainerBackground.Position = UDim2.fromScale(0, 1)
dropdownContainerBackground.Size = UDim2.fromOffset(225, 0)
dropdownContainerBackground.ClipsDescendants = true
dropdownContainerBackground.ZIndex = -1
dropdownContainerBackground.Parent = dropdown

local dropdownFixLine1 = Instance.new("Frame")
dropdownFixLine1.Name = "DropdownFixLine"
dropdownFixLine1.AnchorPoint = Vector2.new(0.5, 0)
dropdownFixLine1.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
dropdownFixLine1.BorderSizePixel = 0
dropdownFixLine1.Position = UDim2.new(0.5, 0, 0, -2)
dropdownFixLine1.Size = UDim2.fromOffset(225, 4)
dropdownFixLine1.ZIndex = 2
dropdownFixLine1.Visible = false
dropdownFixLine1.Parent = dropdownContainerBackground

local dropdownUICorner1 = Instance.new("UICorner")
dropdownUICorner1.Name = "DropdownUICorner"
dropdownUICorner1.CornerRadius = UDim.new(0, 4)
dropdownUICorner1.Parent = dropdownContainerBackground

local dropdownContainer = Instance.new("Frame")
dropdownContainer.Visible = true
dropdownContainer.Name = "DropdownContainer"
dropdownContainer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
dropdownContainer.BackgroundTransparency = 1
dropdownContainer.ClipsDescendants = true
dropdownContainer.Position = UDim2.fromScale(0, 0)
dropdownContainer.Size = UDim2.fromOffset(225, 0)
dropdownContainer.ZIndex = 2
dropdownContainer.Parent = dropdownContainerBackground

local dropdownUIListLayout = Instance.new("UIListLayout")
dropdownUIListLayout.Name = "DropdownUIListLayout"
dropdownUIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
dropdownUIListLayout.Parent = dropdownContainer

dropdown.MouseEnter:Connect(function()
    dropdownFixLine.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
    dropdown.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
end)

dropdown.MouseLeave:Connect(function()
    dropdownFixLine.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
    dropdown.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
end)

local Opened = false
dropdownButton.MouseButton1Click:Connect(function()
    Opened = not Opened
    
    TweenService:Create(dropdownContainerButton, TweenInfo.new(.1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Rotation = Opened and 180 or 0}):Play()
    
    backgroundFrame.ClipsDescendants = false
    TweenService:Create(dropdownContainerBackground, TweenInfo.new(.15, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {Size = Opened and UDim2.new(0, 225,0,DropdownSize) or UDim2.new(0, 225, 0, 0)}):Play()
    TweenService:Create(dropdownContainer, TweenInfo.new(.15, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {Size = Opened and UDim2.new(0, 225,0,DropdownSize) or UDim2.new(0, 225, 0, 0)}):Play()
    dropdownFixLine1.Visible = Opened
end)

function insidedropdown:Button(Info2)
Info2.Text = Info2.Text or "Option"

local buttonDropdown = Instance.new("Frame")
buttonDropdown.Name = "ButtonDropdown"
buttonDropdown.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
buttonDropdown.Size = UDim2.fromOffset(225, 27)
buttonDropdown.ZIndex = 3
buttonDropdown.Parent = dropdownContainer

local dropdownButtonTextButton = Instance.new("TextButton")
dropdownButtonTextButton.Name = "DropdownButtonTextButton"
dropdownButtonTextButton.Font = Enum.Font.SourceSans
dropdownButtonTextButton.Text = ""
dropdownButtonTextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
dropdownButtonTextButton.TextSize = 14
dropdownButtonTextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
dropdownButtonTextButton.BackgroundTransparency = 1
dropdownButtonTextButton.Size = UDim2.fromOffset(225, 27)
dropdownButtonTextButton.ZIndex = 2
dropdownButtonTextButton.Parent = buttonDropdown

local dropdown2Text = Instance.new("TextLabel")
dropdown2Text.Name = "DropdownText"
dropdown2Text.Font = Enum.Font.FredokaOne
dropdown2Text.Text = Info2.Text
dropdown2Text.TextColor3 = Color3.fromRGB(214, 214, 214)
dropdown2Text.TextSize = 12
dropdown2Text.TextXAlignment = Enum.TextXAlignment.Left
dropdown2Text.Active = true
dropdown2Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
dropdown2Text.BackgroundTransparency = 1
dropdown2Text.Position = UDim2.fromScale(0.0489, 0)
dropdown2Text.Size = UDim2.fromOffset(214, 27)
dropdown2Text.ZIndex = 3
dropdown2Text.Parent = buttonDropdown

local dropdownButtonUICorner = Instance.new("UICorner")
dropdownButtonUICorner.Name = "DropdownButtonUICorner"
dropdownButtonUICorner.CornerRadius = UDim.new(0, 4)
dropdownButtonUICorner.Parent = buttonDropdown

buttonDropdown.MouseEnter:Connect(function()
    buttonDropdown.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
end)

buttonDropdown.MouseLeave:Connect(function()
    buttonDropdown.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
end)

WindowOpened:GetPropertyChangedSignal("Value"):Connect(function()
    if not WindowOpened.Value and dropdownContainerBackground.Visible then
    Opened = false
    
    dropdownContainerButton.Rotation = 0
    
    dropdownContainerBackground.Size = UDim2.new(0,225,0,0)
    dropdownContainer.Size = UDim2.new(0,225,0,0)
    backgroundFrame.ClipsDescendants = false
    dropdownFixLine1.Visible = false
    end
end)

dropdownButtonTextButton.MouseButton1Click:Connect(function()
    pcall(Info.Callback, Info2.Text)
    dropdownText.Text = Info2.Text
    
    Opened = false
    
    TweenService:Create(dropdownContainerButton, TweenInfo.new(.15, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {Rotation = 0}):Play()
    TweenService:Create(dropdownContainerBackground, TweenInfo.new(.15, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {Size = UDim2.new(0, 225, 0, 0)}):Play()
    TweenService:Create(dropdownContainer, TweenInfo.new(.15, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {Size = UDim2.new(0, 225, 0, 0)}):Play()
    dropdownFixLine1.Visible = false
end)
end

dropdownContainer.ChildAdded:Connect(function(v)
    if v.ClassName ~= "UIListLayout" then
        DropdownSize = DropdownSize + 27
    end
end)

for _,item in pairs(Info.List) do
    insidedropdown:Button({
        Text = item
    })
end

return insidedropdown
end

function insidewindow:Keybind(Info)
Info.Text = Info.Text or "Keybind"
Info.Default = Info.Default or Enum.KeyCode.LeftAlt
Info.Callback = Info.Callback or function() end

local PressKey = Info.Default
    
local keybind = Instance.new("Frame")
keybind.Name = "Keybind"
keybind.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
keybind.Size = UDim2.fromOffset(225, 38)
keybind.Parent = itemContainer

local keybindUICorner = Instance.new("UICorner")
keybindUICorner.Name = "KeybindUICorner"
keybindUICorner.CornerRadius = UDim.new(0, 4)
keybindUICorner.Parent = keybind

local keybindFixLine = Instance.new("Frame")
keybindFixLine.Name = "KeybindFixLine"
keybindFixLine.AnchorPoint = Vector2.new(0.5, 1)
keybindFixLine.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
keybindFixLine.BorderSizePixel = 0
keybindFixLine.Position = UDim2.fromScale(0.5, 0.0526)
keybindFixLine.Size = UDim2.fromOffset(225, 4)
keybindFixLine.Parent = keybind

local keybindButton = Instance.new("TextButton")
keybindButton.Name = "KeybindButton"
keybindButton.Font = Enum.Font.FredokaOne
keybindButton.Text = ""
keybindButton.TextColor3 = Color3.fromRGB(214, 214, 214)
keybindButton.TextSize = 13
keybindButton.AutoButtonColor = false
keybindButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
keybindButton.BackgroundTransparency = 1
keybindButton.Size = UDim2.fromOffset(225, 38)
keybindButton.Parent = keybind

local keybindTextLabel = Instance.new("TextLabel")
keybindTextLabel.Name = "KeybindTextLabel"
keybindTextLabel.Font = Enum.Font.FredokaOne
keybindTextLabel.Text = Info.Text
keybindTextLabel.TextColor3 = Color3.fromRGB(214, 214, 214)
keybindTextLabel.TextSize = 13
keybindTextLabel.TextXAlignment = Enum.TextXAlignment.Left
keybindTextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
keybindTextLabel.BackgroundTransparency = 1
keybindTextLabel.Position = UDim2.fromScale(0.0489, 0)
keybindTextLabel.Size = UDim2.fromOffset(214, 38)
keybindTextLabel.Parent = keybind

local keybindFixHolder = Instance.new("Frame")
keybindFixHolder.Name = "KeybindFixHolder"
keybindFixHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
keybindFixHolder.BackgroundTransparency = 1
keybindFixHolder.Position = UDim2.fromScale(0, 0.263)
keybindFixHolder.Size = UDim2.fromOffset(214, 17)
keybindFixHolder.Parent = keybind

local keybindHolder = Instance.new("Frame")
keybindHolder.Name = "KeybindHolder"
keybindHolder.AnchorPoint = Vector2.new(1, 0.5)
keybindHolder.BackgroundColor3 = Color3.fromRGB(62, 62, 62)
keybindHolder.BorderSizePixel = 0
keybindHolder.Position = UDim2.fromScale(1, 0.5)
keybindHolder.Size = UDim2.fromOffset(38, 17)
keybindHolder.Parent = keybindFixHolder

local keybindHolderUICorner = Instance.new("UICorner")
keybindHolderUICorner.Name = "KeybindHolderUICorner"
keybindHolderUICorner.CornerRadius = UDim.new(0, 4)
keybindHolderUICorner.Parent = keybindHolder

local keybindText = Instance.new("TextLabel")
keybindText.Name = "KeybindText"
keybindText.Font = Enum.Font.FredokaOne
keybindText.Text = PressKey.Name
keybindText.TextColor3 = Color3.fromRGB(214, 214, 214)
keybindText.TextSize = 12
keybindText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
keybindText.BackgroundTransparency = 1
keybindText.Size = UDim2.fromOffset(38, 17)
keybindText.Parent = keybindHolder

keybind.MouseEnter:Connect(function()
    keybindFixLine.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
    keybind.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
end)

keybind.MouseLeave:Connect(function()
    keybindFixLine.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
    keybind.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
end)

local TextBounds = keybindText.TextBounds

keybindHolder.Size = UDim2.new(0, TextBounds.X + 15, 0, 17)
keybindText.Size = UDim2.new(0, TextBounds.X + 15, 0, 17)

keybindText:GetPropertyChangedSignal("Text"):Connect(function()
    TextBounds = keybindText.TextBounds
    
    keybindHolder.Size = UDim2.new(0, TextBounds.X + 15, 0, 17)
    keybindText.Size = UDim2.new(0, TextBounds.X + 15, 0, 17)
end)

local KeybindConnection
local Changing = false

keybindButton.MouseButton1Click:Connect(function()
    if KeybindConnection then KeybindConnection:Disconnect() end
    Changing = true
    keybindText.Text = "..."
    KeybindConnection = UserInputService.InputBegan:Connect(function(Key, gameProcessed)
        if not table.find(Blacklist, Key.KeyCode) and not gameProcessed then
            KeybindConnection:Disconnect()
            keybindText.Text = Key.KeyCode.Name
            PressKey = Key.KeyCode
            wait(.1)
            Changing = false
        end
    end)
end)

UserInputService.InputBegan:Connect(function(Key, gameProcessed)
    if not Changing and Key.KeyCode == PressKey and not gameProcessed then
        pcall(Info.Callback)
    end
end)

end

function insidewindow:Slider(Info)
Info.Text = Info.Text or "Slider"
Info.Flag = Info.Flag or Info.Text
Info.Postfix = Info.Postfix or ""
Info.Minimum = Info.Minimum or 1
Info.Default = Info.Default or 5
Info.Maximum = Info.Maximum or 100
Info.Callback = Info.Callback or function() end
    
if Info.Minimum > Info.Maximum then
local ValueBefore = Info.Minimum
Info.Minimum, Info.Maximum = Info.Maximum, ValueBefore
end

Info.Default = math.clamp(Info.Default, Info.Minimum, Info.Maximum)
local DefaultScale = (Info.Default - Info.Minimum) / (Info.Maximum - Info.Minimum)

local insideslider = {}
    
local slider = Instance.new("Frame")
slider.Name = "Slider"
slider.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
slider.Size = UDim2.fromOffset(225, 38)
slider.Parent = itemContainer

local sliderUICorner = Instance.new("UICorner")
sliderUICorner.Name = "SliderUICorner"
sliderUICorner.CornerRadius = UDim.new(0, 4)
sliderUICorner.Parent = slider

local sliderFixLine = Instance.new("Frame")
sliderFixLine.Name = "SliderFixLine"
sliderFixLine.AnchorPoint = Vector2.new(0.5, 1)
sliderFixLine.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
sliderFixLine.BorderSizePixel = 0
sliderFixLine.Position = UDim2.fromScale(0.5, 0.0526)
sliderFixLine.Size = UDim2.fromOffset(225, 4)
sliderFixLine.Parent = slider

local sliderText = Instance.new("TextLabel")
sliderText.Name = "SliderText"
sliderText.Font = Enum.Font.FredokaOne
sliderText.Text = Info.Text
sliderText.TextColor3 = Color3.fromRGB(214, 214, 214)
sliderText.TextSize = 13
sliderText.TextXAlignment = Enum.TextXAlignment.Left
sliderText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sliderText.BackgroundTransparency = 1
sliderText.Position = UDim2.fromScale(0.0489, 0)
sliderText.Size = UDim2.fromOffset(214, 19)
sliderText.Parent = slider

local sliderFrames = Instance.new("Frame")
sliderFrames.Name = "SliderFrames"
sliderFrames.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sliderFrames.BackgroundTransparency = 1
sliderFrames.Position = UDim2.fromScale(0.0489, 0.5)
sliderFrames.Size = UDim2.fromOffset(199, 10)
sliderFrames.Parent = slider

local outerSlider = Instance.new("Frame")
outerSlider.Name = "OuterSlider"
outerSlider.BackgroundColor3 = Color3.fromRGB(62, 62, 62)
outerSlider.BorderSizePixel = 0
outerSlider.Position = UDim2.fromScale(-0.001, 0.458)
outerSlider.Size = UDim2.new(1, 0, 0, 4)
outerSlider.Parent = sliderFrames

local outerSliderUICorner = Instance.new("UICorner")
outerSliderUICorner.Name = "OuterSliderUICorner"
outerSliderUICorner.CornerRadius = UDim.new(0, 100)
outerSliderUICorner.Parent = outerSlider

local innerSlider = Instance.new("Frame")
innerSlider.Name = "InnerSlider"
innerSlider.BackgroundColor3 = library.DefaultColor
innerSlider.BorderSizePixel = 0
innerSlider.Position = UDim2.fromScale(-0.001, 0.458)
innerSlider.Size = UDim2.new(DefaultScale, 0, 0, 4)
innerSlider.ZIndex = 2
innerSlider.Parent = sliderFrames

local outerSliderUICorner1 = Instance.new("UICorner")
outerSliderUICorner1.Name = "OuterSliderUICorner"
outerSliderUICorner1.CornerRadius = UDim.new(0, 100)
outerSliderUICorner1.Parent = innerSlider

local dragSlider = Instance.new("Frame")
dragSlider.Name = "DragSlider"
dragSlider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
dragSlider.Position = UDim2.new(DefaultScale, -4, 0, 2)
dragSlider.Size = UDim2.fromOffset(9, 9)
dragSlider.ZIndex = 2
dragSlider.Parent = sliderFrames

local dragSliderUICorner = Instance.new("UICorner")
dragSliderUICorner.Name = "DragSliderUICorner"
dragSliderUICorner.CornerRadius = UDim.new(0, 100)
dragSliderUICorner.Parent = dragSlider

local dragSliderButton = Instance.new("TextButton")
dragSliderButton.Name = "DragSliderButton"
dragSliderButton.Font = Enum.Font.SourceSans
dragSliderButton.Text = ""
dragSliderButton.TextColor3 = Color3.fromRGB(0, 0, 0)
dragSliderButton.TextSize = 14
dragSliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
dragSliderButton.BackgroundTransparency = 1
dragSliderButton.Size = UDim2.fromOffset(9, 9)
dragSliderButton.Parent = dragSlider

local sliderValueText = Instance.new("TextLabel")
sliderValueText.Name = "SliderValueText"
sliderValueText.Font = Enum.Font.FredokaOne
sliderValueText.Text = tostring(Info.Default)..Info.Postfix
sliderValueText.TextColor3 = Color3.fromRGB(214, 214, 214)
sliderValueText.TextSize = 13
sliderValueText.TextXAlignment = Enum.TextXAlignment.Right
sliderValueText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sliderValueText.BackgroundTransparency = 1
sliderValueText.Position = UDim2.fromScale(0.0489, 0)
sliderValueText.Size = UDim2.fromOffset(198, 19)
sliderValueText.Parent = slider

pcall(Info.Callback, Info.Default)

slider.MouseEnter:Connect(function()
    sliderFixLine.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
    slider.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
end)

slider.MouseLeave:Connect(function()
    sliderFixLine.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
    slider.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
end)

local MinSize = 0
local MaxSize = 1

local SizeFromScale = (MinSize +  (MaxSize - MinSize)) * DefaultScale
SizeFromScale = SizeFromScale - (SizeFromScale % 2)

dragSliderButton.MouseButton1Down:Connect(function() -- Skidded from material ui hehe, sorry
	local MouseMove, MouseKill
	MouseMove = Mouse.Move:Connect(function()
		local Px = library:GetXY(outerSlider)
		local SizeFromScale = (MinSize +  (MaxSize - MinSize)) * Px
		local Value = math.floor(Info.Minimum + ((Info.Maximum - Info.Minimum) * Px))
		SizeFromScale = SizeFromScale - (SizeFromScale % 2)
		TweenService:Create(innerSlider, TweenInfo.new(0.1), {Size = UDim2.new(Px,0,0,4)}):Play()
		TweenService:Create(dragSlider, TweenInfo.new(0.1), {Position = UDim2.new(Px,-4,0,2)}):Play()
		sliderValueText.Text = tostring(Value)..Info.Postfix
		pcall(Info.Callback, Value)
	end)
	MouseKill = UserInputService.InputEnded:Connect(function(UserInput)
		if UserInput.UserInputType == Enum.UserInputType.MouseButton1 then
			MouseMove:Disconnect()
			MouseKill:Disconnect()
		end
	end)
end)
end

local fixLine2 = Instance.new("Frame")
fixLine2.Name = "FixLine"
fixLine2.AnchorPoint = Vector2.new(0.5, 1)
fixLine2.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
fixLine2.BorderSizePixel = 0
fixLine2.Position = UDim2.fromScale(0.5, 1)
fixLine2.Size = UDim2.fromOffset(225, 2)
fixLine2.ZIndex = 2
fixLine2.Parent = topbar

local windowText = Instance.new("TextLabel")
windowText.Name = "WindowText"
windowText.Font = Enum.Font.FredokaOne
windowText.Text = Info.Text
windowText.TextColor3 = Color3.fromRGB(214, 214, 214)
windowText.TextSize = 14
windowText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
windowText.BackgroundTransparency = 1
windowText.Size = UDim2.fromOffset(225, 38)
windowText.Parent = topbar

local close = Instance.new("ImageButton")
close.Name = "Close"
close.Image = "rbxassetid://7733717447"
close.Active = true
close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
close.BackgroundTransparency = 1
close.Position = UDim2.fromScale(0.876, 0.263)
close.Selectable = false
close.Size = UDim2.fromOffset(17, 17)
close.Parent = topbar

close.MouseButton1Click:Connect(function()
    WindowOpened.Value = not WindowOpened.Value
    
    backgroundFrame.ClipsDescendants = WindowOpened.Value and false or true
    TweenService:Create(backgroundFrame, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Size = WindowOpened.Value and UDim2.new(0, 225, 0, BackgroundSize) or UDim2.new(0, 225, 0, 0)}):Play()
    TweenService:Create(close, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Rotation = WindowOpened.Value and 0 or 180}):Play()
end)

return insidewindow
end
return library
task.spawn(function()
        while (OrionLib:IsRunning()) do
                wait()
        end

        for _, Connection in next, OrionLib.Connections do
                Connection:Disconnect()
        end
end)

local function MakeDraggable(DragPoint, Main)
        pcall(function()
                local Dragging, DragInput, MousePos, FramePos = false
                AddConnection(DragPoint.InputBegan, function(Input)
                        if Input.UserInputType == Enum.UserInputType.MouseButton1 or Input.UserInputType == Enum.UserInputType.Touch then
                                Dragging = true
                                MousePos = Input.Position
                                FramePos = Main.Position

                                Input.Changed:Connect(function()
                                        if Input.UserInputState == Enum.UserInputState.End then
                                                Dragging = false
                                        end
                                end)
                        end
                end)
                AddConnection(DragPoint.InputChanged, function(Input)
                        if Input.UserInputType == Enum.UserInputType.MouseMovement or Input.UserInputType == Enum.UserInputType.Touch then
                                DragInput = Input
                        end
                end)
                AddConnection(UserInputService.InputChanged, function(Input)
                        if Input == DragInput and Dragging then
                                local Delta = Input.Position - MousePos
                                TweenService:Create(Main, TweenInfo.new(0.05, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position  = UDim2.new(FramePos.X.Scale,FramePos.X.Offset + Delta.X, FramePos.Y.Scale, FramePos.Y.Offset + Delta.Y)}):Play()
                                Main.Position  = UDim2.new(FramePos.X.Scale,FramePos.X.Offset + Delta.X, FramePos.Y.Scale, FramePos.Y.Offset + Delta.Y)
                        end
                end)
        end)
end    

local function Create(Name, Properties, Children)
        local Object = Instance.new(Name)
        for i, v in next, Properties or {} do
                Object[i] = v
        end
        for i, v in next, Children or {} do
                v.Parent = Object
        end
        return Object
end

local function CreateElement(ElementName, ElementFunction)
        OrionLib.Elements[ElementName] = function(...)
                return ElementFunction(...)
        end
end

local function MakeElement(ElementName, ...)
        local NewElement = OrionLib.Elements[ElementName](...)
        return NewElement
end

local function SetProps(Element, Props)
        table.foreach(Props, function(Property, Value)
                Element[Property] = Value
        end)
        return Element
end

local function SetChildren(Element, Children)
        table.foreach(Children, function(_, Child)
                Child.Parent = Element
        end)
        return Element
end

local function Round(Number, Factor)
        local Result = math.floor(Number/Factor + (math.sign(Number) * 0.5)) * Factor
        if Result < 0 then Result = Result + Factor end
        return Result
end

local function ReturnProperty(Object)
        if Object:IsA("Frame") or Object:IsA("TextButton") then
                return "BackgroundColor3"
        end 
        if Object:IsA("ScrollingFrame") then
                return "ScrollBarImageColor3"
        end 
        if Object:IsA("UIStroke") then
                return "Color"
        end 
        if Object:IsA("TextLabel") or Object:IsA("TextBox") then
                return "TextColor3"
        end   
        if Object:IsA("ImageLabel") or Object:IsA("ImageButton") then
                return "ImageColor3"
        end   
end

local function AddThemeObject(Object, Type)
        if not OrionLib.ThemeObjects[Type] then
                OrionLib.ThemeObjects[Type] = {}
        end    
        table.insert(OrionLib.ThemeObjects[Type], Object)
        Object[ReturnProperty(Object)] = OrionLib.Themes[OrionLib.SelectedTheme][Type]
        return Object
end    

local function SetTheme()
        for Name, Type in pairs(OrionLib.ThemeObjects) do
                for _, Object in pairs(Type) do
                        Object[ReturnProperty(Object)] = OrionLib.Themes[OrionLib.SelectedTheme][Name]
                end    
        end    
end

local function PackColor(Color)
        return {R = Color.R * 255, G = Color.G * 255, B = Color.B * 255}
end    

local function UnpackColor(Color)
        return Color3.fromRGB(Color.R, Color.G, Color.B)
end

local function LoadCfg(Config)
        local Data = HttpService:JSONDecode(Config)
        table.foreach(Data, function(a,b)
                if OrionLib.Flags[a] then
                        spawn(function() 
                                if OrionLib.Flags[a].Type == "Colorpicker" then
                                        OrionLib.Flags[a]:Set(UnpackColor(b))
                                else
                                        OrionLib.Flags[a]:Set(b)
                                end    
                        end)
                else
                        warn("Orion Library Config Loader - Could not find ", a ,b)
                end
        end)
end

local function SaveCfg(Name)
        local Data = {}
        for i,v in pairs(OrionLib.Flags) do
                if v.Save then
                        if v.Type == "Colorpicker" then
                                Data[i] = PackColor(v.Value)
                        else
                                Data[i] = v.Value
                        end
                end        
        end
end

local WhitelistedMouse = {Enum.UserInputType.MouseButton1, Enum.UserInputType.MouseButton2,Enum.UserInputType.MouseButton3,Enum.UserInputType.Touch}
local BlacklistedKeys = {Enum.KeyCode.Unknown,Enum.KeyCode.W,Enum.KeyCode.A,Enum.KeyCode.S,Enum.KeyCode.D,Enum.KeyCode.Up,Enum.KeyCode.Left,Enum.KeyCode.Down,Enum.KeyCode.Right,Enum.KeyCode.Slash,Enum.KeyCode.Tab,Enum.KeyCode.Backspace,Enum.KeyCode.Escape}

local function CheckKey(Table, Key)
        for _, v in next, Table do
                if v == Key then
                        return true
                end
        end
end

CreateElement("Corner", function(Scale, Offset)
        local Corner = Create("UICorner", {
                CornerRadius = UDim.new(Scale or 0, Offset or 10)
        })
        return Corner
end)

CreateElement("Stroke", function(Color, Thickness)
        local Stroke = Create("UIStroke", {
                Color = Color or Color3.fromRGB(255, 255, 255),
                Thickness = Thickness or 1
        })
        return Stroke
end)

CreateElement("List", function(Scale, Offset)
        local List = Create("UIListLayout", {
                SortOrder = Enum.SortOrder.LayoutOrder,
                Padding = UDim.new(Scale or 0, Offset or 0)
        })
        return List
end)

CreateElement("Padding", function(Bottom, Left, Right, Top)
        local Padding = Create("UIPadding", {
                PaddingBottom = UDim.new(0, Bottom or 4),
                PaddingLeft = UDim.new(0, Left or 4),
                PaddingRight = UDim.new(0, Right or 4),
                PaddingTop = UDim.new(0, Top or 4)
        })
        return Padding
end)

CreateElement("TFrame", function()
        local TFrame = Create("Frame", {
                BackgroundTransparency = 1
        })
        return TFrame
end)

CreateElement("Frame", function(Color)
        local Frame = Create("Frame", {
                BackgroundColor3 = Color or Color3.fromRGB(255, 255, 255),
                BorderSizePixel = 0
        })
        return Frame
end)

CreateElement("RoundFrame", function(Color, Scale, Offset)
        local Frame = Create("Frame", {
                BackgroundColor3 = Color or Color3.fromRGB(255, 255, 255),
                BorderSizePixel = 0
        }, {
                Create("UICorner", {
                        CornerRadius = UDim.new(Scale, Offset)
                })
        })
        return Frame
end)

CreateElement("Button", function()
        local Button = Create("TextButton", {
                Text = "",
                AutoButtonColor = false,
                BackgroundTransparency = 1,
                BorderSizePixel = 0
        })
        return Button
end)

CreateElement("ScrollFrame", function(Color, Width)
        local ScrollFrame = Create("ScrollingFrame", {
                BackgroundTransparency = 1,
                MidImage = "rbxassetid://7445543667",
                BottomImage = "rbxassetid://7445543667",
                TopImage = "rbxassetid://7445543667",
                ScrollBarImageColor3 = Color,
                BorderSizePixel = 0,
                ScrollBarThickness = Width,
                CanvasSize = UDim2.new(0, 0, 0, 0)
        })
        return ScrollFrame
end)

CreateElement("Image", function(ImageID)
        local ImageNew = Create("ImageLabel", {
                Image = ImageID,
                BackgroundTransparency = 1
        })

        if GetIcon(ImageID) ~= nil then
                ImageNew.Image = GetIcon(ImageID)
        end        

        return ImageNew
end)

CreateElement("ImageButton", function(ImageID)
        local Image = Create("ImageButton", {
                Image = ImageID,
                BackgroundTransparency = 1
        })
        return Image
end)

CreateElement("Label", function(Text, TextSize, Transparency)
        local Label = Create("TextLabel", {
                Text = Text or "",
                TextColor3 = Color3.fromRGB(240, 240, 240),
                TextTransparency = Transparency or 0,
                TextSize = TextSize or 15,
                Font = Enum.Font.FredokaOne,
                RichText = true,
                BackgroundTransparency = 1,
                TextXAlignment = Enum.TextXAlignment.Left
        })
        return Label
end)

local NotificationHolder = SetProps(SetChildren(MakeElement("TFrame"), {
        SetProps(MakeElement("List"), {
                HorizontalAlignment = Enum.HorizontalAlignment.Center,
                SortOrder = Enum.SortOrder.LayoutOrder,
                VerticalAlignment = Enum.VerticalAlignment.Bottom,
                Padding = UDim.new(0, 5)
        })
}), {
        Position = UDim2.new(1, -25, 1, -25),
        Size = UDim2.new(0, 300, 1, -25),
        AnchorPoint = Vector2.new(1, 1),
        Parent = Orion
})

function OrionLib:MakeNotification(NotificationConfig)
        spawn(function()
                NotificationConfig.Name = NotificationConfig.Name or "Notification"
                NotificationConfig.Content = NotificationConfig.Content or "Test"
                NotificationConfig.Image = NotificationConfig.Image or "rbxassetid://4384403532"
                NotificationConfig.Time = NotificationConfig.Time or 15

                local NotificationParent = SetProps(MakeElement("TFrame"), {
                        Size = UDim2.new(1, 0, 0, 0),
                        AutomaticSize = Enum.AutomaticSize.Y,
                        Parent = NotificationHolder
                })

                local NotificationFrame = SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(25, 25, 25), 0, 10), {
                        Parent = NotificationParent, 
                        Size = UDim2.new(1, 0, 0, 0),
                        Position = UDim2.new(1, -55, 0, 0),
                        BackgroundTransparency = 0,
                        AutomaticSize = Enum.AutomaticSize.Y
                }), {
                        MakeElement("Stroke", Color3.fromRGB(93, 93, 93), 1.2),
                        MakeElement("Padding", 12, 12, 12, 12),
                        SetProps(MakeElement("Image", NotificationConfig.Image), {
                                Size = UDim2.new(0, 20, 0, 20),
                                ImageColor3 = Color3.fromRGB(240, 240, 240),
                                Name = "Icon"
                        }),
                        SetProps(MakeElement("Label", NotificationConfig.Name, 15), {
                                Size = UDim2.new(1, -30, 0, 20),
                                Position = UDim2.new(0, 30, 0, 0),
                                Font = Enum.Font.FredokaOne,
                                Name = "Title"
                        }),
                        SetProps(MakeElement("Label", NotificationConfig.Content, 14), {
                                Size = UDim2.new(1, 0, 0, 0),
                                Position = UDim2.new(0, 0, 0, 25),
                                Font = Enum.Font.FredokaOne,
                                Name = "Content",
                                AutomaticSize = Enum.AutomaticSize.Y,
                                TextColor3 = Color3.fromRGB(200, 200, 200),
                                TextWrapped = true
                        })
                })
                TweenService:Create(NotificationFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 0, 0, 0)}):Play()
                wait(NotificationConfig.Time - 0.88)
                TweenService:Create(NotificationFrame.Icon, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
                TweenService:Create(NotificationFrame, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.6}):Play()
                wait(0.3)
                TweenService:Create(NotificationFrame.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0.9}):Play()
                TweenService:Create(NotificationFrame.Title, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.4}):Play()
                TweenService:Create(NotificationFrame.Content, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.5}):Play()
                wait(0.05)
                NotificationFrame:TweenPosition(UDim2.new(1, 20, 0, 0),'In','Quint',0.8,true)
                wait(1.35)
                NotificationFrame:Destroy()
        end)
end    

function OrionLib:Init()
        if OrionLib.SaveCfg then        
                pcall(function()
                        if isfile(OrionLib.Folder .. "/" .. game.GameId .. ".txt") then
                                LoadCfg(readfile(OrionLib.Folder .. "/" .. game.GameId .. ".txt"))
                                OrionLib:MakeNotification({
                                        Name = "配置",
                                        Content = "游戏的自动加载配置 " .. game.GameId .. ".",
                                        Time = 5
                                })
                        end
                end)                
        end        
end        

	local Tabs = {};

	if WindowConfig.SearchBar then
		local SearchBox = Create("TextBox", {
			Size = UDim2.new(1, 0, 1, 0),
			BackgroundTransparency = 1,
			TextColor3 = Color3.fromRGB(255, 255, 0),
			PlaceholderColor3 = Color3.fromRGB(255,255,255),
			PlaceholderText = WindowConfig.SearchBar.Default or "搜索",
			Font = Enum.Font.GothamBold,
			TextWrapped = true,
			Text = '',
			TextXAlignment = Enum.TextXAlignment.Center,
			TextSize = 14,
			ClearTextOnFocus = WindowConfig.SearchBar.ClearTextOnFocus or true
		})

		local TextboxActual = AddThemeObject(SearchBox, "Text")

		local SearchBar = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 1, 6), {
			Parent = WindowStuff,
			Size = UDim2.new(0, 130, 0, 24),
			Position = UDim2.new(1.013, -12, 0.075, 0),
			AnchorPoint = Vector2.new(1, 0.5)
		}), {
			AddThemeObject(MakeElement("Stroke"), "Stroke"),
			TextboxActual
		}), "Main")

		local function SearchHandle()
			local Text = string.lower(SearchBox.Text);

			for i,v in pairs(Tabs) do
				if v:IsA('TextButton') then
					if string.find(string.lower(i), Text) then
						v.Visible = true
					else
						v.Visible = false
					end
				end
			end
		end

		AddConnection(TextboxActual:GetPropertyChangedSignal("Text"), SearchHandle);
	end

function OrionLib:MakeWindow(WindowConfig)
        local FirstTab = true
        local Minimized = false
        local Loaded = false
        local UIHidden = false

        WindowConfig = WindowConfig or {}
        WindowConfig.Name = WindowConfig.Name or "Orion Library"
        WindowConfig.ConfigFolder = WindowConfig.ConfigFolder or WindowConfig.Name
        WindowConfig.SaveConfig = WindowConfig.SaveConfig or false
        WindowConfig.HidePremium = WindowConfig.HidePremium or false
        if WindowConfig.IntroEnabled == nil then
                WindowConfig.IntroEnabled = true
        end
        WindowConfig.IntroToggleIcon = WindowConfig.IntroToggleIcon or "rbxassetid://8834748103"
        WindowConfig.IntroText = WindowConfig.IntroText or "您好"..game.Players.LocalPlayer.DisplayName.."."
        WindowConfig.CloseCallback = WindowConfig.CloseCallback or function() end
        WindowConfig.ShowIcon = WindowConfig.ShowIcon or false
        WindowConfig.Icon = WindowConfig.Icon or "rbxassetid://8834748103"
        WindowConfig.IntroIcon = WindowConfig.IntroIcon or "rbxassetid://8834748103"
        OrionLib.Folder = WindowConfig.ConfigFolder
        OrionLib.SaveCfg = WindowConfig.SaveConfig

        if WindowConfig.SaveConfig then
                if not isfolder(WindowConfig.ConfigFolder) then
                        makefolder(WindowConfig.ConfigFolder)
                end        
        end

        local TabHolder = AddThemeObject(SetChildren(SetProps(MakeElement("ScrollFrame", Color3.fromRGB(255, 255, 255), 4), {
                Size = UDim2.new(1, 0, 1, -50)
        }), {
                MakeElement("List"),
                MakeElement("Padding", 8, 0, 0, 8)
        }), "Divider")

        AddConnection(TabHolder.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"), function()
                TabHolder.CanvasSize = UDim2.new(0, 0, 0, TabHolder.UIListLayout.AbsoluteContentSize.Y + 16)
        end)

        local CloseBtn = SetChildren(SetProps(MakeElement("Button"), {
                Size = UDim2.new(0.5, 0, 1, 0),
                Position = UDim2.new(0.5, 0, 0, 0),
                BackgroundTransparency = 1
        }), {
                AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://7072725342"), {
                        Position = UDim2.new(0, 9, 0, 6),
                        Size = UDim2.new(0, 18, 0, 18)
                }), "Text")
        })

        local MinimizeBtn = SetChildren(SetProps(MakeElement("Button"), {
                Size = UDim2.new(0.5, 0, 1, 0),
                BackgroundTransparency = 1
        }), {
                AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://7072719338"), {
                        Position = UDim2.new(0, 9, 0, 6),
                        Size = UDim2.new(0, 18, 0, 18),
                        Name = "Ico"
                }), "Text")
        })

        local DragPoint = SetProps(MakeElement("TFrame"), {
                Size = UDim2.new(1, 0, 0, 50)
        })

        local WindowStuff = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 10), {
                Size = UDim2.new(0, 150, 1, -50),
                Position = UDim2.new(0, 0, 0, 50)
        }), {
                AddThemeObject(SetProps(MakeElement("Frame"), {
                        Size = UDim2.new(1, 0, 0, 10),
                        Position = UDim2.new(0, 0, 0, 0)
                }), "Second"), 
                AddThemeObject(SetProps(MakeElement("Frame"), {
                        Size = UDim2.new(0, 10, 1, 0),
                        Position = UDim2.new(1, -10, 0, 0)
                }), "Second"), 
                AddThemeObject(SetProps(MakeElement("Frame"), {
                        Size = UDim2.new(0, 1, 1, 0),
                        Position = UDim2.new(1, -1, 0, 0)
                }), "Stroke"), 
                TabHolder,
                SetChildren(SetProps(MakeElement("TFrame"), {
                        Size = UDim2.new(1, 0, 0, 50),
                        Position = UDim2.new(0, 0, 1, -50)
                }), {
                        AddThemeObject(SetProps(MakeElement("Frame"), {
                                Size = UDim2.new(1, 0, 0, 1)
                        }), "Stroke"), 
                        AddThemeObject(SetChildren(SetProps(MakeElement("Frame"), {
                                AnchorPoint = Vector2.new(0, 0.5),
                                Size = UDim2.new(0, 32, 0, 32),
                                Position = UDim2.new(0, 10, 0.5, 0)
                        }), {
                                SetProps(MakeElement("Image", "https://www.roblox.com/headshot-thumbnail/image?userId=".. LocalPlayer.UserId .."&width=420&height=420&format=png"), {
                                        Size = UDim2.new(1, 0, 1, 0)
                                }),
                                AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://4031889928"), {
                                        Size = UDim2.new(1, 0, 1, 0),
                                }), "Second"),
                                MakeElement("Corner", 1)
                        }), "Divider"),
                        SetChildren(SetProps(MakeElement("TFrame"), {
                                AnchorPoint = Vector2.new(0, 0.5),
                                Size = UDim2.new(0, 32, 0, 32),
                                Position = UDim2.new(0, 10, 0.5, 0)
                        }), {
                                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                                MakeElement("Corner", 1)
                        }),
                        AddThemeObject(SetProps(MakeElement("Label", ""..game.Players.LocalPlayer.DisplayName..".", WindowConfig.HidePremium and 14 or 13), {
                                Size = UDim2.new(1, -60, 0, 13),
                                Position = WindowConfig.HidePremium and UDim2.new(0, 50, 0, 19) or UDim2.new(0, 50, 0, 12),
                                Font = Enum.Font.FredokaOne,
                                ClipsDescendants = true
                        }), "Text"),
                        AddThemeObject(SetProps(MakeElement("Label", "MING", 12), {
                                Size = UDim2.new(1, -60, 0, 12),
                                Position = UDim2.new(0, 50, 1, -25),
                                Visible = not WindowConfig.HidePremium
                        }), "TextDark")
                }),
        }), "Second")

        local WindowName = AddThemeObject(SetProps(MakeElement("Label", WindowConfig.Name, 14), {
                Size = UDim2.new(1, -30, 2, 0),
                Position = UDim2.new(0, 25, 0, -24),
                Font = Enum.Font.FredokaOne,
                TextSize = 20
        }), "Text")

        local WindowTopBarLine = AddThemeObject(SetProps(MakeElement("Frame"), {
                Size = UDim2.new(1, 0, 0, 1),
                Position = UDim2.new(0, 0, 1, -1)
        }), "Stroke")

        local MainWindow = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 10), {
                Parent = Orion,
                Position = UDim2.new(0.5, -307, 0.5, -172),
                Size = UDim2.new(0, 615, 0, 344),
                ClipsDescendants = true
        }), {
                SetChildren(SetProps(MakeElement("TFrame"), {
                        Size = UDim2.new(1, 0, 0, 50),
                        Name = "TopBar"
                }), {
                        WindowName,
                        WindowTopBarLine,
                        AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 7), {
                                Size = UDim2.new(0, 70, 0, 30),
                                Position = UDim2.new(1, -90, 0, 10)
                        }), {
                                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                                AddThemeObject(SetProps(MakeElement("Frame"), {
                                        Size = UDim2.new(0, 1, 1, 0),
                                        Position = UDim2.new(0.5, 0, 0, 0)
                                }), "Stroke"), 
                                CloseBtn,
                                MinimizeBtn
                        }), "Second"), 
                }),
                DragPoint,
                WindowStuff
        }), "Main")

        if WindowConfig.ShowIcon then
                WindowName.Position = UDim2.new(0, 50, 0, -24)
                local WindowIcon = SetProps(MakeElement("Image", WindowConfig.Icon), {
                        Size = UDim2.new(0, 20, 0, 20),
                        Position = UDim2.new(0, 25, 0, 15)
                })
                WindowIcon.Parent = MainWindow.TopBar
        end        

        MakeDraggable(DragPoint, MainWindow)

    local MobileReopenButton = SetChildren(SetProps(MakeElement("Button"), {
                Parent = Orion,
                Size = UDim2.new(0, 40, 0, 40),
                Position = UDim2.new(0.5, -20, 0, 20),
                BackgroundTransparency = 0,
                BackgroundColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Main,
                Visible = false
        }), {
                AddThemeObject(SetProps(MakeElement("Image", WindowConfig.IntroToggleIcon or "http://www.roblox.com/asset/?id=8834748103"), {
                        AnchorPoint = Vector2.new(0.5, 0.5),
                        Position = UDim2.new(0.5, 0, 0.5, 0),
                        Size = UDim2.new(0.7, 0, 0.7, 0),
                }), "Text"),
                MakeElement("Corner", 1)
        })

        AddConnection(CloseBtn.MouseButton1Up, function()
                MainWindow.Visible = false
                MobileReopenButton.Visible = true
                UIHidden = true
                OrionLib:MakeNotification({
                        Name = "冬凌中心:您的 Orion UI 已缩小",
                        Content = "点击窗口以打开界面 QAQ",
                        Time = 5
                })
                WindowConfig.CloseCallback()
        end)

        AddConnection(UserInputService.InputBegan, function(Input)
                if Input.KeyCode == Enum.KeyCode.LeftControl and UIHidden == true then
                        MainWindow.Visible = true
                        MobileReopenButton.Visible = false
                end
        end)

        AddConnection(MobileReopenButton.Activated, function()
                MainWindow.Visible = true
                MobileReopenButton.Visible = false
        end)

        AddConnection(MinimizeBtn.MouseButton1Up, function()
                if Minimized then
                        TweenService:Create(MainWindow, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, 615, 0, 344)}):Play()
                        MinimizeBtn.Ico.Image = "rbxassetid://7072719338"
                        wait(.02)
                        MainWindow.ClipsDescendants = false
                        WindowStuff.Visible = true
                        WindowTopBarLine.Visible = true
                else
                        MainWindow.ClipsDescendants = true
                        WindowTopBarLine.Visible = false
                        MinimizeBtn.Ico.Image = "rbxassetid://7072720870"

                        TweenService:Create(MainWindow, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, WindowName.TextBounds.X + 140, 0, 50)}):Play()
                        wait(0.1)
                        WindowStuff.Visible = false        
                end
                Minimized = not Minimized    
        end)

        local function LoadSequence()
                MainWindow.Visible = false
                local LoadSequenceLogo = SetProps(MakeElement("Image", WindowConfig.IntroIcon), {
                        Parent = Orion,
                        AnchorPoint = Vector2.new(0.5, 0.5),
                        Position = UDim2.new(0.5, 0, 0.4, 0),
                        Size = UDim2.new(0, 28, 0, 28),
                        ImageColor3 = Color3.fromRGB(255, 255, 255),
                        ImageTransparency = 1
                })

                local LoadSequenceText = SetProps(MakeElement("Label", WindowConfig.IntroText, 14), {
                        Parent = Orion,
                        Size = UDim2.new(1, 0, 1, 0),
                        AnchorPoint = Vector2.new(0.5, 0.5),
                        Position = UDim2.new(0.5, 19, 0.5, 0),
                        TextXAlignment = Enum.TextXAlignment.Center,
                        Font = Enum.Font.FredokaOne,
                        TextTransparency = 1
                })

                TweenService:Create(LoadSequenceLogo, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {ImageTransparency = 0, Position = UDim2.new(0.5, 0, 0.5, 0)}):Play()
                wait(0.8)
                TweenService:Create(LoadSequenceLogo, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(0.5, -(LoadSequenceText.TextBounds.X/2), 0.5, 0)}):Play()
                wait(0.3)
                TweenService:Create(LoadSequenceText, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                wait(2)
                TweenService:Create(LoadSequenceText, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                MainWindow.Visible = true
                LoadSequenceLogo:Destroy()
                LoadSequenceText:Destroy()
        end 

        if WindowConfig.IntroEnabled then
                LoadSequence()
        end        

        local TabFunction = {}
        function TabFunction:MakeTab(TabConfig)
                TabConfig = TabConfig or {}
                TabConfig.Name = TabConfig.Name or "Tab"
                TabConfig.Icon = TabConfig.Icon or ""
                TabConfig.PremiumOnly = TabConfig.PremiumOnly or false

                local TabFrame = SetChildren(SetProps(MakeElement("Button"), {
                        Size = UDim2.new(1, 0, 0, 30),
                        Parent = TabHolder
                }), {
                        AddThemeObject(SetProps(MakeElement("Image", TabConfig.Icon), {
                                AnchorPoint = Vector2.new(0, 0.5),
                                Size = UDim2.new(0, 18, 0, 18),
                                Position = UDim2.new(0, 10, 0.5, 0),
                                ImageTransparency = 0.4,
                                Name = "Ico"
                        }), "Text"),
                        AddThemeObject(SetProps(MakeElement("Label", TabConfig.Name, 14), {
                                Size = UDim2.new(1, -35, 1, 0),
                                Position = UDim2.new(0, 35, 0, 0),
                                Font = Enum.Font.FredokaOne,
                                TextTransparency = 0.4,
                                Name = "Title"
                        }), "Text")
                })

                if GetIcon(TabConfig.Icon) ~= nil then
                        TabFrame.Ico.Image = GetIcon(TabConfig.Icon)
                end        

                local Container = AddThemeObject(SetChildren(SetProps(MakeElement("ScrollFrame", Color3.fromRGB(255, 255, 255), 5), {
                        Size = UDim2.new(1, -150, 1, -50),
                        Position = UDim2.new(0, 150, 0, 50),
                        Parent = MainWindow,
                        Visible = false,
                        Name = "ItemContainer"
                }), {
                        MakeElement("List", 0, 6),
                        MakeElement("Padding", 15, 10, 10, 15)
                }), "Divider")

                AddConnection(Container.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"), function()
                        Container.CanvasSize = UDim2.new(0, 0, 0, Container.UIListLayout.AbsoluteContentSize.Y + 30)
                end)

                if FirstTab then
                        FirstTab = false
                        TabFrame.Ico.ImageTransparency = 0
                        TabFrame.Title.TextTransparency = 0
                        TabFrame.Title.Font = Enum.Font.FredokaOne
                        Container.Visible = true
                end    

                AddConnection(TabFrame.MouseButton1Click, function()
                        for _, Tab in next, TabHolder:GetChildren() do
                                if Tab:IsA("TextButton") then
                                        Tab.Title.Font = Enum.Font.FredokaOne
                                        TweenService:Create(Tab.Ico, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {ImageTransparency = 0.4}):Play()
                                        TweenService:Create(Tab.Title, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0.4}):Play()
                                end    
                        end
                        for _, ItemContainer in next, MainWindow:GetChildren() do
                                if ItemContainer.Name == "ItemContainer" then
                                        ItemContainer.Visible = false
                                end    
                        end  
                        TweenService:Create(TabFrame.Ico, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {ImageTransparency = 0}):Play()
                        TweenService:Create(TabFrame.Title, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                        TabFrame.Title.Font = Enum.Font.FredokaOne
                        Container.Visible = true   
                end)

                local function GetElements(ItemParent)
                        local ElementFunction = {}
                        function ElementFunction:AddLabel(Text)
                                local LabelFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                                        Size = UDim2.new(1, 0, 0, 30),
                                        BackgroundTransparency = 0.7,
                                        Parent = ItemParent
                                }), {
                                        AddThemeObject(SetProps(MakeElement("Label", Text, 15), {
                                                Size = UDim2.new(1, -12, 1, 0),
                                                Position = UDim2.new(0, 12, 0, 0),
                                                Font = Enum.Font.FredokaOne,
                                                Name = "Content"
                                        }), "Text"),
                                        AddThemeObject(MakeElement("Stroke"), "Stroke")
                                }), "Second")

                                local LabelFunction = {}
                                function LabelFunction:Set(ToChange)
                                        LabelFrame.Content.Text = ToChange
                                end
                                return LabelFunction
                        end
                        function ElementFunction:AddParagraph(Text, Content)
                                Text = Text or "Text"
                                Content = Content or "Content"

                                local ParagraphFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                                        Size = UDim2.new(1, 0, 0, 30),
                                        BackgroundTransparency = 0.7,
                                        Parent = ItemParent
                                }), {
                                        AddThemeObject(SetProps(MakeElement("Label", Text, 15), {
                                                Size = UDim2.new(1, -12, 0, 14),
                                                Position = UDim2.new(0, 12, 0, 10),
                                                Font = Enum.Font.FredokaOne,
                                                Name = "Title"
                                        }), "Text"),
                                        AddThemeObject(SetProps(MakeElement("Label", "", 13), {
                                                Size = UDim2.new(1, -24, 0, 0),
                                                Position = UDim2.new(0, 12, 0, 26),
                                                Font = Enum.Font.FredokaOne,
                                                Name = "Content",
                                                TextWrapped = true
                                        }), "TextDark"),
                                        AddThemeObject(MakeElement("Stroke"), "Stroke")
                                }), "Second")

                                AddConnection(ParagraphFrame.Content:GetPropertyChangedSignal("Text"), function()
                                        ParagraphFrame.Content.Size = UDim2.new(1, -24, 0, ParagraphFrame.Content.TextBounds.Y)
                                        ParagraphFrame.Size = UDim2.new(1, 0, 0, ParagraphFrame.Content.TextBounds.Y + 35)
                                end)

                                ParagraphFrame.Content.Text = Content

                                local ParagraphFunction = {}
                                function ParagraphFunction:Set(ToChange)
                                        ParagraphFrame.Content.Text = ToChange
                                end
                                return ParagraphFunction
                        end    
                        function ElementFunction:AddButton(ButtonConfig)
                                ButtonConfig = ButtonConfig or {}
                                ButtonConfig.Name = ButtonConfig.Name or "Button"
                                ButtonConfig.Callback = ButtonConfig.Callback or function() end
                                ButtonConfig.Icon = ButtonConfig.Icon or "rbxassetid://3944703587"

                                local Button = {}

                                local Click = SetProps(MakeElement("Button"), {
                                        Size = UDim2.new(1, 0, 1, 0)
                                })

                                local ButtonFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                                        Size = UDim2.new(1, 0, 0, 33),
                                        Parent = ItemParent
                                }), {
                                        AddThemeObject(SetProps(MakeElement("Label", ButtonConfig.Name, 15), {
                                                Size = UDim2.new(1, -12, 1, 0),
                                                Position = UDim2.new(0, 12, 0, 0),
                                                Font = Enum.Font.FredokaOne,
                                                Name = "Content"
                                        }), "Text"),
                                        AddThemeObject(SetProps(MakeElement("Image", ButtonConfig.Icon), {
                                                Size = UDim2.new(0, 20, 0, 20),
                                                Position = UDim2.new(1, -30, 0, 7),
                                        }), "TextDark"),
                                        AddThemeObject(MakeElement("Stroke"), "Stroke"),
                                        Click
                                }), "Second")

                                AddConnection(Click.MouseEnter, function()
                                        TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
                                end)

                                AddConnection(Click.MouseLeave, function()
                                        TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Second}):Play()
                                end)

                                AddConnection(Click.MouseButton1Up, function()
                                        TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
                                        spawn(function()
                                                ButtonConfig.Callback()
                                        end)
                                end)

                                AddConnection(Click.MouseButton1Down, function()
                                        TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 6)}):Play()
                                end)

                                function Button:Set(ButtonText)
                                        ButtonFrame.Content.Text = ButtonText
                                end        

                                return Button
                        end    
                        function ElementFunction:AddToggle(ToggleConfig)
                                ToggleConfig = ToggleConfig or {}
                                ToggleConfig.Name = ToggleConfig.Name or "Toggle"
                                ToggleConfig.Default = ToggleConfig.Default or false
                                ToggleConfig.Callback = ToggleConfig.Callback or function() end
                                ToggleConfig.Color = ToggleConfig.Color or Color3.fromRGB(9, 99, 195)
                                ToggleConfig.Flag = ToggleConfig.Flag or nil
                                ToggleConfig.Save = ToggleConfig.Save or false

                                local Toggle = {Value = ToggleConfig.Default, Save = ToggleConfig.Save}

                                local Click = SetProps(MakeElement("Button"), {
                                        Size = UDim2.new(1, 0, 1, 0)
                                })

                                local ToggleBox = SetChildren(SetProps(MakeElement("RoundFrame", ToggleConfig.Color, 0, 4), {
                                        Size = UDim2.new(0, 24, 0, 24),
                                        Position = UDim2.new(1, -24, 0.5, 0),
                                        AnchorPoint = Vector2.new(0.5, 0.5)
                                }), {
                                        SetProps(MakeElement("Stroke"), {
                                                Color = ToggleConfig.Color,
                                                Name = "Stroke",
                                                Transparency = 0.5
                                        }),
                                        SetProps(MakeElement("Image", "rbxassetid://3944680095"), {
                                                Size = UDim2.new(0, 20, 0, 20),
                                                AnchorPoint = Vector2.new(0.5, 0.5),
                                                Position = UDim2.new(0.5, 0, 0.5, 0),
                                                ImageColor3 = Color3.fromRGB(255, 255, 255),
                                                Name = "Ico"
                                        }),
                                })

                                local ToggleFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                                        Size = UDim2.new(1, 0, 0, 38),
                                        Parent = ItemParent
                                }), {
                                        AddThemeObject(SetProps(MakeElement("Label", ToggleConfig.Name, 15), {
                                                Size = UDim2.new(1, -12, 1, 0),
                                                Position = UDim2.new(0, 12, 0, 0),
                                                Font = Enum.Font.FredokaOne,
                                                Name = "Content"
                                        }), "Text"),
                                        AddThemeObject(MakeElement("Stroke"), "Stroke"),
                                        ToggleBox,
                                        Click
                                }), "Second")

                                function Toggle:Set(Value)
                                        Toggle.Value = Value
                                        TweenService:Create(ToggleBox, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Toggle.Value and ToggleConfig.Color or OrionLib.Themes.Default.Divider}):Play()
                                        TweenService:Create(ToggleBox.Stroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = Toggle.Value and ToggleConfig.Color or OrionLib.Themes.Default.Stroke}):Play()
                                        TweenService:Create(ToggleBox.Ico, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {ImageTransparency = Toggle.Value and 0 or 1, Size = Toggle.Value and UDim2.new(0, 20, 0, 20) or UDim2.new(0, 8, 0, 8)}):Play()
                                        ToggleConfig.Callback(Toggle.Value)
                                end    

                                Toggle:Set(Toggle.Value)

                                AddConnection(Click.MouseEnter, function()
                                        TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
                                end)

                                AddConnection(Click.MouseLeave, function()
                                        TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Second}):Play()
                                end)

                                AddConnection(Click.MouseButton1Up, function()
                                        TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
                                        SaveCfg(game.GameId)
                                        Toggle:Set(not Toggle.Value)
                                end)

                                AddConnection(Click.MouseButton1Down, function()
                                        TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 6)}):Play()
                                end)

                                if ToggleConfig.Flag then
                                        OrionLib.Flags[ToggleConfig.Flag] = Toggle
                                end        
                                return Toggle
                        end  
                        function ElementFunction:AddSlider(SliderConfig)
                                SliderConfig = SliderConfig or {}
                                SliderConfig.Name = SliderConfig.Name or "Slider"
                                SliderConfig.Min = SliderConfig.Min or 0
                                SliderConfig.Max = SliderConfig.Max or 100
                                SliderConfig.Increment = SliderConfig.Increment or 1
                                SliderConfig.Default = SliderConfig.Default or 50
                                SliderConfig.Callback = SliderConfig.Callback or function() end
                                SliderConfig.ValueName = SliderConfig.ValueName or ""
                                SliderConfig.Color = SliderConfig.Color or Color3.fromRGB(9, 149, 98)
                                SliderConfig.Flag = SliderConfig.Flag or nil
                                SliderConfig.Save = SliderConfig.Save or false

                                local Slider = {Value = SliderConfig.Default, Save = SliderConfig.Save}
                                local Dragging = false

                                local SliderDrag = SetChildren(SetProps(MakeElement("RoundFrame", SliderConfig.Color, 0, 5), {
                                        Size = UDim2.new(0, 0, 1, 0),
                                        BackgroundTransparency = 0.3,
                                        ClipsDescendants = true
                                }), {
                                        AddThemeObject(SetProps(MakeElement("Label", "value", 13), {
                                                Size = UDim2.new(1, -12, 0, 14),
                                                Position = UDim2.new(0, 12, 0, 6),
                                                Font = Enum.Font.FredokaOne,
                                                Name = "Value",
                                                TextTransparency = 0
                                        }), "Text")
                                })

                                local SliderBar = SetChildren(SetProps(MakeElement("RoundFrame", SliderConfig.Color, 0, 5), {
                                        Size = UDim2.new(1, -24, 0, 26),
                                        Position = UDim2.new(0, 12, 0, 30),
                                        BackgroundTransparency = 0.9
                                }), {
                                        SetProps(MakeElement("Stroke"), {
                                                Color = SliderConfig.Color
                                        }),
                                        AddThemeObject(SetProps(MakeElement("Label", "value", 13), {
                                                Size = UDim2.new(1, -12, 0, 14),
                                                Position = UDim2.new(0, 12, 0, 6),
                                                Font = Enum.Font.FredokaOne,
                                                Name = "Value",
                                                TextTransparency = 0.8
                                        }), "Text"),
                                        SliderDrag
                                })

                                local SliderFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 4), {
                                        Size = UDim2.new(1, 0, 0, 65),
                                        Parent = ItemParent
                                }), {
                                        AddThemeObject(SetProps(MakeElement("Label", SliderConfig.Name, 15), {
                                                Size = UDim2.new(1, -12, 0, 14),
                                                Position = UDim2.new(0, 12, 0, 10),
                                                Font = Enum.Font.FredokaOne,
                                                Name = "Content"
                                        }), "Text"),
                                        AddThemeObject(MakeElement("Stroke"), "Stroke"),
                                        SliderBar
                                }), "Second")

                                SliderBar.InputBegan:Connect(function(Input)
                                        if Input.UserInputType == Enum.UserInputType.MouseButton1 or Input.UserInputType == Enum.UserInputType.Touch then 
                                                Dragging = true 
                                        end 
                                end)
                                SliderBar.InputEnded:Connect(function(Input) 
                                        if Input.UserInputType == Enum.UserInputType.MouseButton1 or Input.UserInputType == Enum.UserInputType.Touch then 
                                                Dragging = false 
                                        end 
                                end)

                                UserInputService.InputChanged:Connect(function(Input)
                                        if Dragging then 
                                                local SizeScale = math.clamp((Mouse.X - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X, 0, 1)
                                                Slider:Set(SliderConfig.Min + ((SliderConfig.Max - SliderConfig.Min) * SizeScale)) 
                                                SaveCfg(game.GameId)
                                        end
                                end)

                                function Slider:Set(Value)
                                        self.Value = math.clamp(Round(Value, SliderConfig.Increment), SliderConfig.Min, SliderConfig.Max)
                                        TweenService:Create(SliderDrag,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Size = UDim2.fromScale((self.Value - SliderConfig.Min) / (SliderConfig.Max - SliderConfig.Min), 1)}):Play()
                                        SliderBar.Value.Text = tostring(self.Value) .. " " .. SliderConfig.ValueName
                                        SliderDrag.Value.Text = tostring(self.Value) .. " " .. SliderConfig.ValueName
                                        SliderConfig.Callback(self.Value)
                                end      

                                Slider:Set(Slider.Value)
                                if SliderConfig.Flag then                                
                                        OrionLib.Flags[SliderConfig.Flag] = Slider
                                end
                                return Slider
                        end  
                        function ElementFunction:AddDropdown(DropdownConfig)
                                DropdownConfig = DropdownConfig or {}
                                DropdownConfig.Name = DropdownConfig.Name or "Dropdown"
                                DropdownConfig.Options = DropdownConfig.Options or {}
                                DropdownConfig.Default = DropdownConfig.Default or ""
                                DropdownConfig.Callback = DropdownConfig.Callback or function() end
                                DropdownConfig.Flag = DropdownConfig.Flag or nil
                                DropdownConfig.Save = DropdownConfig.Save or false

                                local Dropdown = {Value = DropdownConfig.Default, Options = DropdownConfig.Options, Buttons = {}, Toggled = false, Type = "Dropdown", Save = DropdownConfig.Save}
                                local MaxElements = 5

                                if not table.find(Dropdown.Options, Dropdown.Value) then
                                        Dropdown.Value = "..."
                                end

                                local DropdownList = MakeElement("List")

                                local DropdownContainer = AddThemeObject(SetProps(SetChildren(MakeElement("ScrollFrame", Color3.fromRGB(40, 40, 40), 4), {
                                        DropdownList
                                }), {
                                        Parent = ItemParent,
                                        Position = UDim2.new(0, 0, 0, 38),
                                        Size = UDim2.new(1, 0, 1, -38),
                                        ClipsDescendants = true
                                }), "Divider")

                                local Click = SetProps(MakeElement("Button"), {
                                        Size = UDim2.new(1, 0, 1, 0)
                                })

                                local DropdownFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                                        Size = UDim2.new(1, 0, 0, 38),
                                        Parent = ItemParent,
                                        ClipsDescendants = true
                                }), {
                                        DropdownContainer,
                                        SetProps(SetChildren(MakeElement("TFrame"), {
                                                AddThemeObject(SetProps(MakeElement("Label", DropdownConfig.Name, 15), {
                                                        Size = UDim2.new(1, -12, 1, 0),
                                                        Position = UDim2.new(0, 12, 0, 0),
                                                        Font = Enum.Font.FredokaOne,
                                                        Name = "Content"
                                                }), "Text"),
                                                AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://7072706796"), {
                                                        Size = UDim2.new(0, 20, 0, 20),
                                                        AnchorPoint = Vector2.new(0, 0.5),
                                                        Position = UDim2.new(1, -30, 0.5, 0),
                                                        ImageColor3 = Color3.fromRGB(240, 240, 240),
                                                        Name = "Ico"
                                                }), "TextDark"),
                                                AddThemeObject(SetProps(MakeElement("Label", "Selected", 13), {
                                                        Size = UDim2.new(1, -40, 1, 0),
                                                        Font = Enum.Font.FredokaOne,
                                                        Name = "Selected",
                                                        TextXAlignment = Enum.TextXAlignment.Right
                                                }), "TextDark"),
                                                AddThemeObject(SetProps(MakeElement("Frame"), {
                                                        Size = UDim2.new(1, 0, 0, 1),
                                                        Position = UDim2.new(0, 0, 1, -1),
                                                        Name = "Line",
                                                        Visible = false
                                                }), "Stroke"), 
                                                Click
                                        }), {
                                                Size = UDim2.new(1, 0, 0, 38),
                                                ClipsDescendants = true,
                                                Name = "F"
                                        }),
                                        AddThemeObject(MakeElement("Stroke"), "Stroke"),
                                        MakeElement("Corner")
                                }), "Second")

                                AddConnection(DropdownList:GetPropertyChangedSignal("AbsoluteContentSize"), function()
                                        DropdownContainer.CanvasSize = UDim2.new(0, 0, 0, DropdownList.AbsoluteContentSize.Y)
                                end)  

                                local function AddOptions(Options)
                                        for _, Option in pairs(Options) do
                                                local OptionBtn = AddThemeObject(SetProps(SetChildren(MakeElement("Button", Color3.fromRGB(40, 40, 40)), {
                                                        MakeElement("Corner", 0, 6),
                                                        AddThemeObject(SetProps(MakeElement("Label", Option, 13, 0.4), {
                                                                Position = UDim2.new(0, 8, 0, 0),
                                                                Size = UDim2.new(1, -8, 1, 0),
                                                                Name = "Title"
                                                        }), "Text")
                                                }), {
                                                        Parent = DropdownContainer,
                                                        Size = UDim2.new(1, 0, 0, 28),
                                                        BackgroundTransparency = 1,
                                                        ClipsDescendants = true
                                                }), "Divider")

                                                AddConnection(OptionBtn.MouseButton1Click, function()
                                                        Dropdown:Set(Option)
                                                        SaveCfg(game.GameId)
                                                end)

                                                Dropdown.Buttons[Option] = OptionBtn
                                        end
                                end        

                                function Dropdown:Refresh(Options, Delete)
                                        if Delete then
                                                for _,v in pairs(Dropdown.Buttons) do
                                                        v:Destroy()
                                                end    
                                                table.clear(Dropdown.Options)
                                                table.clear(Dropdown.Buttons)
                                        end
                                        Dropdown.Options = Options
                                        AddOptions(Dropdown.Options)
                                end  

                                function Dropdown:Set(Value)
                                        if not table.find(Dropdown.Options, Value) then
                                                Dropdown.Value = "..."
                                                DropdownFrame.F.Selected.Text = Dropdown.Value
                                                for _, v in pairs(Dropdown.Buttons) do
                                                        TweenService:Create(v,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{BackgroundTransparency = 1}):Play()
                                                        TweenService:Create(v.Title,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{TextTransparency = 0.4}):Play()
                                                end        
                                                return
                                        end

                                        Dropdown.Value = Value
                                        DropdownFrame.F.Selected.Text = Dropdown.Value

                                        for _, v in pairs(Dropdown.Buttons) do
                                                TweenService:Create(v,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{BackgroundTransparency = 1}):Play()
                                                TweenService:Create(v.Title,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{TextTransparency = 0.4}):Play()
                                        end        
                                        TweenService:Create(Dropdown.Buttons[Value],TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{BackgroundTransparency = 0}):Play()
                                        TweenService:Create(Dropdown.Buttons[Value].Title,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{TextTransparency = 0}):Play()
                                        return DropdownConfig.Callback(Dropdown.Value)
                                end

                                AddConnection(Click.MouseButton1Click, function()
                                        Dropdown.Toggled = not Dropdown.Toggled
                                        DropdownFrame.F.Line.Visible = Dropdown.Toggled
                                        TweenService:Create(DropdownFrame.F.Ico,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Rotation = Dropdown.Toggled and 180 or 0}):Play()
                                        if #Dropdown.Options > MaxElements then
                                                TweenService:Create(DropdownFrame,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Size = Dropdown.Toggled and UDim2.new(1, 0, 0, 38 + (MaxElements * 28)) or UDim2.new(1, 0, 0, 38)}):Play()
                                        else
                                                TweenService:Create(DropdownFrame,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Size = Dropdown.Toggled and UDim2.new(1, 0, 0, DropdownList.AbsoluteContentSize.Y + 38) or UDim2.new(1, 0, 0, 38)}):Play()
                                        end
                                end)

                                Dropdown:Refresh(Dropdown.Options, false)
                                Dropdown:Set(Dropdown.Value)
                                if DropdownConfig.Flag then                                
                                        OrionLib.Flags[DropdownConfig.Flag] = Dropdown
                                end
                                return Dropdown
                        end
                        function ElementFunction:AddBind(BindConfig)
                                BindConfig.Name = BindConfig.Name or "Bind"
                                BindConfig.Default = BindConfig.Default or Enum.KeyCode.Unknown
                                BindConfig.Hold = BindConfig.Hold or false
                                BindConfig.Callback = BindConfig.Callback or function() end
                                BindConfig.Flag = BindConfig.Flag or nil
                                BindConfig.Save = BindConfig.Save or false

                                local Bind = {Value, Binding = false, Type = "Bind", Save = BindConfig.Save}
                                local Holding = false

                                local Click = SetProps(MakeElement("Button"), {
                                        Size = UDim2.new(1, 0, 1, 0)
                                })

                                local BindBox = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 4), {
                                        Size = UDim2.new(0, 24, 0, 24),
                                        Position = UDim2.new(1, -12, 0.5, 0),
                                        AnchorPoint = Vector2.new(1, 0.5)
                                }), {
                                        AddThemeObject(MakeElement("Stroke"), "Stroke"),
                                        AddThemeObject(SetProps(MakeElement("Label", BindConfig.Name, 14), {
                                                Size = UDim2.new(1, 0, 1, 0),
                                                Font = Enum.Font.FredokaOne,
                                                TextXAlignment = Enum.TextXAlignment.Center,
                                                Name = "Value"
                                        }), "Text")
                                }), "Main")

                                local BindFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                                        Size = UDim2.new(1, 0, 0, 38),
                                        Parent = ItemParent
                                }), {
                                        AddThemeObject(SetProps(MakeElement("Label", BindConfig.Name, 15), {
                                                Size = UDim2.new(1, -12, 1, 0),
                                                Position = UDim2.new(0, 12, 0, 0),
                                                Font = Enum.Font.FredokaOne,
                                                Name = "Content"
                                        }), "Text"),
                                        AddThemeObject(MakeElement("Stroke"), "Stroke"),
                                        BindBox,
                                        Click
                                }), "Second")

                                AddConnection(BindBox.Value:GetPropertyChangedSignal("Text"), function()
                                        TweenService:Create(BindBox, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, BindBox.Value.TextBounds.X + 16, 0, 24)}):Play()
                                end)

                                AddConnection(Click.InputEnded, function(Input)
                                        if Input.UserInputType == Enum.UserInputType.MouseButton1 or Input.UserInputType == Enum.UserInputType.Touch then
                                                if Bind.Binding then return end
                                                Bind.Binding = true
                                                BindBox.Value.Text = ""
                                        end
                                end)

                                AddConnection(UserInputService.InputBegan, function(Input)
                                        if UserInputService:GetFocusedTextBox() then return end
                                        if (Input.KeyCode.Name == Bind.Value or Input.UserInputType.Name == Bind.Value) and not Bind.Binding then
                                                if BindConfig.Hold then
                                                        Holding = true
                                                        BindConfig.Callback(Holding)
                                                else
                                                        BindConfig.Callback()
                                                end
                                        elseif Bind.Binding then
                                                local Key
                                                pcall(function()
                                                        if not CheckKey(BlacklistedKeys, Input.KeyCode) then
                                                                Key = Input.KeyCode
                                                        end
                                                end)
                                                pcall(function()
                                                        if CheckKey(WhitelistedMouse, Input.UserInputType) and not Key then
                                                                Key = Input.UserInputType
                                                        end
                                                end)
                                                Key = Key or Bind.Value
                                                Bind:Set(Key)
                                                SaveCfg(game.GameId)
                                        end
                                end)

                                AddConnection(UserInputService.InputEnded, function(Input)
                                        if Input.KeyCode.Name == Bind.Value or Input.UserInputType.Name == Bind.Value then
                                                if BindConfig.Hold and Holding then
                                                        Holding = false
                                                        BindConfig.Callback(Holding)
                                                end
                                        end
                                end)

                                AddConnection(Click.MouseEnter, function()
                                        TweenService:Create(BindFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
                                end)

                                AddConnection(Click.MouseLeave, function()
                                        TweenService:Create(BindFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Second}):Play()
                                end)

                                AddConnection(Click.MouseButton1Up, function()
                                        TweenService:Create(BindFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
                                end)

                                AddConnection(Click.MouseButton1Down, function()
                                        TweenService:Create(BindFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 6)}):Play()
                                end)

                                function Bind:Set(Key)
                                        Bind.Binding = false
                                        Bind.Value = Key or Bind.Value
                                        Bind.Value = Bind.Value.Name or Bind.Value
                                        BindBox.Value.Text = Bind.Value
                                end

                                Bind:Set(BindConfig.Default)
                                if BindConfig.Flag then                                
                                        OrionLib.Flags[BindConfig.Flag] = Bind
                                end
                                return Bind
                        end  
                        function ElementFunction:AddTextbox(TextboxConfig)
                                TextboxConfig = TextboxConfig or {}
                                TextboxConfig.Name = TextboxConfig.Name or "Textbox"
                                TextboxConfig.Default = TextboxConfig.Default or ""
                                TextboxConfig.TextDisappear = TextboxConfig.TextDisappear or false
                                TextboxConfig.Callback = TextboxConfig.Callback or function() end

                                local Click = SetProps(MakeElement("Button"), {
                                        Size = UDim2.new(1, 0, 1, 0)
                                })

                                local TextboxActual = AddThemeObject(Create("TextBox", {
                                        Size = UDim2.new(1, 0, 1, 0),
                                        BackgroundTransparency = 1,
                                        TextColor3 = Color3.fromRGB(255, 255, 255),
                                        PlaceholderColor3 = Color3.fromRGB(210,210,210),
                                        PlaceholderText = "Input",
                                        Font = Enum.Font.FredokaOne,
                                        TextXAlignment = Enum.TextXAlignment.Center,
                                        TextSize = 14,
                                        ClearTextOnFocus = false
                                }), "Text")

                                local TextContainer = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 4), {
                                        Size = UDim2.new(0, 24, 0, 24),
                                        Position = UDim2.new(1, -12, 0.5, 0),
                                        AnchorPoint = Vector2.new(1, 0.5)
                                }), {
                                        AddThemeObject(MakeElement("Stroke"), "Stroke"),
                                        TextboxActual
                                }), "Main")


                                local TextboxFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                                        Size = UDim2.new(1, 0, 0, 38),
                                        Parent = ItemParent
                                }), {
                                        AddThemeObject(SetProps(MakeElement("Label", TextboxConfig.Name, 15), {
                                                Size = UDim2.new(1, -12, 1, 0),
                                                Position = UDim2.new(0, 12, 0, 0),
                                                Font = Enum.Font.FredokaOne,
                                                Name = "Content"
                                        }), "Text"),
                                        AddThemeObject(MakeElement("Stroke"), "Stroke"),
                                        TextContainer,
                                        Click
                                }), "Second")

                                AddConnection(TextboxActual:GetPropertyChangedSignal("Text"), function()
                                        TweenService:Create(TextContainer, TweenInfo.new(0.45, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, TextboxActual.TextBounds.X + 16, 0, 24)}):Play()
                                end)

                                AddConnection(TextboxActual.FocusLost, function()
                                        TextboxConfig.Callback(TextboxActual.Text)
                                        if TextboxConfig.TextDisappear then
                                                TextboxActual.Text = ""
                                        end        
                                end)

                                TextboxActual.Text = TextboxConfig.Default

                                AddConnection(Click.MouseEnter, function()
                                        TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
                                end)

                                AddConnection(Click.MouseLeave, function()
                                        TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Second}):Play()
                                end)

                                AddConnection(Click.MouseButton1Up, function()
                                        TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
                                        TextboxActual:CaptureFocus()
                                end)

                                AddConnection(Click.MouseButton1Down, function()
                                        TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 6)}):Play()
                                end)
                        end 
                        function ElementFunction:AddColorpicker(ColorpickerConfig)
                                ColorpickerConfig = ColorpickerConfig or {}
                                ColorpickerConfig.Name = ColorpickerConfig.Name or "Colorpicker"
                                ColorpickerConfig.Default = ColorpickerConfig.Default or Color3.fromRGB(255,255,255)
                                ColorpickerConfig.Callback = ColorpickerConfig.Callback or function() end
                                ColorpickerConfig.Flag = ColorpickerConfig.Flag or nil
                                ColorpickerConfig.Save = ColorpickerConfig.Save or false

                                local ColorH, ColorS, ColorV = 1, 1, 1
                                local Colorpicker = {Value = ColorpickerConfig.Default, Toggled = false, Type = "Colorpicker", Save = ColorpickerConfig.Save}

                                local ColorSelection = Create("ImageLabel", {
                                        Size = UDim2.new(0, 18, 0, 18),
                                        Position = UDim2.new(select(3, Color3.toHSV(Colorpicker.Value))),
                                        ScaleType = Enum.ScaleType.Fit,
                                        AnchorPoint = Vector2.new(0.5, 0.5),
                                        BackgroundTransparency = 1,
                                        Image = "http://www.roblox.com/asset/?id=4805639000"
                                })

                                local HueSelection = Create("ImageLabel", {
                                        Size = UDim2.new(0, 18, 0, 18),
                                        Position = UDim2.new(0.5, 0, 1 - select(1, Color3.toHSV(Colorpicker.Value))),
                                        ScaleType = Enum.ScaleType.Fit,
                                        AnchorPoint = Vector2.new(0.5, 0.5),
                                        BackgroundTransparency = 1,
                                        Image = "http://www.roblox.com/asset/?id=4805639000"
                                })

                                local Color = Create("ImageLabel", {
                                        Size = UDim2.new(1, -25, 1, 0),
                                        Visible = false,
                                        Image = "rbxassetid://4155801252"
                                }, {
                                        Create("UICorner", {CornerRadius = UDim.new(0, 5)}),
                                        ColorSelection
                                })

                                local Hue = Create("Frame", {
                                        Size = UDim2.new(0, 20, 1, 0),
                                        Position = UDim2.new(1, -20, 0, 0),
                                        Visible = false
                                }, {
                                        Create("UIGradient", {Rotation = 270, Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)), ColorSequenceKeypoint.new(0.20, Color3.fromRGB(234, 255, 0)), ColorSequenceKeypoint.new(0.40, Color3.fromRGB(21, 255, 0)), ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 255, 255)), ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 17, 255)), ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 0, 251)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 4))},}),
                                        Create("UICorner", {CornerRadius = UDim.new(0, 5)}),
                                        HueSelection
                                })

                                local ColorpickerContainer = Create("Frame", {
                                        Position = UDim2.new(0, 0, 0, 32),
                                        Size = UDim2.new(1, 0, 1, -32),
                                        BackgroundTransparency = 1,
                                        ClipsDescendants = true
                                }, {
                                        Hue,
                                        Color,
                                        Create("UIPadding", {
                                                PaddingLeft = UDim.new(0, 35),
                                                PaddingRight = UDim.new(0, 35),
                                                PaddingBottom = UDim.new(0, 10),
                                                PaddingTop = UDim.new(0, 17)
                                        })
                                })

                                local Click = SetProps(MakeElement("Button"), {
                                        Size = UDim2.new(1, 0, 1, 0)
                                })

                                local ColorpickerBox = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 4), {
                                        Size = UDim2.new(0, 24, 0, 24),
                                        Position = UDim2.new(1, -12, 0.5, 0),
                                        AnchorPoint = Vector2.new(1, 0.5)
                                }), {
                                        AddThemeObject(MakeElement("Stroke"), "Stroke")
                                }), "Main")

                                local ColorpickerFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 5), {
                                        Size = UDim2.new(1, 0, 0, 38),
                                        Parent = ItemParent
                                }), {
                                        SetProps(SetChildren(MakeElement("TFrame"), {
                                                AddThemeObject(SetProps(MakeElement("Label", ColorpickerConfig.Name, 15), {
                                                        Size = UDim2.new(1, -12, 1, 0),
                                                        Position = UDim2.new(0, 12, 0, 0),
                                                        Font = Enum.Font.FredokaOne,
                                                        Name = "Content"
                                                }), "Text"),
                                                ColorpickerBox,
                                                Click,
                                                AddThemeObject(SetProps(MakeElement("Frame"), {
                                                        Size = UDim2.new(1, 0, 0, 1),
                                                        Position = UDim2.new(0, 0, 1, -1),
                                                        Name = "Line",
                                                        Visible = false
                                                }), "Stroke"), 
                                        }), {
                                                Size = UDim2.new(1, 0, 0, 38),
                                                ClipsDescendants = true,
                                                Name = "F"
                                        }),
                                        ColorpickerContainer,
                                        AddThemeObject(MakeElement("Stroke"), "Stroke"),
                                }), "Second")

                                AddConnection(Click.MouseButton1Click, function()
                                        Colorpicker.Toggled = not Colorpicker.Toggled
                                        TweenService:Create(ColorpickerFrame,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Size = Colorpicker.Toggled and UDim2.new(1, 0, 0, 148) or UDim2.new(1, 0, 0, 38)}):Play()
                                        Color.Visible = Colorpicker.Toggled
                                        Hue.Visible = Colorpicker.Toggled
                                        ColorpickerFrame.F.Line.Visible = Colorpicker.Toggled
                                end)

                                local function UpdateColorPicker()
                                        ColorpickerBox.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
                                        Color.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)
                                        Colorpicker:Set(ColorpickerBox.BackgroundColor3)
                                        ColorpickerConfig.Callback(ColorpickerBox.BackgroundColor3)
                                        SaveCfg(game.GameId)
                                end

                                ColorH = 1 - (math.clamp(HueSelection.AbsolutePosition.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) / Hue.AbsoluteSize.Y)
                                ColorS = (math.clamp(ColorSelection.AbsolutePosition.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) / Color.AbsoluteSize.X)
                                ColorV = 1 - (math.clamp(ColorSelection.AbsolutePosition.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) / Color.AbsoluteSize.Y)

                                AddConnection(Color.InputBegan, function(input)
                                        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                                                if ColorInput then
                                                        ColorInput:Disconnect()
                                                end
                                                ColorInput = AddConnection(RunService.RenderStepped, function()
                                                        local ColorX = (math.clamp(Mouse.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) / Color.AbsoluteSize.X)
                                                        local ColorY = (math.clamp(Mouse.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) / Color.AbsoluteSize.Y)
                                                        ColorSelection.Position = UDim2.new(ColorX, 0, ColorY, 0)
                                                        ColorS = ColorX
                                                        ColorV = 1 - ColorY
                                                        UpdateColorPicker()
                                                end)
                                        end
                                end)

                                AddConnection(Color.InputEnded, function(input)
                                        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                                                if ColorInput then
                                                        ColorInput:Disconnect()
                                                end
                                        end
                                end)

                                AddConnection(Hue.InputBegan, function(input)
                                        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                                                if HueInput then
                                                        HueInput:Disconnect()
                                                end;

                                                HueInput = AddConnection(RunService.RenderStepped, function()
                                                        local HueY = (math.clamp(Mouse.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) / Hue.AbsoluteSize.Y)

                                                        HueSelection.Position = UDim2.new(0.5, 0, HueY, 0)
                                                        ColorH = 1 - HueY

                                                        UpdateColorPicker()
                                                end)
                                        end
                                end)

                                AddConnection(Hue.InputEnded, function(input)
                                        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                                                if HueInput then
                                                        HueInput:Disconnect()
                                                end
                                        end
                                end)

                                function Colorpicker:Set(Value)
                                        Colorpicker.Value = Value
                                        ColorpickerBox.BackgroundColor3 = Colorpicker.Value
                                        ColorpickerConfig.Callback(Colorpicker.Value)
                                end

                                Colorpicker:Set(Colorpicker.Value)
                                if ColorpickerConfig.Flag then                                
                                        OrionLib.Flags[ColorpickerConfig.Flag] = Colorpicker
                                end
                                return Colorpicker
                        end  
                        return ElementFunction   
                end        

                local ElementFunction = {}

                function ElementFunction:AddSection(SectionConfig)
                        SectionConfig.Name = SectionConfig.Name or "Section"

                        local SectionFrame = SetChildren(SetProps(MakeElement("TFrame"), {
                                Size = UDim2.new(1, 0, 0, 26),
                                Parent = Container
                        }), {
                                AddThemeObject(SetProps(MakeElement("Label", SectionConfig.Name, 14), {
                                        Size = UDim2.new(1, -12, 0, 16),
                                        Position = UDim2.new(0, 0, 0, 3),
                                        Font = Enum.Font.FredokaOne
                                }), "TextDark"),
                                SetChildren(SetProps(MakeElement("TFrame"), {
                                        AnchorPoint = Vector2.new(0, 0),
                                        Size = UDim2.new(1, 0, 1, -24),
                                        Position = UDim2.new(0, 0, 0, 23),
                                        Name = "Holder"
                                }), {
                                        MakeElement("List", 0, 6)
                                }),
                        })

                        AddConnection(SectionFrame.Holder.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"), function()
                                SectionFrame.Size = UDim2.new(1, 0, 0, SectionFrame.Holder.UIListLayout.AbsoluteContentSize.Y + 31)
                                SectionFrame.Holder.Size = UDim2.new(1, 0, 0, SectionFrame.Holder.UIListLayout.AbsoluteContentSize.Y)
                        end)

                        local SectionFunction = {}
                        for i, v in next, GetElements(SectionFrame.Holder) do
                                SectionFunction[i] = v 
                        end
                        return SectionFunction
                end        

                for i, v in next, GetElements(Container) do
                        ElementFunction[i] = v 
                end

                if TabConfig.PremiumOnly then
                        for i, v in next, ElementFunction do
                                ElementFunction[i] = function() end
                        end    
                        Container:FindFirstChild("UIListLayout"):Destroy()
                        Container:FindFirstChild("UIPadding"):Destroy()
                        SetChildren(SetProps(MakeElement("TFrame"), {
                                Size = UDim2.new(1, 0, 1, 0),
                                Parent = ItemParent
                        }), {
                                AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://3610239960"), {
                                        Size = UDim2.new(0, 18, 0, 18),
                                        Position = UDim2.new(0, 15, 0, 15),
                                        ImageTransparency = 0.4
                                }), "Text"),
                                AddThemeObject(SetProps(MakeElement("Label", "Unauthorised Access", 14), {
                                        Size = UDim2.new(1, -38, 0, 14),
                                        Position = UDim2.new(0, 38, 0, 18),
                                        TextTransparency = 0.4
                                }), "Text"),
                                AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://4483345875"), {
                                        Size = UDim2.new(0, 56, 0, 56),
                                        Position = UDim2.new(0, 84, 0, 110),
                                }), "Text"),
                                AddThemeObject(SetProps(MakeElement("Label", "Premium Features", 14), {
                                        Size = UDim2.new(1, -150, 0, 14),
                                        Position = UDim2.new(0, 150, 0, 112),
                                        Font = Enum.Font.FredokaOne
                                }), "Text"),
                                AddThemeObject(SetProps(MakeElement("Label", "This part of the script is locked to Sirius Premium users. Purchase Premium in the Discord server (discord.gg/sirius)", 12), {
                                        Size = UDim2.new(1, -200, 0, 14),
                                        Position = UDim2.new(0, 150, 0, 138),
                                        TextWrapped = true,
                                        TextTransparency = 0.4
                                }), "Text")
                        })
                end
                return ElementFunction   
        end  

        return TabFunction
end   

local Configs_HUB = {
  Cor_Hub = Color3.fromRGB(15, 15, 15),
  Cor_Options = Color3.fromRGB(15, 15, 15),
  Cor_Stroke = Color3.fromRGB(60, 60, 60),
  Cor_Text = Color3.fromRGB(240, 240, 240),
  Cor_DarkText = Color3.fromRGB(140, 140, 140),
  Corner_Radius = UDim.new(0, 4),
  Text_Font = Enum.Font.FredokaOne
}

local TweenService = game:GetService("TweenService")

local function Create(instance, parent, props)
  local new = Instance.new(instance, parent)
  if props then
    table.foreach(props, function(prop, value)
      new[prop] = value
    end)
  end
  return new
end

local function SetProps(instance, props)
  if instance and props then
    table.foreach(props, function(prop, value)
      instance[prop] = value
    end)
  end
  return instance
end

local function Corner(parent, props)
  local new = Create("UICorner", parent)
  new.CornerRadius = Configs_HUB.Corner_Radius
  if props then
    SetProps(new, props)
  end
  return new
end

local function Stroke(parent, props)
  local new = Create("UIStroke", parent)
  new.Color = Configs_HUB.Cor_Stroke
  new.ApplyStrokeMode = "Border"
  if props then
    SetProps(new, props)
  end
  return new
end

local function CreateTween(instance, prop, value, time, tweenWait)
  local tween = TweenService:Create(instance,
  TweenInfo.new(time, Enum.EasingStyle.Linear),
  {[prop] = value})
  tween:Play()
  if tweenWait then
    tween.Completed:Wait()
  end
end

local ScreenGui = Create("ScreenGui", Orion)

local Menu_Notifi = Create("Frame", ScreenGui, {
  Size = UDim2.new(0, 300, 1, 0),
  Position = UDim2.new(1, 0, 0, 0),
  AnchorPoint = Vector2.new(1, 0),
  BackgroundTransparency = 1
})

local Padding = Create("UIPadding", Menu_Notifi, {
  PaddingLeft = UDim.new(0, 25),
  PaddingTop = UDim.new(0, 25),
  PaddingBottom = UDim.new(0, 50)
})

local ListLayout = Create("UIListLayout", Menu_Notifi, {
  Padding = UDim.new(0, 15),
  VerticalAlignment = "Bottom"
})

function OrionLib:MakeNotifi(Configs)
  local Title = Configs.Title or "Title!"
  local text = Configs.Text or "Notification content... what will it say??"
  local timewait = Configs.Time or 5

  local Frame1 = Create("Frame", Menu_Notifi, {
    Size = UDim2.new(2, 0, 0, 0),
    BackgroundTransparency = 1,
    AutomaticSize = "Y",
    Name = "Title"
  })

  local Frame2 = Create("Frame", Frame1, {
    Size = UDim2.new(0, Menu_Notifi.Size.X.Offset - 50, 0, 0),
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    Position = UDim2.new(0, Menu_Notifi.Size.X.Offset, 0, 0),
    AutomaticSize = "Y"
  })Corner(Frame2)

  local TextLabel = Create("TextLabel", Frame2, {
    Size = UDim2.new(1, 0, 0, 25),
    Font = Configs_HUB.Text_Font,
    BackgroundTransparency = 1,
    Text = Title,
    TextSize = 20,
    Position = UDim2.new(0, 20, 0, 5),
    TextXAlignment = "Left",
    TextColor3 = Configs_HUB.Cor_Text
  })

  local TextButton = Create("TextButton", Frame2, {
    Text = "X",
    Font = Configs_HUB.Text_Font,
    TextSize = 20,
    BackgroundTransparency = 1,
    TextColor3 = Color3.fromRGB(200, 200, 200),
    Position = UDim2.new(1, -5, 0, 5),
    AnchorPoint = Vector2.new(1, 0),
    Size = UDim2.new(0, 25, 0, 25)
  })

  local TextLabel = Create("TextLabel", Frame2, {
    Size = UDim2.new(1, -30, 0, 0),
    Position = UDim2.new(0, 20, 0, TextButton.Size.Y.Offset + 10),
    TextSize = 15,
    TextColor3 = Configs_HUB.Cor_DarkText,
    TextXAlignment = "Left",
    TextYAlignment = "Top",
    AutomaticSize = "Y",
    Text = text,
    Font = Configs_HUB.Text_Font,
    BackgroundTransparency = 1,
    AutomaticSize = Enum.AutomaticSize.Y,
    TextWrapped = true
  })

  local FrameSize = Create("Frame", Frame2, {
    Size = UDim2.new(1, 0, 0, 2),
    BackgroundColor3 = Configs_HUB.Cor_Stroke,
    Position = UDim2.new(0, 2, 0, 30),
    BorderSizePixel = 0
  })Corner(FrameSize)Create("Frame", Frame2, {
    Size = UDim2.new(0, 0, 0, 5),
    Position = UDim2.new(0, 0, 1, 5),
    BackgroundTransparency = 1
  })

  task.spawn(function()
    CreateTween(FrameSize, "Size", UDim2.new(0, 0, 0, 2), timewait, true)
  end)

  TextButton.MouseButton1Click:Connect(function()
    CreateTween(Frame2, "Position", UDim2.new(0, -20, 0, 0), 0.1, true)
    CreateTween(Frame2, "Position", UDim2.new(0, Menu_Notifi.Size.X.Offset, 0, 0), 0.5, true)
    Frame1:Destroy()
  end)

  task.spawn(function()
    CreateTween(Frame2, "Position", UDim2.new(0, -20, 0, 0), 0.5, true)
    CreateTween(Frame2, "Position", UDim2.new(), 0.1, true)task.wait(timewait)
    if Frame2 then
      CreateTween(Frame2, "Position", UDim2.new(0, -20, 0, 0), 0.1, true)
      CreateTween(Frame2, "Position", UDim2.new(0, Menu_Notifi.Size.X.Offset, 0, 0), 0.5, true)
      Frame1:Destroy()
    end
  end)
end

function OrionLib:Destroy()
        Orion:Destroy()
end

return OrionLib
