-- 创建UI库表
local SimpleUILibrary = {}

-- 依赖服务
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- 创建窗口函数（省略，未改动）
function SimpleUILibrary:CreateWindow(title, size, position)
    local window = {}
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
    screenGui.Name = "SimpleUI"
    
    local borderFrame = Instance.new("Frame")
    borderFrame.Size = size or UDim2.new(0, 300, 0, 250)
    borderFrame.Position = position or UDim2.new(0.5, -150, 0.5, -125)
    borderFrame.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
    borderFrame.BorderSizePixel = 0
    borderFrame.Parent = screenGui
    
    local borderCorner = Instance.new("UICorner")
    borderCorner.CornerRadius = UDim.new(0, 12)
    borderCorner.Parent = borderFrame
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, -4, 1, -4)
    frame.Position = UDim2.new(0, 2, 0, 2)
    frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    frame.BorderSizePixel = 0
    frame.ClipsDescendants = true
    frame.Parent = borderFrame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = frame
    
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(35, 35, 35)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 20))
    }
    gradient.Rotation = 90
    gradient.Parent = frame
    
    local shadow = Instance.new("ImageLabel")
    shadow.Size = UDim2.new(1, 30, 1, 30)
    shadow.Position = UDim2.new(0, -15, 0, -15)
    shadow.Image = "rbxassetid://1316045217"
    shadow.ImageTransparency = 0.6
    shadow.BackgroundTransparency = 1
    shadow.ZIndex = 0
    shadow.Parent = borderFrame
    
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    titleBar.BorderSizePixel = 0
    titleBar.Parent = frame
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 10)
    titleCorner.Parent = titleBar
    
    local titleGradient = Instance.new("UIGradient")
    titleGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 50, 50)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(30, 30, 30))
    }
    titleGradient.Rotation = 90
    titleGradient.Parent = titleBar
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -40, 1, 0)
    titleLabel.Position = UDim2.new(0, 10, 0, 0)
    titleLabel.Text = title or "Simple UI"
    titleLabel.TextColor3 = Color3.fromRGB(230, 230, 230)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 16
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = titleBar
    
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 20, 0, 20)
    closeButton.Position = UDim2.new(1, -25, 0, 5)
    closeButton.Text = "X"
    closeButton.TextColor3 = Color3.fromRGB(255, 100, 100)
    closeButton.BackgroundTransparency = 1
    closeButton.Font = Enum.Font.GothamBold
    closeButton.TextSize = 14
    closeButton.Parent = titleBar
    
    closeButton.MouseEnter:Connect(function()
        TweenService:Create(closeButton, TweenInfo.new(0.2), {TextColor3 = Color3.fromRGB(255, 150, 150)}):Play()
    end)
    closeButton.MouseLeave:Connect(function()
        TweenService:Create(closeButton, TweenInfo.new(0.2), {TextColor3 = Color3.fromRGB(255, 100, 100)}):Play()
    end)
    closeButton.MouseButton1Click:Connect(function()
        borderFrame:Destroy()
    end)
    
    local dragging, dragInput, dragStart, startPos
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = borderFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    titleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            borderFrame.Position = UDim2.new(
                startPos.X.Scale, startPos.X.Offset + delta.X,
                startPos.Y.Scale, startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    window.Frame = frame
    window.Elements = {}
    
    -- 添加按钮（省略）
    function window:AddButton(text, callback)
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(0, 180, 0, 30)
        button.Position = UDim2.new(0, 10, 0, #window.Elements * 40 + 40)
        button.Text = text or "Button"
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        button.Font = Enum.Font.Gotham
        button.TextSize = 14
        button.Parent = frame
        
        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 8)
        buttonCorner.Parent = button
        
        local buttonGradient = Instance.new("UIGradient")
        buttonGradient.Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 80, 80)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 50, 50))
        }
        buttonGradient.Rotation = 90
        buttonGradient.Parent = button
        
        button.MouseEnter:Connect(function()
            TweenService:Create(buttonGradient, TweenInfo.new(0.2), {Offset = Vector2.new(0, 0.2)}):Play()
        end)
        button.MouseLeave:Connect(function()
            TweenService:Create(buttonGradient, TweenInfo.new(0.2), {Offset = Vector2.new(0, 0)}):Play()
        end)
        button.MouseButton1Down:Connect(function()
            TweenService:Create(button, TweenInfo.new(0.1), {Size = UDim2.new(0, 175, 0, 28)}):Play()
        end)
        button.MouseButton1Up:Connect(function()
            TweenService:Create(button, TweenInfo.new(0.1), {Size = UDim2.new(0, 180, 0, 30)}):Play()
            if callback then callback() end
        end)
        
        table.insert(window.Elements, button)
    end
    
    -- 添加标签（省略）
    function window:AddLabel(text)
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(0, 200, 0, 30)
        label.Position = UDim2.new(0, 10, 0, #window.Elements * 40 + 40)
        label.Text = text or "Label"
        label.TextColor3 = Color3.fromRGB(200, 200, 200)
        label.BackgroundTransparency = 1
        label.Font = Enum.Font.Gotham
        label.TextSize = 14
        label.Parent = frame
        
        table.insert(window.Elements, label)
    end
    
    -- 添加滑块（省略）
    function window:AddSlider(text, min, max, default, callback)
        local sliderFrame = Instance.new("Frame")
        sliderFrame.Size = UDim2.new(0, 200, 0, 40)
        sliderFrame.Position = UDim2.new(0, 10, 0, #window.Elements * 40 + 40)
        sliderFrame.BackgroundTransparency = 1
        sliderFrame.Parent = frame
        
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, 0, 0, 20)
        label.Text = text .. ": " .. tostring(default or min)
        label.TextColor3 = Color3.fromRGB(200, 200, 200)
        label.BackgroundTransparency = 1
        label.Font = Enum.Font.Gotham
        label.TextSize = 12
        label.Parent = sliderFrame
        
        local track = Instance.new("Frame")
        track.Size = UDim2.new(1, 0, 0, 6)
        track.Position = UDim2.new(0, 0, 1, -10)
        track.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        track.BorderSizePixel = 0
        track.Parent = sliderFrame
        
        local trackCorner = Instance.new("UICorner")
        trackCorner.CornerRadius = UDim.new(0, 3)
        trackCorner.Parent = track
        
        local fill = Instance.new("Frame")
        fill.Size = UDim2.new(0, 0, 1, 0)
        fill.BackgroundColor3 = Color3.fromRGB(100, 150, 255)
        fill.BorderSizePixel = 0
        fill.Parent = track
        
        local fillCorner = Instance.new("UICorner")
        fillCorner.CornerRadius = UDim.new(0, 3)
        fillCorner.Parent = fill
        
        local knob = Instance.new("TextButton")
        knob.Size = UDim2.new(0, 14, 0, 14)
        knob.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
        knob.BorderSizePixel = 0
        knob.Text = ""
        knob.Parent = track
        
        local knobCorner = Instance.new("UICorner")
        knobCorner.CornerRadius = UDim.new(0, 7)
        knobCorner.Parent = knob
        
        min = min or 0
        max = max or 100
        default = math.clamp(default or min, min, max)
        local value = default
        local trackWidth = 200
        
        local ratio = (value - min) / (max - min)
        fill.Size = UDim2.new(ratio, 0, 1, 0)
        knob.Position = UDim2.new(ratio, -7, 0, -4)
        
        local dragging = false
        local function updateSlider(input)
            local mouseX = input.Position.X
            local trackX = track.AbsolutePosition.X
            local relativeX = math.clamp(mouseX - trackX, 0, trackWidth)
            ratio = relativeX / trackWidth
            value = min + (ratio * (max - min))
            
            TweenService:Create(fill, TweenInfo.new(0.1), {Size = UDim2.new(ratio, 0, 1, 0)}):Play()
            TweenService:Create(knob, TweenInfo.new(0.1), {Position = UDim2.new(ratio, -7, 0, -4)}):Play()
            label.Text = text .. ": " .. math.floor(value)
            
            if callback then
                callback(value)
            end
        end
        
        knob.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                updateSlider(input)
            end
        end)
        
        knob.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)
        
        knob.InputChanged:Connect(function(input)
            if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                updateSlider(input)
            end
        end)
        
        table.insert(window.Elements, sliderFrame)
    end
    
    -- 优化后的下拉菜单（选择菜单优化）
    function window:AddDropdown(text, options, default, callback)
        local dropdownFrame = Instance.new("Frame")
        dropdownFrame.Size = UDim2.new(0, 180, 0, 30)
        dropdownFrame.Position = UDim2.new(0, 10, 0, #window.Elements * 40 + 40)
        dropdownFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        dropdownFrame.Parent = frame
        
        local dropdownCorner = Instance.new("UICorner")
        dropdownCorner.CornerRadius = UDim.new(0, 8)
        dropdownCorner.Parent = dropdownFrame
        
        local dropdownGradient = Instance.new("UIGradient")
        dropdownGradient.Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 80, 80)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 50, 50))
        }
        dropdownGradient.Rotation = 90
        dropdownGradient.Parent = dropdownFrame
        
        local dropdownButton = Instance.new("TextButton")
        dropdownButton.Size = UDim2.new(1, -20, 1, 0)
        dropdownButton.Position = UDim2.new(0, 5, 0, 0)
        dropdownButton.Text = default or options[1] or "Select"
        dropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        dropdownButton.BackgroundTransparency = 1
        dropdownButton.Font = Enum.Font.Gotham
        dropdownButton.TextSize = 14
        dropdownButton.TextXAlignment = Enum.TextXAlignment.Left
        dropdownButton.Parent = dropdownFrame
        
        local arrow = Instance.new("ImageLabel")
        arrow.Size = UDim2.new(0, 10, 0, 10)
        arrow.Position = UDim2.new(1, -15, 0.5, -5)
        arrow.BackgroundTransparency = 1
        arrow.Image = "rbxassetid://6034818372"
        arrow.ImageColor3 = Color3.fromRGB(200, 200, 200)
        arrow.Parent = dropdownFrame
        
        local dropdownList = Instance.new("ScrollingFrame")
        dropdownList.Size = UDim2.new(1, 0, 0, 0)
        dropdownList.Position = UDim2.new(0, 0, 1, 2)
        dropdownList.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        dropdownList.BorderSizePixel = 0
        dropdownList.ClipsDescendants = true
        dropdownList.Visible = false
        dropdownList.CanvasSize = UDim2.new(0, 0, 0, #options * 32) -- 增加高度以适应分隔线
        dropdownList.ScrollBarThickness = 4
        dropdownList.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
        dropdownList.Parent = dropdownFrame
        
        local listCorner = Instance.new("UICorner")
        listCorner.CornerRadius = UDim.new(0, 8)
        listCorner.Parent = dropdownList
        
        local listGradient = Instance.new("UIGradient")
        listGradient.Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 50, 50)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(35, 35, 35))
        }
        listGradient.Rotation = 90
        listGradient.Parent = dropdownList
        
        -- 选项填充
        local selected = default or options[1]
        local optionButtons = {}
        for i, option in ipairs(options) do
            local optionFrame = Instance.new("Frame")
            optionFrame.Size = UDim2.new(1, 0, 0, 30)
            optionFrame.Position = UDim2.new(0, 0, 0, (i-1) * 32)
            optionFrame.BackgroundTransparency = 1
            optionFrame.Parent = dropdownList
            
            local optionButton = Instance.new("TextButton")
            optionButton.Size = UDim2.new(1, -10, 1, -2)
            optionButton.Position = UDim2.new(0, 5, 0, 1)
            optionButton.Text = option
            optionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            optionButton.BackgroundTransparency = (option == selected) and 0.7 or 1
            optionButton.BackgroundColor3 = Color3.fromRGB(100, 150, 255)
            optionButton.Font = Enum.Font.Gotham
            optionButton.TextSize = 14
            optionButton.TextXAlignment = Enum.TextXAlignment.Left
            optionButton.Parent = optionFrame
            
            -- 分隔线（最后一个选项不加）
            if i < #options then
                local separator = Instance.new("Frame")
                separator.Size = UDim2.new(1, -10, 0, 1)
                separator.Position = UDim2.new(0, 5, 1, 0)
                separator.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
                separator.BorderSizePixel = 0
                separator.Parent = optionFrame
            end
            
            optionButton.MouseEnter:Connect(function()
                if option ~= selected then
                    TweenService:Create(optionButton, TweenInfo.new(0.2), {BackgroundTransparency = 0.9, BackgroundColor3 = Color3.fromRGB(80, 80, 80)}):Play()
                end
            end)
            optionButton.MouseLeave:Connect(function()
                if option ~= selected then
                    TweenService:Create(optionButton, TweenInfo.new(0.2), {BackgroundTransparency = 1}):Play()
                end
            end)
            optionButton.MouseButton1Down:Connect(function()
                if option ~= selected then
                    TweenService:Create(optionButton, TweenInfo.new(0.1), {Size = UDim2.new(1, -12, 1, -4)}):Play()
                end
            end)
            optionButton.MouseButton1Up:Connect(function()
                if option ~= selected then
                    TweenService:Create(optionButton, TweenInfo.new(0.1), {Size = UDim2.new(1, -10, 1, -2)}):Play()
                end
                selected = option
                dropdownButton.Text = option
                for _, btn in pairs(optionButtons) do
                    local isSelected = (btn.Text == selected)
                    TweenService:Create(btn, TweenInfo.new(0.2), {
                        BackgroundTransparency = isSelected and 0.7 or 1,
                        BackgroundColor3 = Color3.fromRGB(100, 150, 255)
                    }):Play()
                end
                TweenService:Create(dropdownList, TweenInfo.new(0.2), {Size = UDim2.new(1, 0, 0, 0)}):Play()
                TweenService:Create(arrow, TweenInfo.new(0.2), {Rotation = 0}):Play()
                wait(0.2)
                dropdownList.Visible = false
                if callback then
                    callback(option)
                end
            end)
            
            table.insert(optionButtons, optionButton)
        end
        
        dropdownButton.MouseButton1Click:Connect(function()
            if dropdownList.Visible then
                TweenService:Create(dropdownList, TweenInfo.new(0.2), {Size = UDim2.new(1, 0, 0, 0)}):Play()
                TweenService:Create(arrow, TweenInfo.new(0.2), {Rotation = 0}):Play()
                wait(0.2)
                dropdownList.Visible = false
            else
                dropdownList.Visible = true
                local maxHeight = math.min(#options * 32, 128) -- 增加高度适应分隔线
                TweenService:Create(dropdownList, TweenInfo.new(0.2), {Size = UDim2.new(1, 0, 0, maxHeight)}):Play()
                TweenService:Create(arrow, TweenInfo.new(0.2), {Rotation = 180}):Play()
            end
        end)
        
        UserInputService.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 and dropdownList.Visible then
                if not dropdownFrame:IsAncestorOf(input.Target) then
                    TweenService:Create(dropdownList, TweenInfo.new(0.2), {Size = UDim2.new(1, 0, 0, 0)}):Play()
                    TweenService:Create(arrow, TweenInfo.new(0.2), {Rotation = 0}):Play()
                    wait(0.2)
                    dropdownList.Visible = false
                end
            end
        end)
        
        table.insert(window.Elements, dropdownFrame)
    end
    
    return window
end

-- 返回UI库
return SimpleUILibrary
